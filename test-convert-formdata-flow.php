<?php

use App\Application\Http\Controllers\Ad\DraftController;
use App\Domain\User\Models\User;
use Illuminate\Http\Request;

require_once __DIR__ . '/vendor/autoload.php';
$app = require_once __DIR__ . '/bootstrap/app.php';
$app->make(\Illuminate\Contracts\Console\Kernel::class)->bootstrap();

echo "๐ฏ ะกะะะฃะะฏะฆะะฏ ะะะะะะะ ะะะขะะะ: FormData โ convertFormDataToPlainObject โ Controller\n";
echo "=========================================================================\n\n";

/**
 * ะะพะฟะธั ััะฝะบัะธะธ convertFormDataToPlainObject ะธะท useAdFormSubmission.ts
 * ะดะปั ัะธะผัะปััะธะธ ัะพะณะพ, ััะพ ะฟัะพะธััะพะดะธั ะฒะพ frontend
 */
function convertFormDataToPlainObject($formDataArray): array {
    $plainData = [];
    
    foreach ($formDataArray as $key => $value) {
        // ะะฑัะฐะฑะพัะบะฐ ะผะฐััะธะฒะพะฒ (photos[0], photos[1])
        if (strpos($key, '[') !== false) {
            if (preg_match('/^(.+?)\[(\d+)\]$/', $key, $matches)) {
                $fieldName = $matches[1];
                $index = (int)$matches[2];
                if (!isset($plainData[$fieldName])) {
                    $plainData[$fieldName] = [];
                }
                $plainData[$fieldName][$index] = $value;
            }
        } else {
            // ะะฐััะธะฝะณ JSON ัััะพะบ (ะบะฐะบ ะฒ ะพัะธะณะธะฝะฐะปะต)
            if (is_string($value) && (strpos($value, '{') === 0 || strpos($value, '[') === 0)) {
                $decoded = json_decode($value, true);
                if (json_last_error() === JSON_ERROR_NONE) {
                    $plainData[$key] = $decoded;
                    echo "๐ convertFormDataToPlainObject: $key ะดะตะบะพะดะธัะพะฒะฐะฝ ะธะท JSON ัััะพะบะธ ะฒ " . gettype($decoded) . "\n";
                } else {
                    $plainData[$key] = $value;
                }
            } else {
                $plainData[$key] = $value;
            }
        }
    }
    
    return $plainData;
}

try {
    // ะะพะปััะฐะตะผ ะฟะพะปัะทะพะฒะฐัะตะปั
    $user = User::first();
    if (!$user) {
        echo "โ ะะตั ะฟะพะปัะทะพะฒะฐัะตะปะตะน ะฒ ะะ\n";
        exit;
    }

    echo "โ ะะพะปัะทะพะฒะฐัะตะปั ะฝะฐะนะดะตะฝ: {$user->email}\n\n";

    // ะจะะ 1: ะะฐะฝะฝัะต ะบะฐะบ ะพะฝะธ ะฟัะธัะพะดัั ะธะท FormData
    echo "๐ ะจะะ 1: ะััะพะดะฝัะต ะดะฐะฝะฝัะต ะธะท FormData\n";
    $formDataArray = [
        'status' => 'draft',
        'specialty' => 'ะผะฐััะฐะถ',
        'work_format' => 'individual',
        'category' => 'relax',
        
        // JSON ะฟะพะปั ะบะฐะบ ัััะพะบะธ (ะธะท FormData)
        'prices' => '[]',
        'services' => '{"hygiene_amenities":{"shower_before":{"enabled":false,"price_comment":""}}}',
        'clients' => '["men"]',
        'service_provider' => '["women"]',
        'features' => '[]',
        'schedule' => '[]',
        'geo' => '[]',
    ];
    
    foreach (['services', 'clients', 'prices', 'geo'] as $field) {
        $value = $formDataArray[$field];
        echo "  $field: " . gettype($value) . " = '$value'\n";
    }

    // ะจะะ 2: ะัะธะผะตะฝัะตะผ convertFormDataToPlainObject (ัะธะผัะปััะธั frontend)
    echo "\n๐ ะจะะ 2: ะะพัะปะต convertFormDataToPlainObject\n";
    $convertedData = convertFormDataToPlainObject($formDataArray);
    
    foreach (['services', 'clients', 'prices', 'geo'] as $field) {
        $value = $convertedData[$field];
        echo "  $field: " . gettype($value);
        if (is_array($value)) {
            echo " ั " . count($value) . " ัะปะตะผะตะฝัะฐะผะธ";
        } else {
            echo " = '$value'";
        }
        echo "\n";
    }

    // ะจะะ 3: ะกะพะทะดะฐะตะผ Request ะธ ะฟัะพะฒะตััะตะผ ัะธะฟั
    echo "\n๐ ะจะะ 3: ะะพัะปะต ัะพะทะดะฐะฝะธั Laravel Request\n";
    $request = new Request($convertedData);
    
    foreach (['services', 'clients', 'prices', 'geo'] as $field) {
        $value = $request->input($field);
        echo "  $field: " . gettype($value);
        if (is_array($value)) {
            echo " ั " . count($value) . " ัะปะตะผะตะฝัะฐะผะธ";
        } else {
            echo " = '$value'";
        }
        echo "\n";
    }
    
    // ะจะะ 4: ะะฒัะพัะธะทัะตะผ ะฟะพะปัะทะพะฒะฐัะตะปั ะธ ะฒัะทัะฒะฐะตะผ ะบะพะฝััะพะปะปะตั
    auth()->login($user);
    
    echo "\n๐ง ะจะะ 4: ะัะทัะฒะฐะตะผ ะบะพะฝััะพะปะปะตั...\n";
    $controller = app(DraftController::class);
    $response = $controller->store($request);

    echo "โ ะะพะฝััะพะปะปะตั ะฒัะฟะพะปะฝะตะฝ ััะฟะตัะฝะพ!\n";
    echo "๐ ะขะธะฟ ะพัะฒะตัะฐ: " . get_class($response) . "\n";

} catch (\Exception $e) {
    echo "โ ะะจะะะะ: " . $e->getMessage() . "\n";
    echo "ะขะธะฟ: " . get_class($e) . "\n";
    echo "ะคะฐะนะป: " . $e->getFile() . ":" . $e->getLine() . "\n";
    
    echo "\n๐ ะขัะฐััะธัะพะฒะบะฐ ะพัะธะฑะบะธ:\n";
    echo $e->getTraceAsString() . "\n";
}

echo "\n๐ ะัะพะฒะตัััะต ะปะพะณะธ Laravel ะดะปั ะพัะปะฐะดะพัะฝัั ะดะฐะฝะฝัั\n";