/**
 * Composable –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ IP-–∞–¥—Ä–µ—Å—É
 * 
 * –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ DaData API
 * - –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ –≤—Ä–µ–º—è —Å–µ—Å—Å–∏–∏ (sessionStorage)
 * - Graceful degradation —Å fallback –Ω–∞ –ú–æ—Å–∫–≤—É –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
 * - Privacy by design - —Ç–æ–ª—å–∫–æ –≥–æ—Ä–æ–¥, –Ω–∏–∫–∞–∫–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 * 
 * @author Claude AI
 * @created 2025-09-08
 */

import { ref, readonly, type Ref } from 'vue'

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const IP_API_URL = 'http://ip-api.com/json/'
const CACHE_KEY = 'spa_user_ip_location'
const CACHE_DURATION = 24 * 60 * 60 * 1000 // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

// Fallback –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–ú–æ—Å–∫–≤–∞, —Ü–µ–Ω—Ç—Ä)
const MOSCOW_FALLBACK = {
  city: '–ú–æ—Å–∫–≤–∞',
  coordinates: { lat: 55.7558, lng: 37.6173 },
  source: 'fallback' as const
}

// TypeScript –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
interface IpLocationResult {
  city: string
  coordinates: { lat: number; lng: number }
  source: 'ip' | 'fallback' | 'cache'
  timestamp?: number
  error?: string
}

interface IpApiResponse {
  status: string
  country: string
  countryCode: string
  region: string
  regionName: string
  city: string
  zip: string
  lat: number
  lon: number
  timezone: string
  isp: string
  org: string
  as: string
  query: string
}

interface CachedLocation extends IpLocationResult {
  timestamp: number
}

interface UseIpGeolocationReturn {
  detectUserLocation: () => Promise<IpLocationResult>
  clearLocationCache: () => void
  isLocationCached: () => boolean
  isLoading: Readonly<Ref<boolean>>
}

/**
 * Composable –¥–ª—è IP-–≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
 */
export function useIpGeolocation(): UseIpGeolocationReturn {
  // –†–µ–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  const isLoading = ref(false)

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  const detectUserLocation = async (): Promise<IpLocationResult> => {
    try {
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à —Å–µ—Å—Å–∏–∏
      const cachedLocation = getCachedLocation()
      if (cachedLocation && isCacheValid(cachedLocation)) {
        console.log('üó∫Ô∏è [IP Geolocation] –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é:', cachedLocation.city)
        return {
          city: cachedLocation.city,
          coordinates: cachedLocation.coordinates,
          source: 'cache'
        }
      }

      // 2. –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ IP-API.com
      console.log('üåç [IP Geolocation] –ó–∞–ø—Ä–æ—Å –∫ IP-API.com...')
      isLoading.value = true

      // –°–æ–∑–¥–∞–µ–º AbortController –¥–ª—è —Ç–∞–π–º–∞—É—Ç–∞ (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ –≤—Å–µ–º–∏ –±—Ä–∞—É–∑–µ—Ä–∞–º–∏)
      const controller = new AbortController()
      const timeoutId = setTimeout(() => controller.abort(), 5000) // 5 —Å–µ–∫—É–Ω–¥

      const response = await fetch(IP_API_URL, {
        method: 'GET',
        headers: {
          'Accept': 'application/json'
        },
        signal: controller.signal
      })

      clearTimeout(timeoutId)

      if (!response.ok) {
        throw new Error(`IP-API.com HTTP ${response.status}: ${response.statusText}`)
      }

      const data: IpApiResponse = await response.json()

      // 3. –ü–∞—Ä—Å–∏–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
      if (data?.status === 'success' && data.city && typeof data.lat === 'number' && typeof data.lon === 'number') {
        const lat = data.lat
        const lng = data.lon

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤–∞–ª–∏–¥–Ω—ã–µ (–≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–µ–ª—ã)
        if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {
          throw new Error(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: lat=${lat}, lng=${lng}`)
        }

        const result: IpLocationResult = {
          city: data.city,
          coordinates: { lat, lng },
          source: 'ip',
          timestamp: Date.now()
        }

        // 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–µ—à
        setCachedLocation(result)
        console.log('‚úÖ [IP Geolocation] –ì–æ—Ä–æ–¥ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω:', result.city)

        return result
      } else {
        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç IP-API.com')
      }

    } catch (error) {
      // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏, –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      console.warn('‚ö†Ô∏è [IP Geolocation] –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–æ—Ä–æ–¥ –ø–æ IP:', error)

      // 5. –í–æ–∑–≤—Ä–∞—â–∞–µ–º fallback –Ω–∞ –ú–æ—Å–∫–≤—É
      console.log('üèõÔ∏è [IP Geolocation] –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –Ω–∞ –ú–æ—Å–∫–≤—É')
      return {
        ...MOSCOW_FALLBACK,
        error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      }
    } finally {
      isLoading.value = false
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ sessionStorage
   */
  const getCachedLocation = (): CachedLocation | null => {
    try {
      const cached = sessionStorage.getItem(CACHE_KEY)
      if (!cached) return null

      const parsed: CachedLocation = JSON.parse(cached)
      
      // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–µ—à–∞
      if (!parsed.city || !parsed.coordinates || !parsed.timestamp) {
        console.warn('‚ö†Ô∏è [IP Geolocation] –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–µ—à–∞, –æ—á–∏—â–∞–µ–º')
        clearLocationCache()
        return null
      }

      return parsed
    } catch (error) {
      console.warn('‚ö†Ô∏è [IP Geolocation] –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–µ—à–∞:', error)
      clearLocationCache()
      return null
    }
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –≤ –∫–µ—à
   */
  const setCachedLocation = (location: IpLocationResult): void => {
    try {
      const cacheData: CachedLocation = {
        ...location,
        timestamp: Date.now()
      }
      
      sessionStorage.setItem(CACHE_KEY, JSON.stringify(cacheData))
      console.log('üíæ [IP Geolocation] –õ–æ–∫–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∫–µ—à')
    } catch (error) {
      console.warn('‚ö†Ô∏è [IP Geolocation] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–µ—à:', error)
      // –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∫–µ—à–∞ (–Ω–µ —É—Å—Ç–∞—Ä–µ–ª –ª–∏)
   */
  const isCacheValid = (cached: CachedLocation): boolean => {
    const now = Date.now()
    const cacheAge = now - cached.timestamp
    
    return cacheAge < CACHE_DURATION
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –ª–æ–∫–∞—Ü–∏–∏
   */
  const clearLocationCache = (): void => {
    try {
      sessionStorage.removeItem(CACHE_KEY)
      console.log('üóëÔ∏è [IP Geolocation] –ö–µ—à –ª–æ–∫–∞—Ü–∏–∏ –æ—á–∏—â–µ–Ω')
    } catch (error) {
      console.warn('‚ö†Ô∏è [IP Geolocation] –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞:', error)
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤–∞–ª–∏–¥–Ω–æ–≥–æ –∫–µ—à–∞
   */
  const isLocationCached = (): boolean => {
    const cached = getCachedLocation()
    return cached !== null && isCacheValid(cached)
  }

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å composable
  return {
    detectUserLocation,
    clearLocationCache,
    isLocationCached,
    isLoading: readonly(isLoading)
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
export type { IpLocationResult }
