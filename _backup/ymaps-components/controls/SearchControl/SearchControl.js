/**
 * SearchControl - –ö–æ–Ω—Ç—Ä–æ–ª –ø–æ–∏—Å–∫–∞ –¥–ª—è Yandex Maps
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –∞–¥—Ä–µ—Å–∞–º, POI –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º —Å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º
 * 
 * @version 1.0.0
 * @author SPA Platform
 * @created 2025-09-04
 */

import ControlBase from '../ControlBase.js'
import { DOM, Position, Events, Accessibility } from '../../utils/controlHelpers.js'

/**
 * –ö–ª–∞—Å—Å –∫–æ–Ω—Ç—Ä–æ–ª–∞ –ø–æ–∏—Å–∫–∞
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–µ—Å—Ç, –∞–¥—Ä–µ—Å–æ–≤ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –Ω–∞ –∫–∞—Ä—Ç–µ
 */
export default class SearchControl extends ControlBase {
  /**
   * –°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ç—Ä–æ–ª–∞ –ø–æ–∏—Å–∫–∞
   * @param {Object} options - –û–ø—Ü–∏–∏ –∫–æ–Ω—Ç—Ä–æ–ª–∞
   * @param {string} [options.placeholder='–ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞...'] - –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞
   * @param {boolean} [options.showClearButton=true] - –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏
   * @param {boolean} [options.showSearchButton=true] - –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞
   * @param {boolean} [options.enableAutoComplete=true] - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
   * @param {number} [options.searchDelay=300] - –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –º—Å
   * @param {number} [options.maxResults=10] - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   * @param {Array<string>} [options.searchTypes=['text', 'geo', 'biz']] - –¢–∏–ø—ã –ø–æ–∏—Å–∫–∞
   * @param {Object} [options.searchOptions] - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –ø–æ–∏—Å–∫–∞
   * @param {boolean} [options.fitResultBounds=true] - –ü–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
   * @param {boolean} [options.addResultMarker=true] - –î–æ–±–∞–≤–ª—è—Ç—å –º–∞—Ä–∫–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   * @param {string} [options.resultsContainer] - –°–µ–ª–µ–∫—Ç–æ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   * @param {Function} [options.formatResult] - –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   * @param {Function} [options.filterResults] - –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   */
  constructor(options = {}) {
    super({
      position: 'topLeft',
      zIndex: 1000,
      className: 'ymaps-search-control',
      ...options
    })

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
    this._placeholder = options.placeholder || '–ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞...'
    this._showClearButton = options.showClearButton !== false
    this._showSearchButton = options.showSearchButton !== false
    this._enableAutoComplete = options.enableAutoComplete !== false
    this._searchDelay = Math.max(100, options.searchDelay || 300)
    this._maxResults = Math.min(50, Math.max(1, options.maxResults || 10))
    
    // –¢–∏–ø—ã –ø–æ–∏—Å–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    this._searchTypes = options.searchTypes || ['text', 'geo', 'biz']
    this._searchOptions = {
      results: this._maxResults,
      skip: 0,
      ...options.searchOptions
    }

    // –ü–æ–≤–µ–¥–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    this._fitResultBounds = options.fitResultBounds !== false
    this._addResultMarker = options.addResultMarker !== false
    this._resultsContainer = options.resultsContainer
    this._formatResult = options.formatResult
    this._filterResults = options.filterResults

    // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    this._searchValue = ''
    this._isSearching = false
    this._searchResults = []
    this._selectedIndex = -1
    this._currentQuery = null
    this._searchTimeout = null
    this._resultMarker = null
    this._lastSearchBounds = null
    
    // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
    this._elements = {
      container: null,
      input: null,
      clearButton: null,
      searchButton: null,
      loadingIndicator: null,
      resultsDropdown: null,
      resultsList: null,
      noResults: null
    }

    // Yandex API –æ–±—ä–µ–∫—Ç—ã
    this._geocoder = null
    this._suggest = null

    this._bindMethods()
  }

  /**
   * –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥—ã –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
   * @private
   */
  _bindMethods() {
    this._handleInputChange = this._handleInputChange.bind(this)
    this._handleInputKeyDown = this._handleInputKeyDown.bind(this)
    this._handleInputFocus = this._handleInputFocus.bind(this)
    this._handleInputBlur = this._handleInputBlur.bind(this)
    this._handleClearClick = this._handleClearClick.bind(this)
    this._handleSearchClick = this._handleSearchClick.bind(this)
    this._handleResultClick = this._handleResultClick.bind(this)
    this._handleResultHover = this._handleResultHover.bind(this)
    this._handleDocumentClick = this._handleDocumentClick.bind(this)
    this._performSearch = this._performSearch.bind(this)
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç DOM —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–Ω—Ç—Ä–æ–ª–∞
   * @returns {HTMLElement} –ö–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
   * @protected
   */
  _createElement() {
    const container = DOM.createElement('div', {
      className: `${this._options.className} ymaps-search-control-container`,
      'aria-label': '–ü–æ–∏—Å–∫ –Ω–∞ –∫–∞—Ä—Ç–µ'
    })

    // –û—Å–Ω–æ–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
    const searchGroup = DOM.createElement('div', {
      className: 'ymaps-search-control-group'
    })

    // –ü–æ–ª–µ –≤–≤–æ–¥–∞
    this._elements.input = DOM.createElement('input', {
      type: 'text',
      className: 'ymaps-search-control-input',
      placeholder: this._placeholder,
      autocomplete: 'off',
      spellcheck: 'false',
      'aria-label': '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞',
      'aria-expanded': 'false',
      'aria-haspopup': 'listbox',
      'aria-autocomplete': 'list'
    })

    // –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
    if (this._showClearButton) {
      this._elements.clearButton = DOM.createElement('button', {
        className: 'ymaps-search-control-clear',
        type: 'button',
        'aria-label': '–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫',
        title: '–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫'
      })
      this._elements.clearButton.innerHTML = '‚úï'
    }

    // –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞
    if (this._showSearchButton) {
      this._elements.searchButton = DOM.createElement('button', {
        className: 'ymaps-search-control-search',
        type: 'button',
        'aria-label': '–ù–∞–π—Ç–∏',
        title: '–ù–∞–π—Ç–∏'
      })
      this._elements.searchButton.innerHTML = 'üîç'
    }

    // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    this._elements.loadingIndicator = DOM.createElement('div', {
      className: 'ymaps-search-control-loading'
    })
    this._elements.loadingIndicator.innerHTML = 
      '<div class="ymaps-search-loading-spinner"></div>'

    // –°–æ–±–∏—Ä–∞–µ–º –≥—Ä—É–ø–ø—É –ø–æ–∏—Å–∫–∞
    searchGroup.appendChild(this._elements.input)
    if (this._elements.clearButton) {
      searchGroup.appendChild(this._elements.clearButton)
    }
    if (this._elements.searchButton) {
      searchGroup.appendChild(this._elements.searchButton)
    }
    searchGroup.appendChild(this._elements.loadingIndicator)

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    this._elements.resultsDropdown = DOM.createElement('div', {
      className: 'ymaps-search-control-results',
      role: 'listbox',
      'aria-label': '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞'
    })

    // –°–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    this._elements.resultsList = DOM.createElement('ul', {
      className: 'ymaps-search-results-list',
      role: 'group'
    })

    // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    this._elements.noResults = DOM.createElement('div', {
      className: 'ymaps-search-no-results'
    })
    this._elements.noResults.textContent = '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'

    this._elements.resultsDropdown.appendChild(this._elements.resultsList)
    this._elements.resultsDropdown.appendChild(this._elements.noResults)

    // –°–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container.appendChild(searchGroup)
    container.appendChild(this._elements.resultsDropdown)

    this._elements.container = container
    this._attachEventListeners()
    this._updateVisualState()

    return container
  }

  /**
   * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
   * @private
   */
  _attachEventListeners() {
    if (!this._elements.input) return

    // –°–æ–±—ã—Ç–∏—è –ø–æ–ª—è –≤–≤–æ–¥–∞
    this._elements.input.addEventListener('input', this._handleInputChange)
    this._elements.input.addEventListener('keydown', this._handleInputKeyDown)
    this._elements.input.addEventListener('focus', this._handleInputFocus)
    this._elements.input.addEventListener('blur', this._handleInputBlur)

    // –°–æ–±—ã—Ç–∏—è –∫–Ω–æ–ø–æ–∫
    if (this._elements.clearButton) {
      this._elements.clearButton.addEventListener('click', this._handleClearClick)
    }
    if (this._elements.searchButton) {
      this._elements.searchButton.addEventListener('click', this._handleSearchClick)
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    document.addEventListener('click', this._handleDocumentClick)
  }

  /**
   * –û—Ç–∫–ª—é—á–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
   * @private
   */
  _detachEventListeners() {
    if (!this._elements.input) return

    this._elements.input.removeEventListener('input', this._handleInputChange)
    this._elements.input.removeEventListener('keydown', this._handleInputKeyDown)
    this._elements.input.removeEventListener('focus', this._handleInputFocus)
    this._elements.input.removeEventListener('blur', this._handleInputBlur)

    if (this._elements.clearButton) {
      this._elements.clearButton.removeEventListener('click', this._handleClearClick)
    }
    if (this._elements.searchButton) {
      this._elements.searchButton.removeEventListener('click', this._handleSearchClick)
    }

    document.removeEventListener('click', this._handleDocumentClick)
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç API Yandex Maps
   * @private
   */
  async _initializeAPI() {
    try {
      if (window.ymaps && window.ymaps.ready) {
        await new Promise((resolve) => {
          window.ymaps.ready(resolve)
        })

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–µ–æ–∫–æ–¥–µ—Ä
        this._geocoder = window.ymaps.geocode
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∞–¥–∂–µ—Å—Ç (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
        if (window.ymaps.suggest) {
          this._suggest = window.ymaps.suggest
        }

        this._emit('apiready', { geocoder: !!this._geocoder, suggest: !!this._suggest })
      } else {
        throw new Error('Yandex Maps API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
      }
    } catch (error) {
      console.error('[SearchControl] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ API:', error)
      this._emit('apierror', { error })
      throw error
    }
  }

  /**
   * –î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª –Ω–∞ –∫–∞—Ä—Ç—É
   * @param {ymaps.Map} map - –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–∞—Ä—Ç—ã
   * @returns {Promise<void>}
   */
  async addToMap(map) {
    try {
      await super.addToMap(map)
      await this._initializeAPI()
      this._emit('ready', { control: this })
    } catch (error) {
      console.error('[SearchControl] –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç—É:', error)
      this._emit('error', { error, operation: 'addToMap' })
      throw error
    }
  }

  // === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ===

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
   * @param {Event} event
   * @private
   */
  _handleInputChange(event) {
    const value = event.target.value.trim()
    this._searchValue = value

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–∞–π–º–µ—Ä–∞
    if (this._searchTimeout) {
      clearTimeout(this._searchTimeout)
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏
    this._updateVisualState()

    if (value.length === 0) {
      this._clearResults()
      return
    }

    // –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    if (this._enableAutoComplete && value.length >= 2) {
      this._searchTimeout = setTimeout(() => {
        this._performAutoComplete(value)
      }, this._searchDelay)
    }

    this._emit('inputchange', { value })
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
   * @param {KeyboardEvent} event
   * @private
   */
  _handleInputKeyDown(event) {
    switch (event.key) {
      case 'Enter':
        event.preventDefault()
        if (this._selectedIndex >= 0) {
          this._selectResult(this._selectedIndex)
        } else if (this._searchValue.trim()) {
          this._performSearch(this._searchValue.trim())
        }
        break

      case 'ArrowDown':
        event.preventDefault()
        this._navigateResults(1)
        break

      case 'ArrowUp':
        event.preventDefault()
        this._navigateResults(-1)
        break

      case 'Escape':
        event.preventDefault()
        this._closeResults()
        this._elements.input.blur()
        break

      case 'Tab':
        if (this._selectedIndex >= 0) {
          event.preventDefault()
          this._selectResult(this._selectedIndex)
        }
        break
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ–∫—É—Å–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
   * @private
   */
  _handleInputFocus() {
    if (this._searchResults.length > 0) {
      this._showResults()
    }
    this._emit('focus')
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
   * @private
   */
  _handleInputBlur() {
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
    setTimeout(() => {
      this._closeResults()
    }, 150)
    this._emit('blur')
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—á–∏—Å—Ç–∫–∏
   * @private
   */
  _handleClearClick() {
    this._clearSearch()
    this._elements.input.focus()
    this._emit('clear')
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–∏—Å–∫–∞
   * @private
   */
  _handleSearchClick() {
    const query = this._searchValue.trim()
    if (query) {
      this._performSearch(query)
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø–æ–∏—Å–∫–∞
   * @param {Event} event
   * @private
   */
  _handleResultClick(event) {
    const resultElement = event.currentTarget
    const index = parseInt(resultElement.dataset.index, 10)
    if (index >= 0) {
      this._selectResult(index)
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
   * @param {Event} event
   * @private
   */
  _handleResultHover(event) {
    const resultElement = event.currentTarget
    const index = parseInt(resultElement.dataset.index, 10)
    this._setSelectedIndex(index)
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –≤–Ω–µ –∫–æ–Ω—Ç—Ä–æ–ª–∞
   * @param {Event} event
   * @private
   */
  _handleDocumentClick(event) {
    if (this._elements.container && !this._elements.container.contains(event.target)) {
      this._closeResults()
    }
  }

  // === –ú–ï–¢–û–î–´ –ü–û–ò–°–ö–ê ===

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
   * @param {string} query - –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
   * @private
   */
  async _performAutoComplete(query) {
    if (!this._suggest || this._isSearching) return

    try {
      this._setSearchingState(true)

      const suggestions = await this._suggest(query, {
        results: this._maxResults,
        ...this._searchOptions
      })

      if (suggestions && suggestions.length > 0) {
        this._updateResults(suggestions.map((suggestion, index) => ({
          index,
          type: 'suggestion',
          displayName: suggestion.displayName,
          value: suggestion.value,
          data: suggestion
        })))
      } else {
        this._updateResults([])
      }

    } catch (error) {
      console.error('[SearchControl] –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è:', error)
      this._emit('error', { error, operation: 'autocomplete', query })
    } finally {
      this._setSearchingState(false)
    }
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É
   * @param {string} query - –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
   * @returns {Promise<Array>} –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
   */
  async _performSearch(query) {
    if (!this._geocoder || this._isSearching) return []

    try {
      this._setSearchingState(true)
      this._currentQuery = query

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞
      const searchBounds = this._map ? this._map.getBounds() : null

      // –û–ø—Ü–∏–∏ –ø–æ–∏—Å–∫–∞
      const searchOptions = {
        results: this._maxResults,
        skip: 0,
        boundedBy: searchBounds,
        strictBounds: false,
        ...this._searchOptions
      }

      // –í—ã–ø–æ–ª–Ω—è–µ–º –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
      const geocodeResult = await this._geocoder(query, searchOptions)
      const geoObjects = geocodeResult.geoObjects

      const results = []
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      geoObjects.each((geoObject, index) => {
        const geometry = geoObject.geometry
        const properties = geoObject.properties

        const result = {
          index,
          type: 'geocode',
          displayName: properties.get('name') || properties.get('text'),
          description: properties.get('description'),
          coordinates: geometry.getCoordinates(),
          bounds: geometry.getBounds && geometry.getBounds(),
          address: properties.get('text'),
          kind: properties.get('metaDataProperty.GeocoderMetaData.kind'),
          precision: properties.get('metaDataProperty.GeocoderMetaData.precision'),
          geoObject: geoObject,
          data: {
            name: properties.get('name'),
            text: properties.get('text'),
            description: properties.get('description'),
            balloonContent: properties.get('balloonContent'),
            hintContent: properties.get('hintContent')
          }
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
        if (!this._filterResults || this._filterResults(result)) {
          results.push(result)
        }
      })

      this._updateResults(results)
      this._emit('searchcomplete', { query, results, total: results.length })
      
      return results

    } catch (error) {
      console.error('[SearchControl] –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error)
      this._emit('error', { error, operation: 'search', query })
      return []
    } finally {
      this._setSearchingState(false)
    }
  }

  // === –£–ü–†–ê–í–õ–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú–ò ===

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
   * @param {Array} results - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
   * @private
   */
  _updateResults(results) {
    this._searchResults = results
    this._selectedIndex = -1

    if (!this._elements.resultsList) return

    // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
    this._elements.resultsList.innerHTML = ''

    if (results.length === 0) {
      this._elements.resultsDropdown.classList.add('ymaps-search-control-results--empty')
      this._elements.input.setAttribute('aria-expanded', 'false')
      return
    }

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    results.forEach((result, index) => {
      const item = this._createResultItem(result, index)
      this._elements.resultsList.appendChild(item)
    })

    this._elements.resultsDropdown.classList.remove('ymaps-search-control-results--empty')
    this._showResults()
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç DOM —ç–ª–µ–º–µ–Ω—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–∏—Å–∫–∞
   * @param {Object} result - –î–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   * @param {number} index - –ò–Ω–¥–µ–∫—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   * @returns {HTMLElement}
   * @private
   */
  _createResultItem(result, index) {
    const item = DOM.createElement('li', {
      className: 'ymaps-search-result-item',
      role: 'option',
      'data-index': index
    })

    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if (this._formatResult) {
      const customContent = this._formatResult(result)
      if (typeof customContent === 'string') {
        item.innerHTML = customContent
      } else if (customContent instanceof HTMLElement) {
        item.appendChild(customContent)
      }
    } else {
      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
      const name = DOM.createElement('div', {
        className: 'ymaps-search-result-name'
      })
      name.textContent = result.displayName || result.value || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ'

      const description = DOM.createElement('div', {
        className: 'ymaps-search-result-description'
      })
      description.textContent = result.description || result.address || ''

      item.appendChild(name)
      if (description.textContent) {
        item.appendChild(description)
      }
    }

    // –°–æ–±—ã—Ç–∏—è
    item.addEventListener('click', this._handleResultClick)
    item.addEventListener('mouseenter', this._handleResultHover)

    return item
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
   * @private
   */
  _showResults() {
    if (this._searchResults.length > 0) {
      this._elements.resultsDropdown.classList.add('ymaps-search-control-results--visible')
      this._elements.input.setAttribute('aria-expanded', 'true')
    }
  }

  /**
   * –°–∫—Ä—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
   * @private
   */
  _closeResults() {
    this._elements.resultsDropdown.classList.remove('ymaps-search-control-results--visible')
    this._elements.input.setAttribute('aria-expanded', 'false')
    this._selectedIndex = -1
    this._updateResultsSelection()
  }

  /**
   * –û—á–∏—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
   * @private
   */
  _clearResults() {
    this._searchResults = []
    this._selectedIndex = -1
    if (this._elements.resultsList) {
      this._elements.resultsList.innerHTML = ''
    }
    this._closeResults()
  }

  /**
   * –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
   * @param {number} direction - –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (1 - –≤–Ω–∏–∑, -1 - –≤–≤–µ—Ä—Ö)
   * @private
   */
  _navigateResults(direction) {
    if (this._searchResults.length === 0) return

    const newIndex = this._selectedIndex + direction

    if (newIndex < -1) {
      this._setSelectedIndex(this._searchResults.length - 1)
    } else if (newIndex >= this._searchResults.length) {
      this._setSelectedIndex(-1)
    } else {
      this._setSelectedIndex(newIndex)
    }

    this._showResults()
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   * @param {number} index - –ò–Ω–¥–µ–∫—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   * @private
   */
  _setSelectedIndex(index) {
    this._selectedIndex = index
    this._updateResultsSelection()

    // –û–±–Ω–æ–≤–ª—è–µ–º ARIA –∞—Ç—Ä–∏–±—É—Ç—ã
    if (index >= 0 && this._searchResults[index]) {
      this._elements.input.setAttribute('aria-activedescendant', `search-result-${index}`)
    } else {
      this._elements.input.removeAttribute('aria-activedescendant')
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   * @private
   */
  _updateResultsSelection() {
    const items = this._elements.resultsList.querySelectorAll('.ymaps-search-result-item')
    
    items.forEach((item, index) => {
      item.classList.toggle('ymaps-search-result-item--selected', index === this._selectedIndex)
      item.setAttribute('aria-selected', index === this._selectedIndex ? 'true' : 'false')
      
      if (index === this._selectedIndex) {
        item.scrollIntoView({ block: 'nearest', behavior: 'smooth' })
      }
    })
  }

  /**
   * –í—ã–±–∏—Ä–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞
   * @param {number} index - –ò–Ω–¥–µ–∫—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   * @private
   */
  async _selectResult(index) {
    if (index < 0 || index >= this._searchResults.length) return

    const result = this._searchResults[index]
    
    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
      this._searchValue = result.displayName || result.value || ''
      this._elements.input.value = this._searchValue

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      this._closeResults()

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ –∫–∞—Ä—Ç–µ
      if (result.coordinates && this._map) {
        await this._processSelectedResult(result)
      }

      this._emit('resultselect', { result, index })

    } catch (error) {
      console.error('[SearchControl] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', error)
      this._emit('error', { error, operation: 'selectResult', result })
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ –∫–∞—Ä—Ç–µ
   * @param {Object} result - –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
   * @private
   */
  async _processSelectedResult(result) {
    if (!this._map || !result.coordinates) return

    try {
      // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –º–∞—Ä–∫–µ—Ä
      if (this._resultMarker) {
        this._map.geoObjects.remove(this._resultMarker)
        this._resultMarker = null
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      if (this._addResultMarker && window.ymaps) {
        this._resultMarker = new window.ymaps.Placemark(result.coordinates, {
          hintContent: result.displayName,
          balloonContent: result.description || result.address
        }, {
          preset: 'islands#redDotIcon'
        })

        this._map.geoObjects.add(this._resultMarker)
      }

      // –ü–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ä—Ç—ã
      if (this._fitResultBounds) {
        if (result.bounds && result.bounds.length === 2) {
          this._map.setBounds(result.bounds, {
            checkZoomRange: true,
            margin: [50, 50, 50, 50]
          })
        } else {
          this._map.setCenter(result.coordinates, 16, {
            duration: 300
          })
        }
      }

      this._lastSearchBounds = result.bounds
      this._emit('resultprocessed', { result, marker: this._resultMarker })

    } catch (error) {
      console.error('[SearchControl] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', error)
      this._emit('error', { error, operation: 'processResult', result })
    }
  }

  // === –£–¢–ò–õ–ò–¢–´ ===

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∏—Å–∫–∞
   * @param {boolean} isSearching - –§–ª–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∏—Å–∫–∞
   * @private
   */
  _setSearchingState(isSearching) {
    this._isSearching = isSearching
    this._updateVisualState()
    this._emit(isSearching ? 'searchstart' : 'searchend')
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–∞
   * @private
   */
  _updateVisualState() {
    if (!this._elements.container) return

    const hasValue = this._searchValue.length > 0

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∏—Å–∫–∞
    this._elements.container.classList.toggle('ymaps-search-control--searching', this._isSearching)
    this._elements.container.classList.toggle('ymaps-search-control--has-value', hasValue)

    // –í–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏
    if (this._elements.clearButton) {
      this._elements.clearButton.style.display = hasValue ? 'block' : 'none'
    }

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    if (this._elements.loadingIndicator) {
      this._elements.loadingIndicator.style.display = this._isSearching ? 'block' : 'none'
    }

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞
    if (this._elements.searchButton) {
      this._elements.searchButton.disabled = this._isSearching
    }
  }

  /**
   * –û—á–∏—â–∞–µ—Ç –ø–æ–∏—Å–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é
   * @private
   */
  _clearSearch() {
    this._searchValue = ''
    this._elements.input.value = ''
    this._clearResults()
    this._updateVisualState()

    // –£–¥–∞–ª—è–µ–º –º–∞—Ä–∫–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    if (this._resultMarker && this._map) {
      this._map.geoObjects.remove(this._resultMarker)
      this._resultMarker = null
    }

    // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä
    if (this._searchTimeout) {
      clearTimeout(this._searchTimeout)
      this._searchTimeout = null
    }
  }

  // === –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´ ===

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
   * @param {string} query - –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
   * @param {boolean} [triggerSearch=false] - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
   */
  setQuery(query, triggerSearch = false) {
    if (typeof query !== 'string') {
      throw new TypeError('Query –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π')
    }

    this._searchValue = query
    if (this._elements.input) {
      this._elements.input.value = query
    }

    this._updateVisualState()

    if (triggerSearch && query.trim()) {
      this._performSearch(query.trim())
    }

    this._emit('querychange', { query, triggerSearch })
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
   * @returns {string} –¢–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å
   */
  getQuery() {
    return this._searchValue
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—É—â–µ–º—É –∑–∞–ø—Ä–æ—Å—É
   * @returns {Promise<Array>} –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
   */
  async search() {
    const query = this._searchValue.trim()
    if (!query) {
      throw new Error('–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º')
    }

    return await this._performSearch(query)
  }

  /**
   * –û—á–∏—â–∞–µ—Ç –ø–æ–∏—Å–∫ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
   */
  clear() {
    this._clearSearch()
    this._emit('clear')
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–∏—Å–∫–∞
   * @returns {Array} –ú–∞—Å—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   */
  getResults() {
    return [...this._searchResults]
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
   * @returns {Object|null} –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–ª–∏ null
   */
  getSelectedResult() {
    if (this._selectedIndex >= 0 && this._selectedIndex < this._searchResults.length) {
      return this._searchResults[this._selectedIndex]
    }
    return null
  }

  /**
   * –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
   */
  focus() {
    if (this._elements.input) {
      this._elements.input.focus()
    }
  }

  /**
   * –°–Ω–∏–º–∞–µ—Ç —Ñ–æ–∫—É—Å —Å –ø–æ–ª—è –ø–æ–∏—Å–∫–∞
   */
  blur() {
    if (this._elements.input) {
      this._elements.input.blur()
    }
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –ø–æ–ª—è –≤–≤–æ–¥–∞
   * @param {string} placeholder - –¢–µ–∫—Å—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞
   */
  setPlaceholder(placeholder) {
    if (typeof placeholder !== 'string') {
      throw new TypeError('Placeholder –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π')
    }

    this._placeholder = placeholder
    if (this._elements.input) {
      this._elements.input.placeholder = placeholder
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
   * @returns {string} –¢–µ–∫—Å—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞
   */
  getPlaceholder() {
    return this._placeholder
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   * @param {number} maxResults - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   */
  setMaxResults(maxResults) {
    if (!Number.isInteger(maxResults) || maxResults < 1 || maxResults > 50) {
      throw new Error('maxResults –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 50')
    }

    this._maxResults = maxResults
    this._searchOptions.results = maxResults
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   * @returns {number} –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   */
  getMaxResults() {
    return this._maxResults
  }

  /**
   * –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
   * @param {boolean} enabled - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
   */
  setAutoComplete(enabled) {
    this._enableAutoComplete = Boolean(enabled)
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∫–ª—é—á–µ–Ω–æ –ª–∏ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
   * @returns {boolean} –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
   */
  isAutoCompleteEnabled() {
    return this._enableAutoComplete
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É –ø–æ–∏—Å–∫–∞
   * @param {number} delay - –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
   */
  setSearchDelay(delay) {
    if (!Number.isInteger(delay) || delay < 0) {
      throw new Error('Delay –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º')
    }

    this._searchDelay = Math.max(100, delay)
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É –ø–æ–∏—Å–∫–∞
   * @returns {number} –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
   */
  getSearchDelay() {
    return this._searchDelay
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–¥–µ—Ç –ª–∏ –ø–æ–∏—Å–∫ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
   * @returns {boolean} –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∏—Å–∫–∞
   */
  isSearching() {
    return this._isSearching
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –º–∞—Ä–∫–µ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   * @returns {ymaps.Placemark|null} –ú–∞—Ä–∫–µ—Ä –∏–ª–∏ null
   */
  getResultMarker() {
    return this._resultMarker
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–∏—Å–∫–∞
   * @returns {Array|null} –ì—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ null
   */
  getLastSearchBounds() {
    return this._lastSearchBounds
  }

  /**
   * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è
   */
  destroy() {
    // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä—ã
    if (this._searchTimeout) {
      clearTimeout(this._searchTimeout)
      this._searchTimeout = null
    }

    // –£–¥–∞–ª—è–µ–º –º–∞—Ä–∫–µ—Ä
    if (this._resultMarker && this._map) {
      this._map.geoObjects.remove(this._resultMarker)
      this._resultMarker = null
    }

    // –û—Ç–∫–ª—é—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è
    this._detachEventListeners()

    // –û—á–∏—â–∞–µ–º —Å—Å—ã–ª–∫–∏
    this._geocoder = null
    this._suggest = null
    this._elements = {}
    this._searchResults = []

    super.destroy()
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç
export const SearchControlUtils = {
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
   * @param {Array} coordinates - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã [lat, lng]
   * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  isValidCoordinates(coordinates) {
    return Array.isArray(coordinates) &&
           coordinates.length === 2 &&
           typeof coordinates[0] === 'number' &&
           typeof coordinates[1] === 'number' &&
           coordinates[0] >= -90 && coordinates[0] <= 90 &&
           coordinates[1] >= -180 && coordinates[1] <= 180
  },

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∞–¥—Ä–µ—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param {Object} result - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞
   * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å
   */
  formatAddress(result) {
    if (!result) return ''
    
    const parts = []
    if (result.displayName) parts.push(result.displayName)
    if (result.description && result.description !== result.displayName) {
      parts.push(result.description)
    }
    
    return parts.join(', ')
  },

  /**
   * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–∏—Å–∫–∞
   * @param {Object} result - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞
   * @returns {string} –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   */
  getResultType(result) {
    if (!result) return 'unknown'
    
    if (result.kind) return result.kind
    if (result.type) return result.type
    
    // –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ –¥–∞–Ω–Ω—ã–º
    if (result.coordinates) return 'geocode'
    if (result.value) return 'suggestion'
    
    return 'unknown'
  }
}