import '../index.css';
export type YMapResizerDirection = 'both' | 'horizontal' | 'vertical';
export type YMapResizerProps = {
    direction?: YMapResizerDirection;
    minWidth?: number;
    maxWidth?: number;
    minHeight?: number;
    maxHeight?: number;
    showOnlyOnHover?: boolean;
};
declare const defaultProps: Readonly<{
    direction: "both";
    showOnlyOnHover: false;
}>;
type DefaultProps = typeof defaultProps;
export declare class YMapResizer extends ymaps3.YMapComplexEntity<YMapResizerProps, DefaultProps> {
    static defaultProps: Readonly<{
        direction: "both";
        showOnlyOnHover: false;
    }>;
    static [ymaps3.optionsKeyVuefy]: import("@yandex/ymaps3-types/modules/vuefy").CustomVuefyOptions<YMapResizer>;
    private _isResizing;
    private _activeDirection;
    private _bottomControl;
    private _rightControl;
    private _bottomRightControl;
    constructor(props: YMapResizerProps);
    private get _containerParent();
    private get _controlsList();
    protected _onAttach(): void;
    private _setContainerRestrictions;
    protected _onUpdate(props: Partial<YMapResizerProps>, oldProps: YMapResizerProps): void;
    protected _onDetach(): void;
    private _onControlMouseEnter;
    private _onControlMouseLeave;
    private _onControlMouseDown;
    private _resize;
    private _stopResize;
}
export {};
