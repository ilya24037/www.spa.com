import { PropType, SlotsType } from 'vue';
import { IYandexMapTrafficEventsLayer } from '../../../namespace.ts';
declare const _default: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    value: {
        type: PropType<IYandexMapTrafficEventsLayer | null>;
        default: null;
    };
    modelValue: {
        type: PropType<IYandexMapTrafficEventsLayer | null>;
        default: null;
    };
    settings: {
        type: PropType<ConstructorParameters<typeof IYandexMapTrafficEventsLayer>[0]>;
        default: () => {};
    };
}>, () => import('vue').VNode<import('vue').RendererNode, import('vue').RendererElement, {
    [key: string]: any;
}>[], {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    input(item: IYandexMapTrafficEventsLayer): boolean;
    'update:modelValue'(item: IYandexMapTrafficEventsLayer): boolean;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    value: {
        type: PropType<IYandexMapTrafficEventsLayer | null>;
        default: null;
    };
    modelValue: {
        type: PropType<IYandexMapTrafficEventsLayer | null>;
        default: null;
    };
    settings: {
        type: PropType<ConstructorParameters<typeof IYandexMapTrafficEventsLayer>[0]>;
        default: () => {};
    };
}>> & Readonly<{
    onInput?: ((item: IYandexMapTrafficEventsLayer) => any) | undefined;
    "onUpdate:modelValue"?: ((item: IYandexMapTrafficEventsLayer) => any) | undefined;
}>, {
    value: IYandexMapTrafficEventsLayer | null;
    modelValue: IYandexMapTrafficEventsLayer | null;
    settings: import('../../../namespace.ts').IYandexMapTrafficEventsLayerProps;
}, SlotsType<{
    default: {};
}>, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;
