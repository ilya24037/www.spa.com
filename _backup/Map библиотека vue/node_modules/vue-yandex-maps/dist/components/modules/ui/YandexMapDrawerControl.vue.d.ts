import { PropType, SlotsType } from 'vue';
import { YMapDrawerControl } from '@yandex/ymaps3-drawer-control';
declare const _default: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    value: {
        type: PropType<YMapDrawerControl | null>;
        default: null;
    };
    modelValue: {
        type: PropType<YMapDrawerControl | null>;
        default: null;
    };
    settings: {
        type: PropType<Omit<ConstructorParameters<typeof YMapDrawerControl>[0], "content">>;
        required: true;
    };
}>, () => import('vue').VNode<import('vue').RendererNode, import('vue').RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    input(item: YMapDrawerControl): boolean;
    'update:modelValue'(item: YMapDrawerControl): boolean;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    value: {
        type: PropType<YMapDrawerControl | null>;
        default: null;
    };
    modelValue: {
        type: PropType<YMapDrawerControl | null>;
        default: null;
    };
    settings: {
        type: PropType<Omit<ConstructorParameters<typeof YMapDrawerControl>[0], "content">>;
        required: true;
    };
}>> & Readonly<{
    onInput?: ((item: YMapDrawerControl) => any) | undefined;
    "onUpdate:modelValue"?: ((item: YMapDrawerControl) => any) | undefined;
}>, {
    value: YMapDrawerControl | null;
    modelValue: YMapDrawerControl | null;
}, SlotsType<{
    default: {};
}>, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;
