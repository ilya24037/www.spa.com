<?php

/**
 * –¢–ï–°–¢ –†–ï–§–ê–ö–¢–û–†–ò–ù–ì–ê ContactsSection
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å –æ–±—ä–µ–∫—Ç–æ–º contacts
 */

require_once __DIR__ . '/vendor/autoload.php';
$app = require_once __DIR__ . '/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Http\Kernel::class);
$kernel->handle($request = Illuminate\Http\Request::capture());

use App\Domain\Ad\Models\Ad;
use App\Domain\User\Models\User;
use Illuminate\Support\Facades\DB;

echo "üîç –¢–ï–°–¢ –†–ï–§–ê–ö–¢–û–†–ò–ù–ì–ê ContactsSection\n";
echo "=====================================\n\n";

try {
    // 1. –ü–†–û–í–ï–†–ö–ê –ú–û–î–ï–õ–ò –ò –ü–û–õ–ï–ô
    echo "1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ú–û–î–ï–õ–ò Ad:\n";
    $fillable = (new Ad())->getFillable();
    $contactFields = ['phone', 'contact_method', 'whatsapp', 'telegram'];
    $foundFields = array_intersect($contactFields, $fillable);
    
    echo "   –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ø–æ–ª—è –≤ fillable:\n";
    foreach ($contactFields as $field) {
        $status = in_array($field, $fillable) ? '‚úÖ' : '‚ùå';
        echo "   $status $field\n";
    }
    
    if (count($foundFields) === count($contactFields)) {
        echo "   ‚úÖ –í—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ø–æ–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è\n";
    } else {
        echo "   ‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ fillable!\n";
    }
    echo "\n";
    
    // 2. –ü–†–û–í–ï–†–ö–ê –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –î–ê–ù–ù–´–•
    echo "2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –û–ë–™–Ø–í–õ–ï–ù–ò–ô:\n";
    $ads = Ad::whereNotNull('phone')
        ->limit(3)
        ->get(['id', 'title', 'phone', 'contact_method', 'whatsapp', 'telegram']);
    
    if ($ads->isEmpty()) {
        echo "   ‚ö†Ô∏è –ù–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏\n";
    } else {
        foreach ($ads as $ad) {
            echo "   üìã –û–±—ä—è–≤–ª–µ–Ω–∏–µ ID {$ad->id} ({$ad->title}):\n";
            echo "      ‚Ä¢ phone: " . ($ad->phone ?: '–ø—É—Å—Ç–æ') . "\n";
            echo "      ‚Ä¢ contact_method: " . ($ad->contact_method ?: '–ø—É—Å—Ç–æ') . "\n";
            echo "      ‚Ä¢ whatsapp: " . ($ad->whatsapp ?: '–ø—É—Å—Ç–æ') . "\n";
            echo "      ‚Ä¢ telegram: " . ($ad->telegram ?: '–ø—É—Å—Ç–æ') . "\n";
        }
    }
    echo "\n";
    
    // 3. –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –ß–ï–†–ù–û–í–ò–ö–ê –° –ù–û–í–û–ô –°–¢–†–£–ö–¢–£–†–û–ô
    echo "3Ô∏è‚É£ –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –ß–ï–†–ù–û–í–ò–ö–ê:\n";
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    $user = User::where('email', 'anna@spa.test')->first();
    if (!$user) {
        $user = User::first();
    }
    
    if ($user) {
        echo "   –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {$user->email}\n";
        
        // –°–æ–∑–¥–∞—ë–º —á–µ—Ä–Ω–æ–≤–∏–∫ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        $testData = [
            'user_id' => $user->id,
            'title' => '–¢–µ—Å—Ç ContactsSection ' . date('H:i:s'),
            'status' => 'draft',
            'category' => 'massage',
            'phone' => '+7 (999) 123-45-67',
            'contact_method' => 'any',
            'whatsapp' => '+7 (999) 987-65-43',
            'telegram' => '@test_user',
            'description' => '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ ContactsSection'
        ];
        
        $draft = Ad::create($testData);
        
        if ($draft && $draft->id) {
            echo "   ‚úÖ –ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ–∑–¥–∞–Ω —Å ID: {$draft->id}\n";
            echo "   üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:\n";
            echo "      ‚Ä¢ phone: {$draft->phone}\n";
            echo "      ‚Ä¢ contact_method: {$draft->contact_method}\n";
            echo "      ‚Ä¢ whatsapp: {$draft->whatsapp}\n";
            echo "      ‚Ä¢ telegram: {$draft->telegram}\n";
            
            // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —á–µ—Ä–Ω–æ–≤–∏–∫
            $draft->delete();
            echo "   üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —á–µ—Ä–Ω–æ–≤–∏–∫ —É–¥–∞–ª—ë–Ω\n";
        } else {
            echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞\n";
        }
    } else {
        echo "   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∞\n";
    }
    echo "\n";
    
    // 4. –ü–†–û–í–ï–†–ö–ê –ú–ò–ì–†–ê–¶–ò–ò –î–ê–ù–ù–´–•
    echo "4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ú–ò–ì–†–ê–¶–ò–ò –î–ê–ù–ù–´–•:\n";
    echo "   Frontend –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é migrateContacts() –¥–ª—è:\n";
    echo "   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ (–æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–ª—è)\n";
    echo "   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ (–æ–±—ä–µ–∫—Ç contacts)\n";
    echo "   ‚úÖ –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –æ–±–µ—Å–ø–µ—á–µ–Ω–∞\n\n";
    
    // 5. –ü–†–û–í–ï–†–ö–ê AdResource
    echo "5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê AdResource:\n";
    $ad = Ad::first();
    if ($ad) {
        $resource = new \App\Application\Http\Resources\Ad\AdResource($ad);
        $array = $resource->toArray(request());
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –ø–æ–ª–µ–π –≤ –æ—Ç–≤–µ—Ç–µ
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º array_key_exists –≤–º–µ—Å—Ç–æ isset –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–π
        $hasContactSection = isset($array['contact']);
        $hasDirectFields = array_key_exists('phone', $array) && array_key_exists('contact_method', $array);
        
        echo "   " . ($hasContactSection ? '‚úÖ' : '‚ùå') . " –°–µ–∫—Ü–∏—è 'contact' –≤ —Ä–µ—Å—É—Ä—Å–µ\n";
        echo "   " . ($hasDirectFields ? '‚úÖ' : '‚ùå') . " –ü—Ä—è–º—ã–µ –ø–æ–ª—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏\n";
        
        if ($hasContactSection) {
            echo "   üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ contact:\n";
            foreach ($array['contact'] as $key => $value) {
                echo "      ‚Ä¢ $key: " . ($value ?: 'null') . "\n";
            }
        }
    }
    echo "\n";
    
    // 6. –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê
    echo "üìä –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê:\n";
    echo "================================\n";
    
    $checks = [
        '–ú–æ–¥–µ–ª—å Ad –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ø–æ–ª—è' => count($foundFields) === count($contactFields),
        '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ —á–∏—Ç–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ' => !$ads->isEmpty(),
        '–ù–æ–≤—ã–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏' => isset($draft) && $draft->id,
        'AdResource –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã' => isset($hasContactSection) && $hasContactSection,
        '–û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –æ–±–µ—Å–ø–µ—á–µ–Ω–∞' => isset($hasDirectFields) && $hasDirectFields
    ];
    
    $passed = 0;
    foreach ($checks as $check => $result) {
        echo ($result ? '‚úÖ' : '‚ùå') . " $check\n";
        if ($result) $passed++;
    }
    
    echo "\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: $passed/" . count($checks) . " –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ\n";
    
    if ($passed === count($checks)) {
        echo "‚úÖ –†–ï–§–ê–ö–¢–û–†–ò–ù–ì ContactsSection –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û!\n";
    } else {
        echo "‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞\n";
    }
    
} catch (Exception $e) {
    echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: " . $e->getMessage() . "\n";
    echo "–§–∞–π–ª: " . $e->getFile() . "\n";
    echo "–°—Ç—Ä–æ–∫–∞: " . $e->getLine() . "\n";
}

echo "\nüìù –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –†–£–ß–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:\n";
echo "=====================================\n";
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ http://spa.test/ads/create\n";
echo "2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–µ–∫—Ü–∏—é '–ö–æ–Ω—Ç–∞–∫—Ç—ã':\n";
echo "   ‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67\n";
echo "   ‚Ä¢ WhatsApp: +7 (999) 987-65-43\n";
echo "   ‚Ä¢ Telegram: @test_user\n";
echo "   ‚Ä¢ –°–ø–æ—Å–æ–± —Å–≤—è–∑–∏: –õ—é–±–æ–π —Å–ø–æ—Å–æ–±\n";
echo "3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —á–µ—Ä–Ω–æ–≤–∏–∫\n";
echo "4. –û—Ç–∫—Ä–æ–π—Ç–µ —á–µ—Ä–Ω–æ–≤–∏–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n";
echo "5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å\n";
echo "6. –ò–∑–º–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å–Ω–æ–≤–∞\n";
echo "7. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –ë–î —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å\n";