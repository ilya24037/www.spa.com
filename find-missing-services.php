<?php

/**
 * –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ
 */

echo "=== –ü–û–ò–°–ö –ù–ï–°–£–©–ï–°–¢–í–£–Æ–©–ò–• –°–ï–†–í–ò–°–û–í ===" . PHP_EOL . PHP_EOL;

$directories = [
    'app/Domain',
    'app/Application/Http/Controllers'
];

$problematicServices = [
    // –£–∂–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ
    'CancellationValidationService',
    'CancellationFeeService',
    'BookingRefundService',
    'BulkCancelBookingsAction',
    'BookingCompletionValidationService',
    'BookingCompletionProcessorService',
    'BookingPaymentProcessorService',
    'BookingBulkOperationsService',
    
    // –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ
    'BookingValidator',
    'ValidationService',
    'RescheduleValidator',
    'BookingPaymentProcessor',
    'PricingService',
    'UserReviewsIntegrationService', // –≠—Ç–æ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º
    'ReviewValidator',
    'UserReviewsReader',
    'UserReviewsWriter'
];

$foundProblems = [];

foreach ($directories as $dir) {
    $fullPath = __DIR__ . '/' . $dir;
    if (!is_dir($fullPath)) {
        echo "‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $fullPath" . PHP_EOL;
        continue;
    }
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $dir" . PHP_EOL;
    
    $iterator = new RecursiveIteratorIterator(
        new RecursiveDirectoryIterator($fullPath)
    );
    
    foreach ($iterator as $file) {
        if ($file->getExtension() !== 'php') {
            continue;
        }
        
        $content = file_get_contents($file->getPathname());
        $relativePath = str_replace(__DIR__ . '/', '', $file->getPathname());
        
        foreach ($problematicServices as $service) {
            // –ò—â–µ–º –∏–º–ø–æ—Ä—Ç—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
            if (preg_match('/use\s+[^;]*' . preg_quote($service, '/') . '\s*;/', $content) || 
                preg_match('/\b' . preg_quote($service, '/') . '::\w+/', $content) ||
                preg_match('/new\s+' . preg_quote($service, '/') . '\s*\(/', $content) ||
                preg_match('/\$\w+\s*:\s*' . preg_quote($service, '/') . '\b/', $content)) {
                
                if (!isset($foundProblems[$service])) {
                    $foundProblems[$service] = [];
                }
                $foundProblems[$service][] = $relativePath;
            }
        }
    }
}

echo PHP_EOL . "üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê:" . PHP_EOL;

if (empty($foundProblems)) {
    echo "‚úÖ –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!" . PHP_EOL;
} else {
    foreach ($foundProblems as $service => $files) {
        echo PHP_EOL . "‚ùå $service –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–∞—Ö:" . PHP_EOL;
        foreach ($files as $file) {
            echo "   ‚Ä¢ $file" . PHP_EOL;
        }
    }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ø–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ —Å–µ—Ä–≤–∏—Å–æ–≤
echo PHP_EOL . "üìã –ü–†–û–í–ï–†–ö–ê –°–£–©–ï–°–¢–í–û–í–ê–ù–ò–Ø –§–ê–ô–õ–û–í –°–ï–†–í–ò–°–û–í:" . PHP_EOL;

foreach ($problematicServices as $service) {
    $possiblePaths = [
        "app/Domain/Booking/Services/$service.php",
        "app/Domain/User/Services/$service.php", 
        "app/Domain/Payment/Services/$service.php",
        "app/Domain/Booking/Actions/$service.php",
        "app/Application/Services/Integration/$service.php"
    ];
    
    $exists = false;
    foreach ($possiblePaths as $path) {
        if (file_exists(__DIR__ . '/' . $path)) {
            echo "‚úÖ $service: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ $path" . PHP_EOL;
            $exists = true;
            break;
        }
    }
    
    if (!$exists) {
        echo "‚ùå $service: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω" . PHP_EOL;
    }
}

echo PHP_EOL . "=== –ü–û–ò–°–ö –ó–ê–í–ï–†–®–ï–ù ===" . PHP_EOL;