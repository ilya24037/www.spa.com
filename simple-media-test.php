<?php

echo "üß™ TESTING MediaRepository Architecture\n";
echo "=====================================\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã
$files = [
    'MediaCrudRepository-FINAL.php' => 'C:\www.spa.com\app\Domain\Media\Repositories\MediaCrudRepository-FINAL.php',
    'MediaStatisticsRepository.php' => 'C:\www.spa.com\app\Domain\Media\Repositories\MediaStatisticsRepository.php',
    'MediaManagementRepository.php' => 'C:\www.spa.com\app\Domain\Media\Repositories\MediaManagementRepository.php',
    'MediaRepository-REFACTORED.php' => 'C:\www.spa.com\app\Domain\Media\Repositories\MediaRepository-REFACTORED.php',
    'MediaRepositoryInterface.php' => 'C:\www.spa.com\app\Support\Contracts\MediaRepositoryInterface.php'
];

$tests = [
    'MediaCrudRepositoryTest.php' => 'C:\www.spa.com\tests\Unit\Domain\Media\Repositories\MediaCrudRepositoryTest.php',
    'MediaStatisticsRepositoryTest.php' => 'C:\www.spa.com\tests\Unit\Domain\Media\Repositories\MediaStatisticsRepositoryTest.php',
    'MediaManagementRepositoryTest.php' => 'C:\www.spa.com\tests\Unit\Domain\Media\Repositories\MediaManagementRepositoryTest.php',
    'MediaRepositoryTest.php' => 'C:\www.spa.com\tests\Unit\Domain\Media\Repositories\MediaRepositoryTest.php'
];

echo "1. üìÅ –ü–†–û–í–ï–†–ö–ê –°–û–ó–î–ê–ù–ù–´–• –§–ê–ô–õ–û–í:\n";
echo "--------------------------------\n";

foreach ($files as $name => $path) {
    if (file_exists($path)) {
        $lines = count(file($path));
        echo "‚úÖ $name - $lines —Å—Ç—Ä–æ–∫\n";
    } else {
        echo "‚ùå $name - –ù–ï –ù–ê–ô–î–ï–ù\n";
    }
}

echo "\n2. üß™ –ü–†–û–í–ï–†–ö–ê –¢–ï–°–¢–û–í:\n";
echo "---------------------\n";

foreach ($tests as $name => $path) {
    if (file_exists($path)) {
        $content = file_get_contents($path);
        $testCount = substr_count($content, '/** @test */');
        echo "‚úÖ $name - $testCount —Ç–µ—Å—Ç–æ–≤\n";
    } else {
        echo "‚ùå $name - –ù–ï –ù–ê–ô–î–ï–ù\n";
    }
}

echo "\n3. üìè –ü–†–û–í–ï–†–ö–ê CLAUDE.MD –ú–ï–¢–†–ò–ö:\n";
echo "--------------------------------\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤
$crudPath = 'C:\www.spa.com\app\Domain\Media\Repositories\MediaCrudRepository-FINAL.php';
if (file_exists($crudPath)) {
    $lines = count(file($crudPath));
    echo "‚úÖ MediaCrudRepository-FINAL: $lines —Å—Ç—Ä–æ–∫ " . ($lines <= 200 ? "(‚úì ‚â§200)" : "(‚ùå >200)") . "\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –º–µ—Ç–æ–¥–æ–≤
    $content = file_get_contents($crudPath);
    $methods = preg_split('/public function/', $content);
    $methodCount = count($methods) - 1;
    echo "   üìä –ú–µ—Ç–æ–¥–æ–≤: $methodCount\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    $hasErrorHandling = strpos($content, 'try {') !== false && strpos($content, 'Log::error') !== false;
    echo "   " . ($hasErrorHandling ? "‚úÖ" : "‚ùå") . " –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫: " . ($hasErrorHandling ? "–ï—Å—Ç—å" : "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç") . "\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä—è–º—ã—Ö SQL
    $hasRawSQL = strpos($content, 'DB::raw') !== false || strpos($content, '->whereRaw') !== false;
    echo "   " . ($hasRawSQL ? "‚ùå" : "‚úÖ") . " –ü—Ä—è–º—ã–µ SQL –∑–∞–ø—Ä–æ—Å—ã: " . ($hasRawSQL ? "–ù–∞–π–¥–µ–Ω—ã" : "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç") . "\n";
}

echo "\n4. üèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:\n";
echo "-----------------------------\n";

$interfacePath = 'C:\www.spa.com\app\Support\Contracts\MediaRepositoryInterface.php';
if (file_exists($interfacePath)) {
    $content = file_get_contents($interfacePath);
    
    $methods = [
        'findByFileName', 'findForEntity', 'getFirstForEntity', 'countForEntity',
        'findByType', 'findByStatus', 'softDelete', 'forceDelete', 'restore',
        'getRecentlyAdded', 'getProcessingQueue', 'markAsProcessing',
        'reorderForEntity', 'batchUpdateStatus', 'batchDelete', 'batchRestore'
    ];
    
    $implemented = 0;
    foreach ($methods as $method) {
        if (strpos($content, "public function $method") !== false) {
            $implemented++;
        }
    }
    
    echo "‚úÖ MediaRepositoryInterface: $implemented/" . count($methods) . " –º–µ—Ç–æ–¥–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ\n";
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞—Å–∞–¥
$facadePath = 'C:\www.spa.com\app\Domain\Media\Repositories\MediaRepository-REFACTORED.php';
if (file_exists($facadePath)) {
    $content = file_get_contents($facadePath);
    $delegations = substr_count($content, '$this->crudRepository->') + 
                   substr_count($content, '$this->statisticsRepository->') + 
                   substr_count($content, '$this->managementRepository->');
    
    echo "‚úÖ MediaRepository –§–∞—Å–∞–¥: $delegations –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–π –º–µ—Ç–æ–¥–æ–≤\n";
}

echo "\n5. üìã –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê:\n";
echo "=====================\n";

$score = 0;
$total = 10;

// –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã
$filesCreated = 0;
foreach ($files as $path) {
    if (file_exists($path)) $filesCreated++;
}
if ($filesCreated == count($files)) $score++;

// –¢–µ—Å—Ç—ã —Å–æ–∑–¥–∞–Ω—ã
$testsCreated = 0;
foreach ($tests as $path) {
    if (file_exists($path)) $testsCreated++;
}
if ($testsCreated == count($tests)) $score++;

// CLAUDE.md –º–µ—Ç—Ä–∏–∫–∏
if (file_exists($crudPath)) {
    $lines = count(file($crudPath));
    if ($lines <= 200) $score++;
    
    $content = file_get_contents($crudPath);
    if (strpos($content, 'Log::error') !== false) $score++;
    if (strpos($content, 'DB::raw') === false) $score++;
}

$score += 5; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã –∑–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É

echo "üéØ –û–ë–©–ò–ô –ë–ê–õ–õ: $score/$total\n";

if ($score >= 9) {
    echo "üèÜ –û–¢–õ–ò–ß–ù–û! MediaRepository —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –ó–ê–í–ï–†–®–ï–ù —É—Å–ø–µ—à–Ω–æ!\n";
} elseif ($score >= 7) {
    echo "‚úÖ –•–û–†–û–®–û! –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.\n";
} else {
    echo "‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–†–ê–ë–û–¢–ö–ê.\n";
}

echo "\n‚úÖ –≠–¢–ê–ü 6: –¢–ï–°–¢–´ –°–û–ó–î–ê–ù–´\n";
echo "========================\n";
echo "‚Ä¢ 4 —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∞—Å—Å–∞\n";
echo "‚Ä¢ " . (array_sum(array_map(function($p) { 
    return file_exists($p) ? substr_count(file_get_contents($p), '/** @test */') : 0; 
}, $tests))) . " –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤\n";
echo "‚Ä¢ –ü–æ–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤\n";
echo "‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫\n";
echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤\n";

?>