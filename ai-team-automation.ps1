# AI Team Automation Script
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã AI –∫–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ PowerShell

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
$chatFile = "C:\www.spa.com\.ai-team\chat.md"
$checkInterval = 2 # —Å–µ–∫—É–Ω–¥—ã

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
function Write-ToChat {
    param(
        [string]$role,
        [string]$message
    )
    $timestamp = Get-Date -Format "HH:mm"
    $entry = "[$timestamp] [$role]: $message"
    Add-Content -Path $chatFile -Value $entry
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
function Read-ChatMessages {
    param(
        [int]$lastLines = 10
    )
    if (Test-Path $chatFile) {
        Get-Content -Path $chatFile -Tail $lastLines
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
function Check-Mentions {
    param(
        [string[]]$messages,
        [string]$role
    )
    $mentions = @()
    $roleLower = $role.ToLower()
    
    foreach ($msg in $messages) {
        if ($msg -match "@$roleLower" -or $msg -match "@all") {
            $mentions += $msg
        }
    }
    return $mentions
}

# –°–∏–º—É–ª—è—Ç–æ—Ä Backend –∞–≥–µ–Ω—Ç–∞
function Start-BackendAgent {
    Write-Host "Starting Backend Agent..." -ForegroundColor Green
    Write-ToChat "BACKEND" "Backend developer ready. Monitoring for tasks. Expertise: Laravel 12, DDD architecture."
    
    while ($true) {
        $messages = Read-ChatMessages -lastLines 20
        $mentions = Check-Mentions -messages $messages -role "backend"
        
        if ($mentions.Count -gt 0) {
            $lastMention = $mentions[-1]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∫–æ–º–∞–Ω–¥
            if ($lastMention -match "–≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ") {
                Write-ToChat "BACKEND" "‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ú–æ–Ω–∏—Ç–æ—Ä—é —á–∞—Ç –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã."
            }
            elseif ($lastMention -match "—Å–æ–∑–¥–∞–π –º–æ–¥–µ–ª—å (\w+)") {
                $modelName = $matches[1]
                Write-ToChat "BACKEND" "üîÑ working - –°–æ–∑–¥–∞—é –º–æ–¥–µ–ª—å $modelName"
                Start-Sleep -Seconds 3
                Write-ToChat "BACKEND" "‚úÖ done - –ú–æ–¥–µ–ª—å $modelName —Å–æ–∑–¥–∞–Ω–∞ –≤ Domain/$modelName/Models/"
            }
        }
        
        Start-Sleep -Seconds $checkInterval
    }
}

# –°–∏–º—É–ª—è—Ç–æ—Ä Frontend –∞–≥–µ–Ω—Ç–∞
function Start-FrontendAgent {
    Write-Host "Starting Frontend Agent..." -ForegroundColor Blue
    Write-ToChat "FRONTEND" "Frontend developer online. Ready for Vue 3, TypeScript, and FSD architecture tasks."
    
    while ($true) {
        $messages = Read-ChatMessages -lastLines 20
        $mentions = Check-Mentions -messages $messages -role "frontend"
        
        if ($mentions.Count -gt 0) {
            $lastMention = $mentions[-1]
            
            if ($lastMention -match "–≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ") {
                Write-ToChat "FRONTEND" "‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ú–æ–Ω–∏—Ç–æ—Ä—é —á–∞—Ç –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã."
            }
            elseif ($lastMention -match "—Å–æ–∑–¥–∞–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (\w+)") {
                $componentName = $matches[1]
                Write-ToChat "FRONTEND" "üîÑ working - –°–æ–∑–¥–∞—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç $componentName"
                Start-Sleep -Seconds 3
                Write-ToChat "FRONTEND" "‚úÖ done - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç $componentName —Å–æ–∑–¥–∞–Ω –≤ entities/"
            }
        }
        
        Start-Sleep -Seconds $checkInterval
    }
}

# –°–∏–º—É–ª—è—Ç–æ—Ä DevOps –∞–≥–µ–Ω—Ç–∞
function Start-DevOpsAgent {
    Write-Host "Starting DevOps Agent..." -ForegroundColor Yellow
    Write-ToChat "DEVOPS" "DevOps engineer online. Ready for Docker, CI/CD, and infrastructure tasks."
    
    while ($true) {
        $messages = Read-ChatMessages -lastLines 20
        $mentions = Check-Mentions -messages $messages -role "devops"
        
        if ($mentions.Count -gt 0) {
            $lastMention = $mentions[-1]
            
            if ($lastMention -match "–≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ") {
                Write-ToChat "DEVOPS" "‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ú–æ–Ω–∏—Ç–æ—Ä—é —á–∞—Ç –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã."
            }
            elseif ($lastMention -match "–ø—Ä–æ–≤–µ—Ä—å") {
                Write-ToChat "DEVOPS" "üîÑ working - –ü—Ä–æ–≤–µ—Ä—è—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É"
                Start-Sleep -Seconds 2
                Write-ToChat "DEVOPS" "‚úÖ done - –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
            }
        }
        
        Start-Sleep -Seconds $checkInterval
    }
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
Write-Host @"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë     AI Team Automation Script        ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
"@ -ForegroundColor Cyan

Write-Host "`n–í—ã–±–µ—Ä–∏—Ç–µ –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞:" -ForegroundColor White
Write-Host "1. Backend Agent" -ForegroundColor Green
Write-Host "2. Frontend Agent" -ForegroundColor Blue
Write-Host "3. DevOps Agent" -ForegroundColor Yellow
Write-Host "4. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ—Ö (–≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö)" -ForegroundColor Magenta

$choice = Read-Host "`n–í–∞—à –≤—ã–±–æ—Ä (1-4)"

switch ($choice) {
    "1" { Start-BackendAgent }
    "2" { Start-FrontendAgent }
    "3" { Start-DevOpsAgent }
    "4" {
        # –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö PowerShell
        Start-Process powershell -ArgumentList "-NoExit", "-Command", "& '$PSCommandPath' -Agent Backend" -WindowStyle Normal
        Start-Process powershell -ArgumentList "-NoExit", "-Command", "& '$PSCommandPath' -Agent Frontend" -WindowStyle Normal
        Start-Process powershell -ArgumentList "-NoExit", "-Command", "& '$PSCommandPath' -Agent DevOps" -WindowStyle Normal
        Write-Host "–í—Å–µ –∞–≥–µ–Ω—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö!" -ForegroundColor Green
    }
    default {
        Write-Host "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!" -ForegroundColor Red
    }
}

# –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
if ($args.Count -eq 2 -and $args[0] -eq "-Agent") {
    switch ($args[1]) {
        "Backend" { Start-BackendAgent }
        "Frontend" { Start-FrontendAgent }
        "DevOps" { Start-DevOpsAgent }
    }
}