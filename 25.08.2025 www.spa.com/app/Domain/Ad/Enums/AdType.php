<?php

namespace App\Domain\Ad\Enums;

/**
 * –¢–∏–ø—ã –æ–±—ä—è–≤–ª–µ–Ω–∏–π
 * –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ª—É–≥ –≤ —Å–∏—Å—Ç–µ–º–µ
 */
enum AdType: string
{
    case MASSAGE = 'massage';
    case SPA = 'spa';
    case THERAPY = 'therapy';
    case WELLNESS = 'wellness';
    case BEAUTY = 'beauty';
    case FITNESS = 'fitness';
    case MEDICAL = 'medical';
    case RELAXATION = 'relaxation';

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞
     */
    public function getLabel(): string
    {
        return match($this) {
            self::MASSAGE => '–ú–∞—Å—Å–∞–∂',
            self::SPA => 'SPA –ø—Ä–æ—Ü–µ–¥—É—Ä—ã',
            self::THERAPY => '–¢–µ—Ä–∞–ø–∏—è',
            self::WELLNESS => '–í–µ–ª–Ω–µ—Å—Å',
            self::BEAUTY => '–ö—Ä–∞—Å–æ—Ç–∞',
            self::FITNESS => '–§–∏—Ç–Ω–µ—Å',
            self::MEDICAL => '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —É—Å–ª—É–≥–∏',
            self::RELAXATION => '–†–µ–ª–∞–∫—Å–∞—Ü–∏—è',
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–∞
     */
    public function getDescription(): string
    {
        return match($this) {
            self::MASSAGE => '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π, —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π, –ª–µ—á–µ–±–Ω—ã–π –º–∞—Å—Å–∞–∂',
            self::SPA => 'SPA —Å–∞–ª–æ–Ω—ã, –æ–±–µ—Ä—Ç—ã–≤–∞–Ω–∏—è, —É—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º',
            self::THERAPY => '–§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–∏—è, —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è, –ª–µ—á–µ–Ω–∏–µ',
            self::WELLNESS => '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –æ–∑–¥–æ—Ä–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã',
            self::BEAUTY => '–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è, —É—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π, —ç—Å—Ç–µ—Ç–∏–∫–∞',
            self::FITNESS => '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, —Ä–∞—Å—Ç—è–∂–∫–∞',
            self::MEDICAL => '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –º–∞—Å—Å–∞–∂, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ',
            self::RELAXATION => '–ê–Ω—Ç–∏—Å—Ç—Ä–µ—Å—Å –ø—Ä–æ–≥—Ä–∞–º–º—ã, –º–µ–¥–∏—Ç–∞—Ü–∏—è',
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è UI
     */
    public function getIcon(): string
    {
        return match($this) {
            self::MASSAGE => 'üíÜ',
            self::SPA => 'üõÅ',
            self::THERAPY => 'üè•',
            self::WELLNESS => 'üå±',
            self::BEAUTY => 'üíÑ',
            self::FITNESS => 'üí™',
            self::MEDICAL => '‚öïÔ∏è',
            self::RELAXATION => 'üßò',
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è UI
     */
    public function getColor(): string
    {
        return match($this) {
            self::MASSAGE => '#8B5CF6',      // violet
            self::SPA => '#06B6D4',          // cyan
            self::THERAPY => '#EF4444',      // red
            self::WELLNESS => '#10B981',     // emerald
            self::BEAUTY => '#EC4899',       // pink
            self::FITNESS => '#F97316',      // orange
            self::MEDICAL => '#3B82F6',      // blue
            self::RELAXATION => '#84CC16',   // lime
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±—É–µ—Ç –ª–∏ —Ç–∏–ø —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏
     */
    public function requiresLicense(): bool
    {
        return match($this) {
            self::MEDICAL, self::THERAPY => true,
            default => false,
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ–¥–∫ateg–æ—Ä–∏–∏
     */
    public function getSubcategories(): array
    {
        return match($this) {
            self::MASSAGE => [
                'classic' => '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
                'relax' => '–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π',
                'therapeutic' => '–õ–µ—á–µ–±–Ω—ã–π',
                'sports' => '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π',
                'lymphatic' => '–õ–∏–º—Ñ–æ–¥—Ä–µ–Ω–∞–∂–Ω—ã–π',
            ],
            self::SPA => [
                'body_wrap' => '–û–±–µ—Ä—Ç—ã–≤–∞–Ω–∏—è',
                'scrub' => '–°–∫—Ä–∞–±–∏–Ω–≥',
                'hydro' => '–ì–∏–¥—Ä–æ—Ç–µ—Ä–∞–ø–∏—è',
                'aromatherapy' => '–ê—Ä–æ–º–∞—Ç–µ—Ä–∞–ø–∏—è',
            ],
            self::THERAPY => [
                'physio' => '–§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–∏—è',
                'manual' => '–ú–∞–Ω—É–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è',
                'rehabilitation' => '–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è',
            ],
            self::BEAUTY => [
                'facial' => '–£—Ö–æ–¥ –∑–∞ –ª–∏—Ü–æ–º',
                'body_care' => '–£—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º',
                'anti_age' => '–ê–Ω—Ç–∏–≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —É—Ö–æ–¥',
            ],
            default => [],
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ä–µ–¥–Ω–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω
     */
    public function getPriceRange(): array
    {
        return match($this) {
            self::MASSAGE => ['min' => 2000, 'max' => 5000],
            self::SPA => ['min' => 3000, 'max' => 8000],
            self::THERAPY => ['min' => 2500, 'max' => 6000],
            self::WELLNESS => ['min' => 4000, 'max' => 10000],
            self::BEAUTY => ['min' => 2000, 'max' => 7000],
            self::FITNESS => ['min' => 1500, 'max' => 4000],
            self::MEDICAL => ['min' => 3000, 'max' => 8000],
            self::RELAXATION => ['min' => 2000, 'max' => 5000],
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–∏–ø—ã –¥–ª—è –≤—ã–±–æ—Ä–∫–∏
     */
    public static function options(): array
    {
        $types = [];
        foreach (self::cases() as $type) {
            $types[$type->value] = $type->getLabel();
        }
        return $types;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–∏–ø—ã (–¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
     */
    public static function popularTypes(): array
    {
        return [
            self::MASSAGE,
            self::SPA,
            self::BEAUTY,
            self::RELAXATION,
        ];
    }
}