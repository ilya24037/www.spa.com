import '../css/app.css';
import './bootstrap';

import { createInertiaApp } from '@inertiajs/vue3';
import { resolvePageComponent } from 'laravel-vite-plugin/inertia-helpers';
import { createApp, h } from 'vue';
import { ZiggyVue } from '../../vendor/tightenco/ziggy';
import { createPinia } from 'pinia';

const appName = import.meta.env.VITE_APP_NAME || 'Laravel';

createInertiaApp({
    title: (title) => `${title} - ${appName}`,
    resolve: async (name) => {
        const page = await resolvePageComponent(
            `./Pages/${name}.vue`,
            import.meta.glob('./Pages/**/*.vue'),
        );
        
        if (!page.default.layout) {
            const AppLayout = await import('./Layouts/AppLayout.vue');
            page.default.layout = AppLayout.default;
        }
        
        return page;
    },
    setup({ el, App, props, plugin }) {
        const pinia = createPinia();
        
        const app = createApp({ render: () => h(App, props) });
        
        // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ Vue
        app.config.errorHandler = (err, instance, info) => {
            console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ Vue:', err);
            console.error('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç:', instance);
            console.error('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:', info);
            
            // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            if (window.axios) {
                window.axios.post('/api/log-error', {
                    error: err.toString(),
                    stack: err.stack,
                    component: instance?.$options.name || 'Unknown',
                    info: info
                }).catch(() => {
                    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
                });
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if (window.toast) {
                window.toast.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ—ë –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º.');
            }
        };
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π Vue (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        app.config.warnHandler = (msg, instance, trace) => {
            console.warn('Vue –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ:', msg);
        };
        
        // üî• –î–ò–†–ï–ö–¢–ò–í–ê CLICK-OUTSIDE - –∑–∞–∫—Ä—ã—Ç–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ
        app.directive('click-outside', {
            mounted(el, binding) {
                el.clickOutsideEvent = function(event) {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –≤–Ω–µ —ç–ª–µ–º–µ–Ω—Ç–∞
                    if (!(el === event.target || el.contains(event.target))) {
                        binding.value(event);
                    }
                };
                // –°–ª—É—à–∞–µ–º –∫–ª–∏–∫–∏ –ø–æ –≤—Å–µ–º—É –¥–æ–∫—É–º–µ–Ω—Ç—É
                document.body.addEventListener('click', el.clickOutsideEvent);
            },
            unmounted(el) {
                // –£–¥–∞–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
                document.body.removeEventListener('click', el.clickOutsideEvent);
            }
        });
        
        // üî• –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–û–õ–ï–ó–ù–´–ï –î–ò–†–ï–ö–¢–ò–í–´
        
        // –î–∏—Ä–µ–∫—Ç–∏–≤–∞ –¥–ª—è –∞–≤—Ç–æ—Ñ–æ–∫—É—Å–∞
        app.directive('focus', {
            mounted(el) {
                el.focus();
            }
        });
        
        // –î–∏—Ä–µ–∫—Ç–∏–≤–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
        app.directive('resize', {
            mounted(el, binding) {
                const resizeObserver = new ResizeObserver(entries => {
                    binding.value(entries[0]);
                });
                resizeObserver.observe(el);
                el._resizeObserver = resizeObserver;
            },
            unmounted(el) {
                if (el._resizeObserver) {
                    el._resizeObserver.disconnect();
                    delete el._resizeObserver;
                }
            }
        });
        
        // –î–∏—Ä–µ–∫—Ç–∏–≤–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
        app.directive('clipboard', {
            mounted(el, binding) {
                el.clickHandler = () => {
                    const text = binding.value || el.textContent;
                    navigator.clipboard.writeText(text).then(() => {
                        if (window.toast) {
                            window.toast.success('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
                        }
                    }).catch(err => {
                        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
                    });
                };
                el.addEventListener('click', el.clickHandler);
            },
            unmounted(el) {
                el.removeEventListener('click', el.clickHandler);
            }
        });
        
        // –î–∏—Ä–µ–∫—Ç–∏–≤–∞ –¥–ª—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        app.directive('lazy', {
            mounted(el) {
                const imageObserver = new IntersectionObserver((entries, observer) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            const img = entry.target;
                            img.src = img.dataset.src;
                            img.classList.remove('lazy');
                            observer.unobserve(img);
                        }
                    });
                });
                imageObserver.observe(el);
            }
        });
        
        app.use(plugin);
        app.use(ZiggyVue);
        app.use(pinia);
        
        app.config.globalProperties.route = route;
        
        return app.mount(el);
    },
    progress: {
        color: '#4B5563',
    },
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ JavaScript
window.addEventListener('error', (event) => {
    console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è JS –æ—à–∏–±–∫–∞:', event.error);
    // –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö Promise rejection
window.addEventListener('unhandledrejection', (event) => {
    console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π Promise rejection:', event.reason);
    event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
});