/**
 * –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ Yandex Maps API –ø–æ –æ–±—Ä–∞–∑—Ü—É –∞—Ä—Ö–∏–≤–Ω–æ–π –∫–∞—Ä—Ç—ã
 * –ü—Ä–∏–Ω—Ü–∏–ø KISS: —É–±–∏—Ä–∞–µ–º —Å–ª–æ–∂–Ω—ã–π Singleton, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–µ Promise —Ä–µ—à–µ–Ω–∏–µ
 * –†–∞–∑–º–µ—Ä: 25 —Å—Ç—Ä–æ–∫
 */

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–∫ –≤ –∞—Ä—Ö–∏–≤–µ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
export const loadYandexMaps = (apiKey: string): Promise<typeof ymaps> => {
  return new Promise((resolve, reject) => {
    console.log('[MapLoader] üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É Yandex Maps API')
    console.log('[MapLoader] üîë API Key:', apiKey)
    
    // –ï—Å–ª–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ä–∞–∑—É
    if (window.ymaps && window.ymaps.ready) {
      console.log('[MapLoader] ‚úÖ API —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π')
      window.ymaps.ready(() => {
        console.log('[MapLoader] ‚úÖ ymaps.ready() –≤—ã–ø–æ–ª–Ω–µ–Ω')
        resolve(window.ymaps)
      })
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    if (!apiKey || apiKey.trim() === '') {
      console.warn('[MapLoader] ‚ö†Ô∏è API –∫–ª—é—á –ø—É—Å—Ç–æ–π, –∑–∞–≥—Ä—É–∂–∞–µ–º –±–µ–∑ –∫–ª—é—á–∞')
    }

    // –°–æ–∑–¥–∞–µ–º script tag 
    const script = document.createElement('script')
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É API 2.1 (geocode –≤–∫–ª—é—á–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    const url = `https://api-maps.yandex.ru/2.1/?lang=ru_RU&apikey=${apiKey}`
    script.src = url
    
    console.log('[MapLoader] üì° –ó–∞–≥—Ä—É–∂–∞–µ–º API —Å URL:', url)
    
    script.onload = () => {
      console.log('[MapLoader] üì¶ Script –∑–∞–≥—Ä—É–∂–µ–Ω, –∂–¥—ë–º ymaps.ready()')
      
      if (window.ymaps && window.ymaps.ready) {
        window.ymaps.ready(() => {
          console.log('[MapLoader] ‚úÖ Yandex Maps API –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é')
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥—É–ª–µ–π
          console.log('[MapLoader] üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π:')
          console.log('[MapLoader]   - geocode:', typeof window.ymaps.geocode === 'function' ? '‚úÖ' : '‚ùå')
          console.log('[MapLoader]   - Map:', typeof window.ymaps.Map === 'function' ? '‚úÖ' : '‚ùå')
          console.log('[MapLoader]   - Placemark:', typeof window.ymaps.Placemark === 'function' ? '‚úÖ' : '‚ùå')
          console.log('[MapLoader]   - Clusterer:', typeof window.ymaps.Clusterer === 'function' ? '‚úÖ' : '‚ùå')
          
          resolve(window.ymaps)
        })
      } else {
        console.error('[MapLoader] ‚ùå window.ymaps –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ script')
        reject(new Error('window.ymaps is not available after script load'))
      }
    }
    
    script.onerror = (error) => {
      console.error('[MapLoader] ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ script:', error)
      console.error('[MapLoader] üì° URL –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å:', url)
      reject(new Error(`Failed to load Yandex Maps API from ${url}`))
    }
    
    console.log('[MapLoader] üîÑ –î–æ–±–∞–≤–ª—è–µ–º script –≤ head')
    document.head.appendChild(script)
  })
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export const mapLoader = {
  load: loadYandexMaps
}