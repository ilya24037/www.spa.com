import { ref, computed, watch } from 'vue'
import { useFilterStore } from '@/src/features/masters-filter/model/filter.store'
import type { MapMarker } from '@/src/shared/ui/molecules/YandexMapPicker/YandexMapPicker.vue'

interface Master {
  id: number | string
  name: string
  rating?: number
  reviews_count?: number
  price?: number
  address?: string
  lat?: number
  lng?: number
  photo?: string
  services?: Array<{ id: number; name: string }>
  is_online?: boolean
  is_available_today?: boolean
}

export function useMapWithMasters() {
  // Store –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const filterStore = useFilterStore()
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ
  const masters = ref<Master[]>([])
  const isLoading = ref(false)
  const error = ref<string | null>(null)
  const selectedMaster = ref<Master | null>(null)
  const mapCenter = ref({ lat: 58.0105, lng: 56.2502 }) // –ü–µ—Ä–º—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const mapZoom = ref(12)
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ –º–∞—Ä–∫–µ—Ä—ã –¥–ª—è –∫–∞—Ä—Ç—ã
  const mapMarkers = computed<MapMarker[]>(() => {
    return masters.value.map(master => ({
      id: master.id,
      lat: master.lat || mapCenter.value.lat + (Math.random() - 0.5) * 0.1,
      lng: master.lng || mapCenter.value.lng + (Math.random() - 0.5) * 0.1,
      title: master.name,
      description: formatMasterDescription(master),
      icon: getMarkerIcon(master),
      data: master
    }))
  })
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è –±–∞–ª—É–Ω–∞
  const formatMasterDescription = (master: Master): string => {
    const parts = []
    
    if (master.rating) {
      parts.push(`‚≠ê ${master.rating} (${master.reviews_count || 0} –æ—Ç–∑—ã–≤–æ–≤)`)
    }
    
    if (master.price) {
      parts.push(`üí∞ –æ—Ç ${master.price} ‚ÇΩ`)
    }
    
    if (master.address) {
      parts.push(`üìç ${master.address}`)
    }
    
    if (master.services && master.services.length > 0) {
      const serviceNames = master.services.slice(0, 3).map(s => s.name).join(', ')
      parts.push(`üíÜ ${serviceNames}`)
    }
    
    return parts.join('<br>')
  }
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –º–∞—Ä–∫–µ—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞
  const getMarkerIcon = (master: Master): string => {
    if (master.rating && master.rating >= 4.5) {
      return 'islands#goldIcon' // –ó–æ–ª–æ—Ç–æ–π –¥–ª—è —Ç–æ–ø–æ–≤—ã—Ö
    } else if (master.rating && master.rating >= 4) {
      return 'islands#greenIcon' // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è —Ö–æ—Ä–æ—à–∏—Ö
    } else if (master.is_available_today) {
      return 'islands#blueIcon' // –°–∏–Ω–∏–π –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è
    }
    return 'islands#grayIcon' // –°–µ—Ä—ã–π –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
  }
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const loadMasters = async () => {
    isLoading.value = true
    error.value = null
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
      const queryParams = filterStore.getQueryParams()
      
      // –°—Ç—Ä–æ–∏–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
      const params = new URLSearchParams(queryParams)
      const url = `/api/masters?${params.toString()}`
      
      const response = await fetch(url, {
        headers: {
          'Accept': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      
      if (!response.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Å—Ç–µ—Ä–æ–≤')
      }
      
      const data = await response.json()
      masters.value = data.data || []
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å –ª–æ–∫–∞—Ü–∏—è –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö
      if (filterStore.filters.location.lat && filterStore.filters.location.lng) {
        mapCenter.value = {
          lat: filterStore.filters.location.lat,
          lng: filterStore.filters.location.lng
        }
      }
      
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Ç–µ—Ä–æ–≤:', err)
      error.value = err instanceof Error ? err.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      masters.value = generateMockMasters()
    } finally {
      isLoading.value = false
    }
  }
  
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const generateMockMasters = (): Master[] => {
    const services = [
      { id: 1, name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∞–∂' },
      { id: 2, name: '–¢–∞–π—Å–∫–∏–π –º–∞—Å—Å–∞–∂' },
      { id: 3, name: '–õ–µ—á–µ–±–Ω—ã–π –º–∞—Å—Å–∞–∂' },
      { id: 4, name: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∞–∂' },
      { id: 5, name: '–ê–Ω—Ç–∏—Ü–µ–ª–ª—é–ª–∏—Ç–Ω—ã–π' },
      { id: 6, name: '–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π' }
    ]
    
    const addresses = [
      '—É–ª. –õ–µ–Ω–∏–Ω–∞, 45',
      '—É–ª. –ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç, 29',
      '—É–ª. –ï–∫–∞—Ç–µ—Ä–∏–Ω–∏–Ω—Å–∫–∞—è, 120',
      '—É–ª. –°–∏–±–∏—Ä—Å–∫–∞—è, 35',
      '—É–ª. –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫–∞—è, 55',
      '—É–ª. –ö—É–π–±—ã—à–µ–≤–∞, 88'
    ]
    
    return Array.from({ length: 20 }, (_, i) => ({
      id: i + 1,
      name: `–ú–∞—Å—Ç–µ—Ä ${i + 1}`,
      rating: 3.5 + Math.random() * 1.5,
      reviews_count: Math.floor(Math.random() * 50),
      price: 1500 + Math.floor(Math.random() * 3500),
      address: addresses[Math.floor(Math.random() * addresses.length)],
      lat: mapCenter.value.lat + (Math.random() - 0.5) * 0.1,
      lng: mapCenter.value.lng + (Math.random() - 0.5) * 0.1,
      photo: `/images/masters/master-${(i % 5) + 1}.jpg`,
      services: services.slice(0, Math.floor(Math.random() * 3) + 1),
      is_online: Math.random() > 0.5,
      is_available_today: Math.random() > 0.7
    }))
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –º–∞—Ä–∫–µ—Ä—É
  const handleMarkerClick = (marker: MapMarker) => {
    selectedMaster.value = marker.data as Master
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–ª–∞—Å—Ç–µ—Ä—É
  const handleClusterClick = (markers: MapMarker[]) => {
    // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ
    console.log('–ö–ª–∞—Å—Ç–µ—Ä —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞—Å—Ç–µ—Ä–æ–≤:', markers.length)
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü –∫–∞—Ä—Ç—ã
  const handleBoundsChange = (bounds: any) => {
    // –ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏
    console.log('–ì—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ä—Ç—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å:', bounds)
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö
  const updateFilterLocation = (lat: number, lng: number, address?: string) => {
    filterStore.setLocation(address || '', lat, lng)
  }
  
  // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  watch(
    () => filterStore.filters,
    () => {
      loadMasters()
    },
    { deep: true }
  )
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  loadMasters()
  
  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    masters,
    mapMarkers,
    isLoading,
    error,
    selectedMaster,
    mapCenter,
    mapZoom,
    
    // –ú–µ—Ç–æ–¥—ã
    loadMasters,
    handleMarkerClick,
    handleClusterClick,
    handleBoundsChange,
    updateFilterLocation
  }
}