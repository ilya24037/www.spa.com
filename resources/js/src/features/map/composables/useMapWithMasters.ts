import { ref, computed, watch } from 'vue'
import { useFilterStore } from '@/src/features/masters-filter/model/filter.store'
import type { MapMarker } from '@/src/shared/ui/molecules/YandexMapPicker/YandexMap.vue'

interface Master {
  id: number | string
  name: string
  rating?: number
  reviews_count?: number
  price?: number
  price_from?: number
  address?: string
  lat?: number
  lng?: number
  geo?: {
    lat: number
    lng: number
    address?: string
    district?: string
    city?: string
  }
  coordinates?: {
    lat: number
    lng: number
  }
  photo?: string
  services?: Array<{ id: number; name: string } | null>
  district?: string | null
  city?: string | null
  is_online?: boolean
  is_available_today?: boolean
  is_premium?: boolean
  is_verified?: boolean
}

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è –ü–µ—Ä–º–∏
const PERM_CENTER = { lat: 58.0105, lng: 56.2502 }
const DEFAULT_ZOOM = 12

export function useMapWithMasters(initialMasters?: Master[]) {
  // Store –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const filterStore = useFilterStore()
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã
  const masters = ref<Master[]>(initialMasters || [])
  const isLoading = ref(false)
  const error = ref<string | null>(null)
  const selectedMaster = ref<Master | null>(null)
  const mapCenter = ref({ lat: PERM_CENTER.lat, lng: PERM_CENTER.lng })
  const mapZoom = ref(DEFAULT_ZOOM)
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ –º–∞—Ä–∫–µ—Ä—ã –¥–ª—è –∫–∞—Ä—Ç—ã
  const mapMarkers = computed<MapMarker[]>(() => {
    return masters.value.map(master => {
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–ª–µ–π
      let lat: number | undefined
      let lng: number | undefined
      
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: geo -> coordinates -> –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–ª—è lat/lng
      if (master.geo && typeof master.geo.lat === 'number' && typeof master.geo.lng === 'number') {
        lat = master.geo.lat
        lng = master.geo.lng
      } else if (master.coordinates && typeof master.coordinates.lat === 'number' && typeof master.coordinates.lng === 'number') {
        lat = master.coordinates.lat
        lng = master.coordinates.lng
      } else if (typeof master.lat === 'number' && typeof master.lng === 'number') {
        lat = master.lat
        lng = master.lng
      }
      
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ –±–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
      if (!lat || !lng) {
        return null
      }
      
      return {
        id: master.id,
        lat,
        lng,
        title: master.name,
        description: formatMasterDescription(master),
        icon: getMarkerIcon(master),
        data: master
      }
    }).filter(marker => marker !== null) as MapMarker[]
  })
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è –±–∞–ª—É–Ω–∞
  const formatMasterDescription = (master: Master): string => {
    const parts = []
    
    if (master.rating) {
      parts.push(`‚≠ê ${master.rating} (${master.reviews_count || 0} –æ—Ç–∑—ã–≤–æ–≤)`)
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º price_from –∏–ª–∏ price
    const price = master.price_from || master.price
    if (price) {
      parts.push(`üí∞ –æ—Ç ${price} ‚ÇΩ`)
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–¥—Ä–µ—Å –∏–∑ geo –∏–ª–∏ –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è
    const address = master.geo?.address || master.address
    if (address) {
      parts.push(`üìç ${address}`)
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–π–æ–Ω –µ—Å–ª–∏ –µ—Å—Ç—å
    const district = master.geo?.district || master.district
    if (district) {
      parts.push(`üèòÔ∏è ${district}`)
    }
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º services –æ—Ç null –∑–Ω–∞—á–µ–Ω–∏–π
    if (master.services && master.services.length > 0) {
      const serviceNames = master.services
        .filter(s => s !== null && s !== undefined && s.name) // –§–∏–ª—å—Ç—Ä—É–µ–º null/undefined
        .slice(0, 3)
        .map(s => s!.name)
        .join(', ')
      if (serviceNames) {
        parts.push(`üíÜ ${serviceNames}`)
      }
    }
    
    return parts.join('<br>')
  }
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –º–∞—Ä–∫–µ—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞
  const getMarkerIcon = (master: Master): string => {
    if (master.rating && master.rating >= 4.5) {
      return 'islands#goldIcon' // –ó–æ–ª–æ—Ç–æ–π –¥–ª—è —Ç–æ–ø–æ–≤—ã—Ö
    } else if (master.rating && master.rating >= 4) {
      return 'islands#greenIcon' // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è —Ö–æ—Ä–æ—à–∏—Ö
    } else if (master.is_available_today) {
      return 'islands#blueIcon' // –°–∏–Ω–∏–π –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è
    }
    return 'islands#grayIcon' // –°–µ—Ä—ã–π –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
  }
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const loadMasters = async (skipInitial: boolean = false) => {
    // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    if (skipInitial && initialMasters && initialMasters.length > 0) {
      return
    }
    
    isLoading.value = true
    error.value = null
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
      const queryParams = filterStore.getQueryParams()
      
      // –°—Ç—Ä–æ–∏–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
      const params = new URLSearchParams(queryParams)
      const url = `/api/masters?${params.toString()}`
      
      const response = await fetch(url, {
        headers: {
          'Accept': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      
      if (!response.ok) {
        // –ï—Å–ª–∏ API –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –µ—Å—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
        if (initialMasters && initialMasters.length > 0) {
          console.warn('API –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
          return
        }
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Å—Ç–µ—Ä–æ–≤')
      }
      
      const data = await response.json()
      masters.value = data.data || []
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å –ª–æ–∫–∞—Ü–∏—è –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö
      if (filterStore.filters.location.lat && filterStore.filters.location.lng) {
        mapCenter.value = {
          lat: filterStore.filters.location.lat,
          lng: filterStore.filters.location.lng
        }
      }
      
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Ç–µ—Ä–æ–≤:', err)
      error.value = err instanceof Error ? err.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
      if (initialMasters && initialMasters.length > 0) {
        console.warn('–ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏')
        masters.value = initialMasters
      } else {
        masters.value = []
      }
    } finally {
      isLoading.value = false
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –º–∞—Ä–∫–µ—Ä—É
  const handleMarkerClick = (marker: MapMarker) => {
    selectedMaster.value = marker.data as Master
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–ª–∞—Å—Ç–µ—Ä—É
  const handleClusterClick = (markers: MapMarker[]) => {
    // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ
    // Debug log removed
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü –∫–∞—Ä—Ç—ã –¥–ª—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
  const handleBoundsChange = (bounds: any) => {
    // bounds - —ç—Ç–æ –º–∞—Å—Å–∏–≤ [[southWest], [northEast]] –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    if (!bounds || bounds.length !== 2) return
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –≥—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    const currentBounds = {
      sw_lat: bounds[0][0],
      sw_lng: bounds[0][1],
      ne_lat: bounds[1][0],
      ne_lng: bounds[1][1]
    }
    
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞—Ä–∫–µ—Ä–æ–≤ –ø–æ –≥—Ä–∞–Ω–∏—Ü–∞–º
    // –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ API —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≥—Ä–∞–Ω–∏—Ü
    
    // –ü—Ä–∏–º–µ—Ä: —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–∞—Ä–∫–µ—Ä–æ–≤
    const visibleMarkers = masters.value.filter(master => {
      const lat = master.geo?.lat || master.lat
      const lng = master.geo?.lng || master.lng
      
      if (!lat || !lng) return false
      
      return lat >= currentBounds.sw_lat && 
             lat <= currentBounds.ne_lat &&
             lng >= currentBounds.sw_lng && 
             lng <= currentBounds.ne_lng
    })
    
    // –î–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–∏–¥–∏–º—ã–µ –º–∞—Ä–∫–µ—Ä—ã
    // –µ—Å–ª–∏ –∏—Ö —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ
    if (masters.value.length > 100) {
      // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –º–∞—Ä–∫–µ—Ä–∞–º–∏
      // –≠—Ç–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      return visibleMarkers
    }
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö
  const updateFilterLocation = (lat: number, lng: number, address?: string) => {
    filterStore.setLocation(address || '', lat, lng)
  }
  
  // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  watch(
    () => filterStore.filters,
    () => {
      loadMasters()
    },
    { deep: true }
  )
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  if (!initialMasters || initialMasters.length === 0) {
    loadMasters()
  }
  
  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    masters,
    mapMarkers,
    isLoading,
    error,
    selectedMaster,
    mapCenter,
    mapZoom,
    
    // –ú–µ—Ç–æ–¥—ã
    loadMasters,
    handleMarkerClick,
    handleClusterClick,
    handleBoundsChange,
    updateFilterLocation
  }
}