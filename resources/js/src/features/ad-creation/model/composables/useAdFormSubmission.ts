import { ref } from 'vue'
import { router } from '@inertiajs/vue3'
import type { AdForm, SubmissionResult } from '../types'
import { buildFormData } from '../utils/formDataBuilder'

/**
 * Composable –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –æ–±—ä—è–≤–ª–µ–Ω–∏—è
 * KISS: –ü—Ä–æ—Å—Ç–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏
 */
export function useAdFormSubmission() {
  const abortController = ref<AbortController | null>(null)
  
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ —Ñ–æ—Ä–º–µ (—Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ)
   * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–µ –∏–∑ backup
   */
  const hasFiles = (form: AdForm): boolean => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ —Ñ–∞–π–ª–æ–≤
    const hasPhotoFiles = form.photos?.some((p: any) => {
      if (p instanceof File) return true
      if (typeof p === 'object' && p !== null && p.file instanceof File) return true
      return false
    }) || false
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤  
    const hasVideoFiles = form.video?.some((v: any) => {
      if (v instanceof File) return true
      if (typeof v === 'object' && v !== null && v.file instanceof File) return true
      // –°—Ç—Ä–æ–∫–∞ base64
      if (typeof v === 'string' && v.startsWith('data:video/')) return true
      return false
    }) || false
    
    return hasPhotoFiles || hasVideoFiles
  }
  
  // ‚úÖ –°–û–•–†–ê–ù–ï–ù–ò–ï –ß–ï–†–ù–û–í–ò–ö–ê (–í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–û –∏–∑ backup: –∏—Å–ø–æ–ª—å–∑—É–µ–º Inertia router –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
  const saveDraft = async (form: AdForm): Promise<SubmissionResult> => {
    return new Promise((resolve) => {
      console.log('üîç saveDraft –ù–ê–ß–ê–õ–û —Å form:', form)
      
      // –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è resolve
      let resolved = false
      
      // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      const formData = buildFormData(form, false) // false = —á–µ—Ä–Ω–æ–≤–∏–∫
      console.log('üîç saveDraft buildFormData –∑–∞–≤–µ—Ä—à–µ–Ω, formData —Å–æ–∑–¥–∞–Ω')
      
      // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ URL –∏ –º–µ—Ç–æ–¥–∞
      const isUpdate = !!form.id
      
      if (isUpdate) {
        const adId = form.id
        const filesPresent = hasFiles(form)
        
        console.log('üîç saveDraft –û–ë–ù–û–í–õ–ï–ù–ò–ï —á–µ—Ä–Ω–æ–≤–∏–∫–∞:', { 
          adId, 
          hasFiles: filesPresent,
          method: filesPresent ? 'POST —Å _method=PUT' : 'PUT'
        })
        
        if (filesPresent) {
          // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º FormData —Å POST –∏ _method=PUT (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
          formData.append('_method', 'PUT')
          
          router.post(`/draft/${adId}`, formData as any, {
            preserveScroll: true,
            preserveState: true,
            forceFormData: true,
            only: ['ad'],
            onSuccess: (page: any) => {
              console.log('‚úÖ saveDraft: –ß–µ—Ä–Ω–æ–≤–∏–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω (—Å —Ñ–∞–π–ª–∞–º–∏)', page)
              if (!resolved) {
                resolved = true
                resolve({
                  success: true,
                  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –¥–ª—è Inertia –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ flash session –≤ page.props
                  data: page.props?.ad || page.props?.flash?.ad || page.props,
                  message: page.props?.flash?.success || page.props?.success || '–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω'
                })
              }
            },
            onError: (errors: any) => {
              console.error('‚ùå saveDraft: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞', errors)
              if (!resolved) {
                resolved = true
                resolve({
                  success: false,
                  errors: errors,
                  message: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞'
                })
              }
            },
            onFinish: () => {
              console.log('üèÅ saveDraft: –ó–∞–ø—Ä–æ—Å —Å —Ñ–∞–π–ª–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω')
              // –ï—Å–ª–∏ –Ω–µ –±—ã–ª —Ä–µ–∑–æ–ª–≤–ª–µ–Ω –≤ onSuccess –∏–ª–∏ onError
              if (!resolved) {
                resolved = true
                resolve({
                  success: true,
                  message: '–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω'
                })
              }
            }
          })
        } else {
          // –ï—Å–ª–∏ —Ñ–∞–π–ª–æ–≤ –Ω–µ—Ç - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π PUT —Å –æ–±—ä–µ–∫—Ç–æ–º (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
          const plainData = convertFormDataToPlainObject(formData)
          
          router.put(`/draft/${adId}`, plainData, {
            preserveScroll: true,
            preserveState: true,
            onSuccess: (page: any) => {
              console.log('‚úÖ saveDraft: –ß–µ—Ä–Ω–æ–≤–∏–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω (–±–µ–∑ —Ñ–∞–π–ª–æ–≤)', page)
              if (!resolved) {
                resolved = true
                resolve({
                  success: true,
                  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –¥–ª—è Inertia –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ flash session –≤ page.props
                  data: page.props?.ad || page.props?.flash?.ad || page.props,
                  message: page.props?.flash?.success || page.props?.success || '–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω'
                })
              }
            },
            onError: (errors: any) => {
              console.error('‚ùå saveDraft: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞', errors)
              if (!resolved) {
                resolved = true
                resolve({
                  success: false,
                  errors: errors,
                  message: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞'
                })
              }
            },
            onFinish: () => {
              console.log('üèÅ saveDraft: –ó–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω')
              // –ï—Å–ª–∏ –Ω–µ –±—ã–ª —Ä–µ–∑–æ–ª–≤–ª–µ–Ω –≤ onSuccess –∏–ª–∏ onError
              if (!resolved) {
                resolved = true
                resolve({
                  success: true,
                  message: '–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω'
                })
              }
            }
          })
        }
      } else {
        // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ - –≤—Å–µ–≥–¥–∞ POST —Å FormData (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
        console.log('üîç saveDraft –°–û–ó–î–ê–ù–ò–ï –Ω–æ–≤–æ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞')
        
        router.post('/draft', formData as any, {
          preserveScroll: true,
          forceFormData: true,
          onSuccess: (response: any) => {
            console.log('‚úÖ saveDraft: –ù–æ–≤—ã–π —á–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ–∑–¥–∞–Ω')
            resolve({
              success: true,
              data: response.props?.ad || response,
              message: '–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ–∑–¥–∞–Ω'
            })
          },
          onError: (errors: any) => {
            console.error('‚ùå saveDraft: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞', errors)
            resolve({
              success: false,
              errors: errors,
              message: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞'
            })
          }
        })
      }
    })
  }
  
  // ‚úÖ –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø –û–ë–™–Ø–í–õ–ï–ù–ò–Ø (–∏—Å–ø–æ–ª—å–∑—É–µ–º Inertia router)
  const publishAd = async (form: AdForm): Promise<SubmissionResult> => {
    return new Promise((resolve) => {
      console.log('üîç publishAd –ù–ê–ß–ê–õ–û —Å form:', form)
      
      // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      const formData = buildFormData(form, true) // true = –ø—É–±–ª–∏–∫–∞—Ü–∏—è
      
      // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ URL –∏ –º–µ—Ç–æ–¥–∞
      const isUpdate = !!form.id
      
      if (isUpdate) {
        const adId = form.id
        const filesPresent = hasFiles(form)
        
        console.log('üîç publishAd –û–ë–ù–û–í–õ–ï–ù–ò–ï –æ–±—ä—è–≤–ª–µ–Ω–∏—è:', { 
          adId,
          hasFiles: filesPresent
        })
        
        if (filesPresent) {
          // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º FormData —Å POST –∏ _method=PUT
          formData.append('_method', 'PUT')
          
          router.post(`/ads/${adId}`, formData as any, {
            preserveScroll: true,
            forceFormData: true,
            onSuccess: (response: any) => {
              console.log('‚úÖ publishAd: –û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ (—Å —Ñ–∞–π–ª–∞–º–∏)')
              resolve({
                success: true,
                data: response.props?.ad || response,
                message: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ'
              })
            },
            onError: (errors: any) => {
              console.error('‚ùå publishAd: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è', errors)
              resolve({
                success: false,
                errors: errors,
                message: '–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏'
              })
            }
          })
        } else {
          // –ï—Å–ª–∏ —Ñ–∞–π–ª–æ–≤ –Ω–µ—Ç - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π PUT —Å –æ–±—ä–µ–∫—Ç–æ–º
          const plainData = convertFormDataToPlainObject(formData)
          
          router.put(`/ads/${adId}`, plainData, {
            preserveScroll: true,
            onSuccess: (response: any) => {
              console.log('‚úÖ publishAd: –û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ (–±–µ–∑ —Ñ–∞–π–ª–æ–≤)')
              resolve({
                success: true,
                data: response.props?.ad || response,
                message: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ'
              })
            },
            onError: (errors: any) => {
              console.error('‚ùå publishAd: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è', errors)
              resolve({
                success: false,
                errors: errors,
                message: '–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏'
              })
            }
          })
        }
      } else {
        // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è - –≤—Å–µ–≥–¥–∞ POST —Å FormData
        console.log('üîç publishAd –°–û–ó–î–ê–ù–ò–ï –Ω–æ–≤–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è')
        
        router.post('/ads', formData as any, {
          preserveScroll: true,
          forceFormData: true,
          onSuccess: (response: any) => {
            console.log('‚úÖ publishAd: –ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ')
            resolve({
              success: true,
              data: response.props?.ad || response,
              message: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ'
            })
          },
          onError: (errors: any) => {
            console.error('‚ùå publishAd: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è', errors)
            resolve({
              success: false,
              errors: errors,
              message: '–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏'
            })
          }
        })
      }
    })
  }
  
  // ‚úÖ –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• –û–ë–™–Ø–í–õ–ï–ù–ò–Ø
  const loadAd = async (id: number): Promise<SubmissionResult> => {
    try {
      const response = await axios.get(`/ads/${id}/edit`, {
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'Accept': 'application/json'
        }
      })
      
      if (response.data) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ –æ—Ç Inertia
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ –æ—Ç Inertia
        let adData = null
        
        if (response.data.props?.ad?.data) {
          // Inertia structure with AdResource: { props: { ad: { data: {...} } } }
          adData = response.data.props.ad.data
          // Found Inertia props structure with Resource
        } else if (response.data.props?.ad) {
          // Inertia structure: { props: { ad: {...} } }
          adData = response.data.props.ad
          // Found Inertia props structure
        } else if (response.data.ad?.data) {
          // Direct structure with AdResource: { ad: { data: {...} } }
          adData = response.data.ad.data
          // Found direct Resource structure
        } else if (response.data.ad) {
          // Direct structure: { ad: {...} }
          adData = response.data.ad
          // Found direct structure
        } else {
          // Fallback to full response.data
          adData = response.data
          // Using fallback structure
        }
        
        // –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        
        return {
          success: true,
          data: adData
        }
      }
      
      throw new Error('–û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
      
    } catch (error: any) {
      // –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
      
      return {
        success: false,
        message: error.response?.data?.message || error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏'
      }
    }
  }
  
  // ‚úÖ –ê–í–¢–û–°–û–•–†–ê–ù–ï–ù–ò–ï (DEBOUNCED)
  let autosaveTimer: ReturnType<typeof setTimeout> | null = null
  
  const autosaveDraft = (form: AdForm, delay = 3000): void => {
    // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
    if (autosaveTimer) {
      clearTimeout(autosaveTimer)
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä
    autosaveTimer = setTimeout(async () => {
      if (form.title && form.title.trim()) {
        const result = await saveDraft(form)
        // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
      }
    }, delay)
  }
  
  // ‚úÖ –û–¢–ú–ï–ù–ê –ó–ê–ü–†–û–°–ê
  const cancelRequest = (): void => {
    if (abortController.value) {
      abortController.value.abort()
      abortController.value = null
    }
  }
  
  // ‚úÖ –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û–°–õ–ï –°–û–•–†–ê–ù–ï–ù–ò–Ø
  const navigateAfterSave = (adId: number, isDraft = false): void => {
    if (isDraft) {
      // –ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞ –≤–∫–ª–∞–¥–∫—É —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
      router.visit('/profile/items/draft/all')
    } else {
      router.visit(`/ads/${adId}`)
    }
  }
  
  // ‚úÖ –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
  const handleSubmissionError = (error: any): Record<string, string[]> => {
    if (error.response?.status === 422 && error.response.data?.errors) {
      return error.response.data.errors
    }
    
    if (error.response?.status === 401) {
      router.visit('/login')
      return { auth: ['–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'] }
    }
    
    if (error.response?.status === 403) {
      return { permission: ['–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è'] }
    }
    
    return { general: ['–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'] }
  }
  
  return {
    saveDraft,
    publishAd,
    loadAd,
    autosaveDraft,
    cancelRequest,
    navigateAfterSave,
    handleSubmissionError
  }
}

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç FormData –≤ –æ–±—ã—á–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã PUT + FormData
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ —Ä–µ—à–µ–Ω–∏–∏ –∏–∑ DRAFT_FIELDS_SAVING_FIX_REPORT.md
 */
function convertFormDataToPlainObject(formData: FormData): Record<string, any> {
  const plainData: Record<string, any> = {}
  
  formData.forEach((value, key) => {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Å—Å–∏–≤–æ–≤ (photos[0], photos[1])
    if (key.includes('[')) {
      const match = key.match(/^(.+?)\[(\d+)\]$/)
      if (match) {
        const fieldName = match[1]
        const index = parseInt(match[2], 10)
        if (!plainData[fieldName]) {
          plainData[fieldName] = []
        }
        plainData[fieldName][index] = value
      }
    } else {
      // –ü–∞—Ä—Å–∏–Ω–≥ JSON —Å—Ç—Ä–æ–∫
      if (typeof value === 'string' && (value.startsWith('{') || value.startsWith('['))) {
        try {
          plainData[key] = JSON.parse(value)
        } catch (e) {
          plainData[key] = value
        }
      } else {
        plainData[key] = value
      }
    }
  })
  
  return plainData
}