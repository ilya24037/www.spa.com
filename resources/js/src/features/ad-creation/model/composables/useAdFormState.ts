import { ref, reactive, computed } from 'vue'
import type { Ref } from 'vue'
import type { AdForm } from '../types'

// ‚úÖ –£–ü–†–û–©–ï–ù–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π JSON –ø–æ–ª–µ–π
const getValue = (saved: any, initial: any, field: string, defaultValue: any): any => {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  if (saved?.[field] !== undefined) {
    return saved[field]
  }
  
  // –ü–æ—Ç–æ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  if (initial?.[field] !== undefined) {
    // ‚úÖ –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê JSON –ü–û–õ–ï–ô (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
    if (field === 'prices' && typeof initial[field] === 'string') {
      try {
        return JSON.parse(initial[field])
      } catch (e) {
        // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        return defaultValue
      }
    }
    return initial[field]
  }
  
  return defaultValue
}

/**
 * Composable –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ñ–æ—Ä–º—ã –æ–±—ä—è–≤–ª–µ–Ω–∏—è
 * –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –í–ï–†–°–ò–Ø: —Å–æ–∫—Ä–∞—â–µ–Ω —Å 264 –¥–æ ~120 —Å—Ç—Ä–æ–∫
 */
export function useAdFormState(props: any) {
  // ‚úÖ –£–ü–†–û–©–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –†–ê–ë–û–¢–´ –° localStorage
  const getStorageData = (): any => {
    const isNewAd = !props.adId && !props.initialData?.id
    if (isNewAd) {
      localStorage.removeItem('adFormData')
      return null
    }
    
    try {
      const saved = localStorage.getItem('adFormData')
      return saved ? JSON.parse(saved) : null
    } catch (e) {
      localStorage.removeItem('adFormData')
      return null
    }
  }
  
  const savedFormData = getStorageData()
  const initialData = props.initialData || {}
  
  // ‚úÖ –ö–û–ú–ü–ê–ö–¢–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –§–û–†–ú–´ (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è getValue)
  const g = (field: string, def: any) => getValue(savedFormData, initialData, field, def)
  
  const form = reactive<AdForm>({
    // –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–ª—è
    id: g('id', null),
    user_id: g('user_id', null),
    status: g('status', 'draft'),
    category: g('category', 'relax'),
    title: g('title', ''),
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
    specialty: g('specialty', ''), work_format: g('work_format', 'individual'),
    experience: g('experience', ''), description: g('description', ''),
    
    // –ú–∞—Å—Å–∏–≤—ã (–∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥ JSON)
    clients: g('clients', []), service_location: g('service_location', []),
    service_provider: g('service_provider', ['women']), features: g('features', []),
    photos: g('photos', []), video: g('video', []), custom_travel_areas: g('custom_travel_areas', []),
    
    // –û–±—ä–µ–∫—Ç—ã (–ø—Ä—è–º–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ –∏–∑ props - –º–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ adFormModel.ts)
    services: g('services', {}), 
    schedule: g('schedule', {}), 
    prices: g('prices', {
      // ‚úÖ –¢–û–õ–¨–ö–û –¶–ï–ù–´ (–ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ 2025_08_28)
      // –ú–µ—Å—Ç–∞ –≤—ã–µ–∑–¥–∞ —Ç–µ–ø–µ—Ä—å –≤ geo (—Å–º. GeoSection.vue —Å—Ç—Ä–æ–∫–∏ 227-232)
      apartments_express: null,
      apartments_1h: null,
      apartments_2h: null,
      apartments_night: null,
      outcall_express: null,
      outcall_1h: null,
      outcall_2h: null,
      outcall_night: null
    }),
    geo: g('geo', null), faq: g('faq', {}),
    parameters: g('parameters', {
      title: '',
      age: '',
      height: '',
      weight: '',
      breast_size: '',
      hair_color: '',
      eye_color: '',
      nationality: '',
      bikini_zone: '',
      appearance: ''
    }),
    contacts: g('contacts', {}),
    
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
    services_additional_info: g('services_additional_info', ''), additional_features: g('additional_features', ''),
    schedule_notes: g('schedule_notes', ''), online_booking: g('online_booking', false),
    price: g('price', null), price_unit: g('price_unit', 'hour'), is_starting_price: g('is_starting_price', false),
    new_client_discount: g('new_client_discount', ''), gift: g('gift', ''),
    address: g('address', ''), travel_area: g('travel_area', ''), travel_radius: g('travel_radius', ''),
    travel_price: g('travel_price', null), travel_price_type: g('travel_price_type', ''),
    min_duration: g('min_duration', null), contacts_per_hour: g('contacts_per_hour', null),
    discount: g('discount', null), has_girlfriend: g('has_girlfriend', false),
    
    // –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
    verification_photo: g('verification_photo', null), verification_video: g('verification_video', null),
    verification_status: g('verification_status', ''), verification_comment: g('verification_comment', null),
    verification_expires_at: g('verification_expires_at', null)
  })

  // ‚úÖ –°–û–°–¢–û–Ø–ù–ò–Ø –ó–ê–ì–†–£–ó–ö–ò
  const isLoading = ref(false)
  const isSaving = ref(false)
  const isPublishing = ref(false)
  
  // ‚úÖ –û–®–ò–ë–ö–ò
  const errors = ref<Record<string, string[]>>({})
  const generalError = ref<string | null>(null)
  
  // ‚úÖ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–õ–ê–ì–ò
  const isDirty = ref(false)
  const isEditMode = computed(() => !!form.id)
  const isDraftMode = computed(() => form.status === 'draft')
  
  // ‚úÖ –£–ü–†–û–©–ï–ù–ù–´–ï –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –°–û–°–¢–û–Ø–ù–ò–ï–ú
  const resetForm = () => {
    const defaultForm = {
      id: null, user_id: null, title: '', category: 'relax', description: '',
      status: 'draft', photos: [], video: [], prices: {}, services: [],
      clients: [], schedule: {}, phone: '', address: '', geo: null
    }
    Object.assign(form, defaultForm)
    errors.value = {}
    generalError.value = null
    isDirty.value = false
  }
  
  const setFormData = (data: Partial<AdForm>) => {
    console.log('üîç DEBUG setFormData START:', {
      'data.id': data.id,
      'form.id BEFORE': form.id,
      'typeof data.id': typeof data.id
    })
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if (data.id !== undefined && data.id !== null) {
      form.id = data.id
      console.log('üîç DEBUG ID updated:', {
        'form.id AFTER': form.id
      })
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
    Object.assign(form, data)
    isDirty.value = false
    
    console.log('üîç DEBUG setFormData END:', {
      'form.id FINAL': form.id
    })
  }
  
  const clearErrors = () => {
    errors.value = {}
    generalError.value = null
  }
  
  const setErrors = (newErrors: Record<string, string[]>) => {
    errors.value = newErrors
  }
  
  const setGeneralError = (error: string | null) => {
    generalError.value = error
  }
  
  const markAsDirty = () => {
    isDirty.value = true
  }
  
  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    form,
    isLoading,
    isSaving,
    isPublishing,
    errors,
    generalError,
    isDirty,
    isEditMode,
    isDraftMode,
    
    // –ú–µ—Ç–æ–¥—ã
    resetForm,
    setFormData,
    clearErrors,
    setErrors,
    setGeneralError,
    markAsDirty
  }
}