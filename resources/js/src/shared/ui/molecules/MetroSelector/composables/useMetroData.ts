/**
 * Composable для работы с данными станций метро
 * Поддерживает метро всех крупных российских городов
 */

import { ref, computed } from 'vue'

// Данные метро для российских городов (TypeScript константа для надежности)
const METRO_DATA = {
  "Москва": [
    "Сокольники", "Красносельская", "Комсомольская", "Красные Ворота", "Чистые пруды",
    "Лубянка", "Охотный Ряд", "Библиотека имени Ленина", "Кропоткинская", "Парк культуры",
    "Фрунзенская", "Спортивная", "Воробьёвы горы", "Университет", "Проспект Вернадского",
    "Юго-Западная", "Тропарёво", "Румянцево", "Саларьево", "Речной вокзал", "Водный стадион",
    "Войковская", "Сокол", "Аэропорт", "Динамо", "Белорусская", "Маяковская", "Тверская",
    "Театральная", "Новокузнецкая", "Павелецкая", "Автозаводская", "Технопарк", "Коломенская",
    "Каширская", "Кантемировская", "Царицыно", "Орехово", "Домодедовская", "Красногвардейская",
    "Алма-Атинская", "Крылатское", "Молодёжная", "Кунцевская", "Славянский бульвар",
    "Парк Победы", "Киевская", "Смоленская", "Арбатская", "Площадь Революции", "Курская",
    "Бауманская", "Электрозаводская", "Семёновская", "Партизанская", "Измайловская",
    "Первомайская", "Щёлковская", "ВДНХ", "Алексеевская", "Рижская", "Проспект Мира",
    "Сухаревская", "Тургеневская", "Китай-город", "Третьяковская"
  ],
  "Санкт-Петербург": [
    "Автово", "Кировский завод", "Нарвская", "Балтийская", "Технологический институт",
    "Пушкинская", "Владимирская", "Площадь Восстания", "Чернышевская", "Площадь Ленина",
    "Выборгская", "Лесная", "Удельная", "Озерки", "Проспект Просвещения", "Парнас",
    "Купчино", "Звёздная", "Московская", "Парк Победы", "Электросила", "Фрунзенская",
    "Технологический институт", "Сенная площадь", "Невский проспект", "Гостиный двор",
    "Маяковская", "Площадь Александра Невского", "Елизаровская", "Ломоносовская",
    "Пролетарская", "Обухово", "Рыбацкое", "Приморская", "Василеостровская", "Гостиный двор",
    "Спортивная", "Чкаловская", "Крестовский остров", "Старая Деревня", "Комендантский проспект",
    "Пионерская", "Удельная", "Озерки", "Проспект Просвещения", "Парнас", "Академическая",
    "Политехническая", "Площадь Мужества", "Лесная", "Выборгская", "Площадь Ленина"
  ],
  "Новосибирск": [
    "Студенческая", "Речной вокзал", "Октябрьская", "Ленинская", "Красный проспект",
    "Заельцовская", "Гагаринская", "Маршала Покрышкина", "Берёзовая роща", "Золотая Нива",
    "Пионерская", "Спортивная", "Площадь Маркса", "Площадь Ленина", "Покрышкина"
  ],
  "Екатеринбург": [
    "Проспект Космонавтов", "Уралмаш", "Машиностроителей", "Уральская", "Динамо",
    "Площадь 1905 года", "Геологическая", "Чкаловская", "Ботаническая", "Чкаловская"
  ],
  "Нижний Новгород": [
    "Автозаводская", "Комсомольская", "Кировская", "Парк культуры", "Стрелка",
    "Буревестник", "Бурнаковская", "Канавинская", "Московская", "Чкаловская",
    "Ленинская", "Заречная", "Двигатель Революции", "Пролетарская"
  ],
  "Казань": [
    "Авиастроительная", "Северный вокзал", "Дубравная", "Якшт-Авиастроительная", "Козья слобода",
    "Кремлёвская", "Площадь Тукая", "Суконная слобода", "Аметьево", "Горки",
    "Проспект Победы", "Дубравная", "Яшьлек", "Козья слобода"
  ],
  "Самара": [
    "Российская", "Московская", "Гагаринская", "Спортивная", "Советская", 
    "Победа", "Безымянка", "Кировская", "Юнгородок", "Алабинская"
  ]
} as const

// Типы данных метро
type MetroData = Record<string, string[]>

export const useMetroData = (cityName?: string) => {
  const metroData: MetroData = METRO_DATA
  const currentCity = ref(cityName || 'Москва')
  
  // Получение станций для конкретного города
  const getStationsForCity = (city: string): string[] => {
    return metroData[city] || []
  }
  
  // Проверка есть ли метро в городе
  const hasCityMetro = (city: string): boolean => {
    return Boolean(metroData[city] && metroData[city].length > 0)
  }
  
  // Города с метро
  const citiesWithMetro = computed(() => Object.keys(metroData))
  
  // Станции текущего города (отсортированные)
  const cityStations = computed(() => {
    const stations = getStationsForCity(currentCity.value)
    return [...stations].sort((a, b) => a.localeCompare(b, 'ru'))
  })

  // Обновление города
  const updateCity = (newCity: string) => {
    if (hasCityMetro(newCity)) {
      currentCity.value = newCity
    }
  }
  
  // Функция поиска станций в текущем городе
  const searchStations = (query: string): string[] => {
    if (!query.trim()) return cityStations.value
    
    const lowerQuery = query.toLowerCase()
    return cityStations.value.filter(station =>
      station.toLowerCase().includes(lowerQuery)
    )
  }
  
  // Получить количество станций в текущем городе
  const getStationsCount = (): number => {
    return cityStations.value.length
  }
  
  // BACKWARD COMPATIBILITY: для старого кода
  const moscowMetroStations = computed(() => getStationsForCity('Москва'))
  
  return {
    // Новый API
    currentCity,
    cityStations,
    citiesWithMetro,
    getStationsForCity,
    hasCityMetro,
    updateCity,
    searchStations,
    getStationsCount,
    
    // Обратная совместимость
    moscowMetroStations,
    stations: cityStations,
    allStations: cityStations
  }
}