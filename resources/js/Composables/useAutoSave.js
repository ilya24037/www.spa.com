import { ref, watch, onMounted, onUnmounted } from 'vue'

export function useAutoSave(formData, options = {}) {
  const {
    key = 'autosave_form',
    interval = 30000, // 30 —Å–µ–∫—É–Ω–¥
    exclude = [], // –ø–æ–ª—è –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    enabled = true
  } = options

  const lastSaved = ref(null)
  const saving = ref(false)
  const hasDraft = ref(false)
  const saveInterval = ref(null)

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ localStorage
   */
  const saveData = () => {
    if (!enabled) return

    saving.value = true
    
    try {
      // –§–∏–ª—å—Ç—Ä—É–µ–º –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã–µ –ø–æ–ª—è
      const dataToSave = Object.keys(formData).reduce((acc, key) => {
        if (!exclude.includes(key)) {
          acc[key] = formData[key]
        }
        return acc
      }, {})

      // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
      const saveData = {
        data: dataToSave,
        timestamp: Date.now(),
        version: '1.0'
      }

      localStorage.setItem(key, JSON.stringify(saveData))
      lastSaved.value = new Date()
      
      console.log('üíæ –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', lastSaved.value.toLocaleTimeString())
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error)
    } finally {
      saving.value = false
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
   */
  const loadData = () => {
    try {
      const savedData = localStorage.getItem(key)
      
      if (!savedData) {
        hasDraft.value = false
        return null
      }

      const parsed = JSON.parse(savedData)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
      if (!parsed.data || !parsed.timestamp) {
        console.warn('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
        clearData()
        return null
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –¥–∞–Ω–Ω—ã—Ö (–Ω–µ —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
      const maxAge = 7 * 24 * 60 * 60 * 1000 // 7 –¥–Ω–µ–π
      if (Date.now() - parsed.timestamp > maxAge) {
        console.log('–°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏, —É–¥–∞–ª—è–µ–º')
        clearData()
        return null
      }

      hasDraft.value = true
      lastSaved.value = new Date(parsed.timestamp)
      
      return parsed.data
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error)
      clearData()
      return null
    }
  }

  /**
   * –û—á–∏—â–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
   */
  const clearData = () => {
    localStorage.removeItem(key)
    hasDraft.value = false
    lastSaved.value = null
  }

  /**
   * –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º—É
   */
  const restoreData = () => {
    const savedData = loadData()
    
    if (savedData) {
      // –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º—É
      Object.keys(savedData).forEach(key => {
        if (formData.hasOwnProperty(key)) {
          formData[key] = savedData[key]
        }
      })
      
      return true
    }
    
    return false
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–µ
   */
  const hasChanges = () => {
    const savedData = loadData()
    
    if (!savedData) return true
    
    // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º–∏
    return JSON.stringify(formData) !== JSON.stringify(savedData)
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
   */
  const getSaveInfo = () => {
    const savedData = localStorage.getItem(key)
    
    if (!savedData) return null
    
    try {
      const parsed = JSON.parse(savedData)
      return {
        timestamp: parsed.timestamp,
        age: Date.now() - parsed.timestamp,
        size: new Blob([savedData]).size
      }
    } catch {
      return null
    }
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
   */
  const startAutoSave = () => {
    if (!enabled || saveInterval.value) return

    saveInterval.value = setInterval(saveData, interval)
    
    // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö (—Å –¥–µ–±–∞—É–Ω—Å–æ–º)
    let debounceTimer = null
    const debouncedSave = () => {
      clearTimeout(debounceTimer)
      debounceTimer = setTimeout(saveData, 2000) // 2 —Å–µ–∫—É–Ω–¥—ã –∑–∞–¥–µ—Ä–∂–∫–∏
    }

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–µ
    const stopWatcher = watch(
      () => JSON.stringify(formData),
      debouncedSave,
      { deep: true }
    )

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ watcher'–∞
    saveInterval.value.stopWatcher = stopWatcher
  }

  /**
   * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
   */
  const stopAutoSave = () => {
    if (saveInterval.value) {
      clearInterval(saveInterval.value)
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º watcher –µ—Å–ª–∏ –µ—Å—Ç—å
      if (saveInterval.value.stopWatcher) {
        saveInterval.value.stopWatcher()
      }
      
      saveInterval.value = null
    }
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   */
  const handleBeforeUnload = (event) => {
    if (hasChanges()) {
      saveData()
      
      // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–µ—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const message = '–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É?'
      event.returnValue = message
      return message
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  onMounted(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    loadData()
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    if (enabled) {
      startAutoSave()
      window.addEventListener('beforeunload', handleBeforeUnload)
    }
  })

  // –û—á–∏—Å—Ç–∫–∞
  onUnmounted(() => {
    stopAutoSave()
    window.removeEventListener('beforeunload', handleBeforeUnload)
  })

  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    lastSaved,
    saving,
    hasDraft,
    
    // –ú–µ—Ç–æ–¥—ã
    saveData,
    loadData,
    clearData,
    restoreData,
    hasChanges,
    getSaveInfo,
    startAutoSave,
    stopAutoSave
  }
}