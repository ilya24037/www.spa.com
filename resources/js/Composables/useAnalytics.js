import { ref } from 'vue'

const analyticsEnabled = ref(true)
const debug = ref(import.meta.env.DEV)

export function useAnalytics() {
  /**
   * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ
   * @param {string} eventName - –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
   * @param {Object} properties - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
   */
  function track(eventName, properties = {}) {
    if (!analyticsEnabled.value) return

    const eventData = {
      event: eventName,
      timestamp: Date.now(),
      url: window.location.href,
      user_agent: navigator.userAgent,
      ...properties
    }

    // –í debug —Ä–µ–∂–∏–º–µ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
    if (debug.value) {
      console.log('üìä Analytics Event:', eventName, eventData)
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Google Analytics (–µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω)
    if (window.gtag) {
      window.gtag('event', eventName, {
        custom_parameter: JSON.stringify(properties),
        event_category: 'user_interaction',
        event_label: eventName
      })
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É (–µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞)
    if (window.ym) {
      window.ym(window.yaCounterId, 'reachGoal', eventName, properties)
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä
    sendToServer(eventData)
  }

  /**
   * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
   * @param {string} eventName - –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
   * @param {Object} properties - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
   */
  function trackConversion(eventName, properties = {}) {
    track(eventName, {
      ...properties,
      conversion: true,
      value: properties.value || 0
    })
  }

  /**
   * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –æ—à–∏–±–∫—É
   * @param {string|Error} error - –æ—à–∏–±–∫–∞
   * @param {Object} context - –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
   */
  function trackError(error, context = {}) {
    const errorData = {
      error_message: error.message || error,
      error_stack: error.stack,
      ...context
    }

    track('error_occurred', errorData)
  }

  /**
   * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
   * @param {string} pageName - –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   * @param {number} timeSpent - –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
   */
  function trackPageTime(pageName, timeSpent) {
    track('page_time', {
      page_name: pageName,
      time_spent_seconds: timeSpent
    })
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
   * @param {Object} data - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
   */
  async function sendToServer(data) {
    try {
      await fetch('/api/analytics', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify(data)
      })
    } catch (error) {
      if (debug.value) {
        console.warn('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error)
      }
    }
  }

  /**
   * –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É
   * @param {boolean} enabled - —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   */
  function setEnabled(enabled) {
    analyticsEnabled.value = enabled
  }

  return {
    track,
    trackConversion,
    trackError,
    trackPageTime,
    setEnabled,
    analyticsEnabled: analyticsEnabled.value
  }
}