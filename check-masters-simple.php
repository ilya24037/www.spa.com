<?php

// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ PDO
try {
    $pdo = new PDO("mysql:host=127.0.0.1;dbname=laravel_auth", "root", "Animatori2025!");
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    echo "üîç –ü–†–û–í–ï–†–ö–ê –ú–ê–°–¢–ï–†–û–í –í –ë–î\n\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É master_profiles
    $stmt = $pdo->query("SHOW TABLES LIKE 'master_profiles'");
    if ($stmt->rowCount() === 0) {
        echo "‚ùå –¢–∞–±–ª–∏—Ü–∞ master_profiles –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n";
        echo "–í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é —Ç–∞–±–ª–∏—Ü—É\n\n";
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        $tables = $pdo->query("SHOW TABLES")->fetchAll(PDO::FETCH_COLUMN);
        echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:\n";
        foreach($tables as $table) {
            echo "  - $table\n";
        }
        exit;
    }
    
    // –°—á–∏—Ç–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
    $count = $pdo->query("SELECT COUNT(*) FROM master_profiles")->fetchColumn();
    echo "üìä –í—Å–µ–≥–æ –º–∞—Å—Ç–µ—Ä–æ–≤: $count\n\n";
    
    if ($count > 0) {
        // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã—Ö 3 –º–∞—Å—Ç–µ—Ä–æ–≤
        $stmt = $pdo->query("SELECT id, name, slug, status, city, rating FROM master_profiles LIMIT 3");
        $masters = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        echo "üìù –ü–µ—Ä–≤—ã–µ –º–∞—Å—Ç–µ—Ä–∞:\n";
        foreach($masters as $master) {
            echo "  ID: {$master['id']}, Name: {$master['name']}, Slug: {$master['slug']}\n";
            echo "  Status: {$master['status']}, City: {$master['city']}, Rating: {$master['rating']}\n";
            echo "  URL: http://spa.test/masters/{$master['slug']}-{$master['id']}\n\n";
        }
    } else {
        echo "‚ùå –ú–∞—Å—Ç–µ—Ä–æ–≤ –≤ –ë–î –Ω–µ—Ç - –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ\n";
    }
    
} catch (PDOException $e) {
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: " . $e->getMessage() . "\n";
    echo "–í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ .env\n";
}