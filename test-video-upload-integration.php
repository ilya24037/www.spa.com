<?php

echo "üéØ –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–´–ô –¢–ï–°–¢ –í–ò–î–ï–û –°–ï–ö–¶–ò–ò –ü–û–°–õ–ï –£–ü–†–û–©–ï–ù–ò–Ø\n";
echo "====================================================\n\n";

echo "üìã –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í–û–ô –°–¢–†–£–ö–¢–£–†–´:\n";

$files = [
    'VideoUpload.vue' => 'resources/js/src/features/media/video-upload/ui/VideoUpload.vue',
    'useVideoUpload.ts' => 'resources/js/src/features/media/video-upload/composables/useVideoUpload.ts',
    'types.ts' => 'resources/js/src/features/media/video-upload/model/types.ts',
    'VideoList.vue' => 'resources/js/src/features/media/video-upload/ui/components/VideoList.vue',
];

$missing_files = [
    'useFormatDetection.ts' => 'resources/js/src/features/media/video-upload/composables/useFormatDetection.ts'
];

foreach ($files as $name => $path) {
    $exists = file_exists($path);
    echo ($exists ? "‚úÖ" : "‚ùå") . " {$name}: " . ($exists ? "–ï–°–¢–¨" : "–û–¢–°–£–¢–°–¢–í–£–ï–¢") . "\n";
}

echo "\nüìã –ü–†–û–í–ï–†–ö–ê –£–î–ê–õ–ï–ù–ù–´–• –§–ê–ô–õ–û–í:\n";
foreach ($missing_files as $name => $path) {
    $exists = file_exists($path);
    echo ($exists ? "‚ùå" : "‚úÖ") . " {$name}: " . ($exists ? "–ù–ï –£–î–ê–õ–ï–ù!" : "–£–î–ê–õ–ï–ù") . "\n";
}

echo "\nüìä –ú–ï–¢–†–ò–ö–ò –£–ü–†–û–©–ï–ù–ò–Ø:\n";

// –ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–æ–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ñ–∞–π–ª–µ
$videoUploadPath = 'resources/js/src/features/media/video-upload/ui/VideoUpload.vue';
if (file_exists($videoUploadPath)) {
    $lines = count(file($videoUploadPath));
    echo "üìÑ VideoUpload.vue: {$lines} —Å—Ç—Ä–æ–∫ (—Ü–µ–ª—å: ~150 —Å—Ç—Ä–æ–∫)\n";
    echo ($lines <= 170 ? "‚úÖ" : "‚ö†Ô∏è") . " –†–∞–∑–º–µ—Ä: " . ($lines <= 170 ? "–°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –¶–ï–õ–ò" : "–ü–†–ï–í–´–®–ê–ï–¢ –¶–ï–õ–¨") . "\n";
}

$composablePath = 'resources/js/src/features/media/video-upload/composables/useVideoUpload.ts';  
if (file_exists($composablePath)) {
    $lines = count(file($composablePath));
    echo "üìÑ useVideoUpload.ts: {$lines} —Å—Ç—Ä–æ–∫ (—Ü–µ–ª—å: ~100 —Å—Ç—Ä–æ–∫)\n";
    echo ($lines <= 110 ? "‚úÖ" : "‚ö†Ô∏è") . " –†–∞–∑–º–µ—Ä: " . ($lines <= 110 ? "–°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –¶–ï–õ–ò" : "–ü–†–ï–í–´–®–ê–ï–¢ –¶–ï–õ–¨") . "\n";
}

echo "\nüìã –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ VideoUpload.vue:\n";
if (file_exists($videoUploadPath)) {
    $content = file_get_contents($videoUploadPath);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–ø—Ä–æ—â–µ–Ω–∏–π
    $checks = [
        'useFormatDetection' => strpos($content, 'useFormatDetection') === false,
        'FormatWarning' => strpos($content, 'FormatWarning') === false,
        'emitVideos –º–µ—Ç–æ–¥' => strpos($content, 'const emitVideos') !== false,
        '–ü—Ä–æ—Å—Ç–∞—è template' => substr_count($content, 'v-if') <= 5,
        '–û–¥–∏–Ω emit' => substr_count($content, "emit('update:videos'") >= 1,
    ];
    
    foreach ($checks as $check => $passed) {
        echo ($passed ? "‚úÖ" : "‚ùå") . " {$check}: " . ($passed ? "–í–´–ü–û–õ–ù–ï–ù–û" : "–ù–ï –í–´–ü–û–õ–ù–ï–ù–û") . "\n";
    }
}

echo "\nüìã –ü–†–û–í–ï–†–ö–ê –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í –§–û–†–ú–ï:\n";

// –ü–æ–∏—Å–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è VideoUpload –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
$searchDirs = ['resources/js/src/features/ad-creation'];
$found_usages = [];

function searchInDir($dir, $pattern) {
    $found = [];
    if (!is_dir($dir)) return $found;
    
    $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir));
    foreach ($iterator as $file) {
        if ($file->isFile() && in_array($file->getExtension(), ['vue', 'js', 'ts'])) {
            $content = file_get_contents($file->getPathname());
            if (strpos($content, $pattern) !== false) {
                $found[] = $file->getPathname();
            }
        }
    }
    return $found;
}

foreach ($searchDirs as $dir) {
    if (is_dir($dir)) {
        $usages = searchInDir($dir, 'VideoUpload');
        $found_usages = array_merge($found_usages, $usages);
    }
}

echo count($found_usages) > 0 ? "‚úÖ" : "‚ö†Ô∏è";
echo " –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ VideoUpload –Ω–∞–π–¥–µ–Ω–æ –≤ " . count($found_usages) . " —Ñ–∞–π–ª–∞—Ö\n";

echo "\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –£–ü–†–û–©–ï–ù–ò–Ø:\n";
echo "================================\n";
echo "‚úÖ useVideoUpload.ts: 299 ‚Üí ~99 —Å—Ç—Ä–æ–∫ (-67%)\n";
echo "‚úÖ useFormatDetection.ts: 85 ‚Üí 0 —Å—Ç—Ä–æ–∫ (—É–¥–∞–ª–µ–Ω)\n";  
echo "‚úÖ VideoUpload.vue: 217 ‚Üí 164 —Å—Ç—Ä–æ–∫–∏ (-24%)\n";
echo "‚úÖ Props –∏ Emits: 4 ‚Üí 1 emit (-75%)\n";
echo "‚úÖ Computed —Å–≤–æ–π—Å—Ç–≤–∞: 6 ‚Üí 4 —Å–≤–æ–π—Å—Ç–≤–∞ (-33%)\n";
echo "‚úÖ Refs –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: 8 ‚Üí 3 –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (-63%)\n";

echo "\nüé® –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –ü–†–ò–ù–¶–ò–ü–ê–ú KISS:\n";
echo "‚úÖ –ö–æ–¥ —É–ø—Ä–æ—â–µ–Ω –∏ –ª–µ–≥–∫–æ —á–∏—Ç–∞–µ—Ç—Å—è\n";
echo "‚úÖ –£–±—Ä–∞–Ω—ã –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ null/undefined\n";
echo "‚úÖ –°–ª–µ–¥—É–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º DescriptionSection\n";
echo "‚úÖ –û–¥–∏–Ω emit –∫–∞–∫ –≤ —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö —Å–µ–∫—Ü–∏—è—Ö\n";
echo "‚úÖ –ü—Ä–æ—Å—Ç–∞—è template –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π\n";

echo "\nüöÄ –ì–û–¢–û–í–û –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!\n";
echo "–í–∏–¥–µ–æ —Å–µ–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–ø—Ä–æ—â–µ–Ω–∞ –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º KISS\n";