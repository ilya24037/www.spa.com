<?php

require __DIR__ . '/vendor/autoload.php';
$app = require_once __DIR__ . '/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Http\Kernel::class);
$kernel->bootstrap();

use App\Domain\Ad\Models\Ad;
use App\Domain\Ad\Services\DraftService;
use Illuminate\Http\Request;
use App\Application\Http\Controllers\Ad\DraftController;

echo "üîç –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è\n";
echo "==================================================\n\n";

// –ù–∞–π–¥–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
$draft = Ad::where('status', 'draft')->first();

if (!$draft) {
    echo "‚ùå –ß–µ—Ä–Ω–æ–≤–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n";
    exit;
}

$draftService = app(DraftService::class);
$user = $draft->user;

echo "üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫ ID: {$draft->id}\n";
echo "–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: " . ($draft->description ? "'{$draft->description}'" : "NULL") . "\n\n";

// ========== –¢–ï–°–¢ 1: DraftService ==========
echo "üîÑ –¢–ï–°–¢ 1: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —á–µ—Ä–µ–∑ DraftService\n";
echo "-----------------------------------------------------------\n";

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º
$data = [
    'title' => $draft->title,
    'description' => '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏',
    'category' => $draft->category,
];

$result = $draftService->saveOrUpdate($data, $user, $draft->id);
$result->refresh();

echo "–ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º:\n";
echo "  description: '{$result->description}'\n\n";

// –¢–µ–ø–µ—Ä—å –æ—á–∏—â–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
$data['description'] = '';
$result = $draftService->saveOrUpdate($data, $user, $draft->id);
$result->refresh();

echo "–ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞):\n";
echo "  description: " . ($result->description !== null ? "'{$result->description}'" : "NULL") . "\n";
echo "  –î–ª–∏–Ω–∞: " . strlen($result->description ?? '') . " —Å–∏–º–≤–æ–ª–æ–≤\n";
echo "  ‚úÖ –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ " . (strlen($result->description ?? '') === 0 ? "–°–û–•–†–ê–ù–ï–ù–ê" : "–ù–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞") . "\n\n";

// ========== –¢–ï–°–¢ 2: –°–∏–º—É–ª—è—Ü–∏—è FormData ==========
echo "üîÑ –¢–ï–°–¢ 2: –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ FormData –∏–∑ Vue\n";
echo "----------------------------------------------\n";

// –°–∏–º—É–ª–∏—Ä—É–µ–º Request
$requestData = [
    'title' => $draft->title,
    'description' => '', // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∏–∑ Vue
    'category' => $draft->category,
];

// –ü—Ä–æ–≤–µ—Ä—è–µ–º prepareForDisplay
$displayData = $draftService->prepareForDisplay($result);
echo "–ü–æ—Å–ª–µ prepareForDisplay:\n";
echo "  description: " . (isset($displayData['description']) ? "'{$displayData['description']}'" : "–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û") . "\n";
echo "  –¢–∏–ø: " . (isset($displayData['description']) ? gettype($displayData['description']) : "N/A") . "\n\n";

// ========== –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –ë–î ==========
echo "üîÑ –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n";
echo "-------------------------------------------\n";

$rawData = \DB::table('ads')->where('id', $draft->id)->select('description')->first();
echo "–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n";
echo "  description: " . ($rawData->description !== null ? "'{$rawData->description}'" : "NULL") . "\n";
echo "  –¢–∏–ø: " . gettype($rawData->description) . "\n";
echo "  –î–ª–∏–Ω–∞: " . strlen($rawData->description ?? '') . " —Å–∏–º–≤–æ–ª–æ–≤\n\n";

// ========== –ò–¢–û–ì–ò ==========
echo "üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:\n";
echo "======================\n";

$issues = [];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –ë–î
if ($rawData->description === null || strlen($rawData->description) > 0) {
    $issues[] = "‚ùå –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –ù–ï —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ë–î (–∑–Ω–∞—á–µ–Ω–∏–µ: " . 
                ($rawData->description === null ? "NULL" : "'{$rawData->description}'") . ")";
} else {
    echo "‚úÖ –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ë–î\n";
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∏–∑ prepareForDisplay
if (!isset($displayData['description']) || $displayData['description'] === null) {
    $issues[] = "‚ùå prepareForDisplay –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É";
} else {
    echo "‚úÖ prepareForDisplay –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É\n";
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
if (isset($displayData['description']) && !is_string($displayData['description'])) {
    $issues[] = "‚ùå description –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø: " . gettype($displayData['description']);
} else {
    echo "‚úÖ description –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø (string)\n";
}

if (empty($issues)) {
    echo "\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!\n";
    echo "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—É—Å—Ç–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ò–°–ü–†–ê–í–õ–ï–ù–ê!\n";
} else {
    echo "\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:\n";
    foreach ($issues as $issue) {
        echo "  " . $issue . "\n";
    }
}

echo "\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:\n";
echo "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:\n";
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ —á–µ—Ä–Ω–æ–≤–∏–∫ ID {$draft->id}\n";
echo "2. –û—á–∏—Å—Ç–∏—Ç–µ –ø–æ–ª–µ '–û–ø–∏—Å–∞–Ω–∏–µ'\n";
echo "3. –ù–∞–∂–º–∏—Ç–µ '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫'\n";
echo "4. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å –ø—É—Å—Ç—ã–º\n";