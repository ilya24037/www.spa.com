<?php
/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞—Ä—Ç–∞–º–∏ –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
 */

echo "üó∫Ô∏è –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –ö–ê–†–¢–ê–ú–ò –ü–û–°–õ–ï –†–ï–§–ê–ö–¢–û–†–ò–ù–ì–ê\n";
echo "=" . str_repeat("=", 60) . "\n\n";

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –¥–æ –∏ –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
echo "üìÇ –°–†–ê–í–ù–ï–ù–ò–ï –§–ê–ô–õ–û–í –î–û –ò –ü–û–°–õ–ï –†–ï–§–ê–ö–¢–û–†–ò–ù–ì–ê:\n";

$oldFiles = [
    'resources/js/src/shared/ui/molecules/YandexMapPicker/YandexMap.vue.old' => '–°—Ç–∞—Ä–∞—è —Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è',
    'resources/js/src/shared/ui/molecules/YandexMapPicker/YandexMap.vue' => '–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞'
];

foreach ($oldFiles as $file => $description) {
    $exists = file_exists($file);
    $size = $exists ? filesize($file) : 0;
    echo "  " . ($exists ? "‚úÖ" : "‚ùå") . " {$description}\n";
    echo "     –§–∞–π–ª: {$file}\n";
    echo "     –†–∞–∑–º–µ—Ä: " . number_format($size) . " –±–∞–π—Ç\n\n";
}

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
echo "üÜï –ù–û–í–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ü–û–°–õ–ï –†–ï–§–ê–ö–¢–û–†–ò–ù–ì–ê:\n";

$newComponents = [
    'resources/js/src/features/map/ui/YandexMapBase/YandexMapBase.vue',
    'resources/js/src/features/map/lib/yandexMapsLoader.ts',
    'resources/js/src/features/map/composables/useMapInitializer.ts',
    'resources/js/src/features/map/composables/useMapMobileOptimization.ts',
    'resources/js/src/features/map/composables/useMapMethods.ts',
    'resources/js/src/features/map/lib/mapConstants.ts',
];

foreach ($newComponents as $file) {
    $exists = file_exists($file);
    $size = $exists ? filesize($file) : 0;
    $lines = $exists ? count(file($file)) : 0;
    echo "  " . ($exists ? "‚úÖ" : "‚ùå") . " {$file}\n";
    if ($exists) {
        echo "     –†–∞–∑–º–µ—Ä: " . number_format($size) . " –±–∞–π—Ç, –°—Ç—Ä–æ–∫: {$lines}\n";
    }
    echo "\n";
}

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Ä—Ç–∞
echo "üîç –ì–î–ï –ò–°–ü–û–õ–¨–ó–£–ï–¢–°–Ø –ö–ê–†–¢–ê:\n";

$mapUsageFiles = [
    'resources/js/src/features/AdSections/GeoSection/ui/GeoSection.vue',
    'resources/js/src/pages/masters/MastersMap.vue'
];

foreach ($mapUsageFiles as $file) {
    if (file_exists($file)) {
        echo "‚úÖ {$file}\n";
        $content = file_get_contents($file);
        
        // –ò—â–µ–º –∏–º–ø–æ—Ä—Ç –∫–∞—Ä—Ç—ã
        if (preg_match('/import.*YandexMap.*from.*[\'"]([^\'"]+)[\'"]/', $content, $matches)) {
            echo "   üì¶ –ò–º–ø–æ—Ä—Ç: {$matches[1]}\n";
        }
        
        // –ò—â–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        if (preg_match('/<YandexMap[^>]*>/', $content, $matches)) {
            echo "   üè∑Ô∏è  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: " . trim($matches[0]) . "\n";
        }
    } else {
        echo "‚ùå {$file} - –ù–ï –ù–ê–ô–î–ï–ù\n";
    }
    echo "\n";
}

// 4. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É
echo "üîç –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:\n";

echo "üìã –ß–¢–û –ò–ó–ú–ï–ù–ò–õ–û–°–¨ –í –†–ï–§–ê–ö–¢–û–†–ò–ù–ì–ï:\n";
echo "  1. –ú–æ–Ω–æ–ª–∏—Ç–Ω—ã–π YandexMap.vue (411 —Å—Ç—Ä–æ–∫) ‚Üí –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\n";
echo "  2. –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ loadYandexMaps ‚Üí –°–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å Promise –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º\n";
echo "  3. –ü—Ä—è–º–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã ‚Üí –ö–æ–º–ø–æ–∑–∏—Ü–∏—è —á–µ—Ä–µ–∑ composables\n";
echo "  4. –û–¥–Ω–∞ —Ç–æ—á–∫–∞ –æ—Ç–∫–∞–∑–∞ ‚Üí –ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –æ—Ç–∫–∞–∑–∞\n\n";

echo "‚ö†Ô∏è –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ü–û–õ–û–ú–ö–ò:\n";
echo "  1. ‚ùå –ù–∞—Ä—É—à–µ–Ω–∏–µ Promise —Ü–µ–ø–æ—á–∫–∏ –≤ loadYandexMaps\n";
echo "  2. ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è composables\n";
echo "  3. ‚ùå –ü–æ—Ç–µ—Ä—è –ø—Ä–æ—Å—Ç–æ–π –ª–æ–≥–∏–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏\n";
echo "  4. ‚ùå –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏\n\n";

echo "üí° –†–ï–®–ï–ù–ò–ï (–ü—Ä–∏–Ω—Ü–∏–ø KISS):\n";
echo "  1. ‚úÖ –£–ø—Ä–æ—Å—Ç–∏—Ç—å loadYandexMaps –¥–æ —Ä–∞–±–æ—á–µ–π –≤–µ—Ä—Å–∏–∏\n";
echo "  2. ‚úÖ –£–ø—Ä–æ—Å—Ç–∏—Ç—å useMapInitializer\n";
echo "  3. ‚úÖ –£–±—Ä–∞—Ç—å –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ composables\n";
echo "  4. ‚úÖ –í–µ—Ä–Ω—É—Ç—å –ø—Ä—è–º—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–∞—Ä—Ç—ã\n\n";

// 5. –ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π
echo "üìã –ü–õ–ê–ù –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:\n";
echo "  –®–∞–≥ 1: ‚úÖ –£–ø—Ä–æ—Å—Ç–∏–ª–∏ loadYandexMaps (–í–´–ü–û–õ–ù–ï–ù–û)\n";
echo "  –®–∞–≥ 2: ‚úÖ –£–ø—Ä–æ—Å—Ç–∏–ª–∏ useMapInitializer (–í–´–ü–û–õ–ù–ï–ù–û)\n";
echo "  –®–∞–≥ 3: üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π HTML —Å—Ç—Ä–∞–Ω–∏—Ü–µ\n";
echo "  –®–∞–≥ 4: ‚è≥ –ï—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–≤–µ—Ä—è–µ–º Vue –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\n";
echo "  –®–∞–≥ 5: ‚è≥ –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É\n\n";

echo "üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:\n";
echo "  1. –û—Ç–∫—Ä–æ–π—Ç–µ: http://spa.test/test-map.html\n";
echo "  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –ø—Ä–æ—Å—Ç–∞—è –∫–∞—Ä—Ç–∞\n";
echo "  3. –ï—Å–ª–∏ –î–ê ‚Üí –ø—Ä–æ–±–ª–µ–º–∞ –≤ Vue –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö\n";
echo "  4. –ï—Å–ª–∏ –ù–ï–¢ ‚Üí –ø—Ä–æ–±–ª–µ–º–∞ –≤ API –∫–ª—é—á–µ –∏–ª–∏ —Å–µ—Ç–∏\n\n";

// 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$testPage = 'public/test-map.html';
if (file_exists($testPage)) {
    echo "‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞: {$testPage}\n";
    echo "üåê URL: http://spa.test/test-map.html\n\n";
} else {
    echo "‚ùå –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ù–ï –Ω–∞–π–¥–µ–Ω–∞: {$testPage}\n\n";
}

echo "üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:\n";
echo "  1. –û—Ç–∫—Ä–æ–π—Ç–µ http://spa.test/test-map.html\n";
echo "  2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞\n";
echo "  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞\n";
echo "  4. –°–æ–æ–±—â–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n\n";

echo "‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!\n";
?>