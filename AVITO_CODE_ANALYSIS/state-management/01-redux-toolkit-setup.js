/**
 * üì¶ REDUX TOOLKIT SETUP
 * –ü–∞—Ç—Ç–µ—Ä–Ω –∏–∑ Avito –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
 * –§–∞–π–ª –∏–∑–≤–ª–µ—á–µ–Ω –∏–∑: avito-favorite-collections-integration.js
 */

import { configureStore } from '@reduxjs/toolkit'

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è store –∫–∞–∫ –≤ Avito
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Redux Toolkit –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
 */
export function setupStore() {
  const store = configureStore({
    reducer: {
      // –ó–¥–µ—Å—å –ø–æ–¥–∫–ª—é—á–∞—é—Ç—Å—è —Å–ª–∞–π—Å—ã
      favorites: favoritesReducer,
      user: userReducer,
      filters: filtersReducer
    },
    
    // Middleware –∏–∑ –∫–æ–¥–∞ Avito
    middleware: (getDefaultMiddleware) =>
      getDefaultMiddleware({
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–∫–∞–∫ –≤ Avito)
        serializableCheck: {
          ignoredActions: ['favorites/addItem'],
          ignoredPaths: ['items.date']
        },
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
        immutableCheck: {
          warnAfter: 128
        }
      }),
    
    // DevTools —Ç–æ–ª—å–∫–æ –≤ development (–ø–∞—Ç—Ç–µ—Ä–Ω Avito)
    devTools: process.env.NODE_ENV !== 'production'
  })
  
  return store
}

/**
 * –¢–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è TypeScript (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 */
export type RootState = ReturnType<typeof store.getState>
export type AppDispatch = typeof store.dispatch