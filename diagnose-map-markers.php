<?php

use App\Domain\Ad\Models\Ad;

require __DIR__.'/vendor/autoload.php';
$app = require_once __DIR__.'/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Http\Kernel::class);
$kernel->handle(Illuminate\Http\Request::capture());

echo "=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ú–ï–¢–û–ö –ù–ê –ö–ê–†–¢–ï ===" . PHP_EOL . PHP_EOL;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ ID 128
$ad = Ad::find(128);

if ($ad) {
    echo "üìã –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:" . PHP_EOL;
    echo "   ID: " . $ad->id . PHP_EOL;
    echo "   –ó–∞–≥–æ–ª–æ–≤–æ–∫: " . $ad->title . PHP_EOL;
    echo "   –°—Ç–∞—Ç—É—Å: " . $ad->status->value . PHP_EOL;
    echo "   –ê–¥—Ä–µ—Å: " . $ad->address . PHP_EOL . PHP_EOL;
    
    echo "üó∫Ô∏è –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (raw):" . PHP_EOL;
    echo "   geo: " . json_encode($ad->geo) . PHP_EOL . PHP_EOL;
    
    echo "üß© –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (–∫–∞–∫ –≤ HomeController):" . PHP_EOL;
    $geo = is_string($ad->geo) ? json_decode($ad->geo, true) : $ad->geo;
    
    if (is_array($geo)) {
        $lat = null;
        $lng = null;
        
        if (isset($geo['lat']) && isset($geo['lng'])) {
            $lat = (float)$geo['lat'];
            $lng = (float)$geo['lng'];
        } elseif (isset($geo['coordinates']['lat']) && isset($geo['coordinates']['lng'])) {
            $lat = (float)$geo['coordinates']['lat'];
            $lng = (float)$geo['coordinates']['lng'];
        }
        
        echo "   lat: " . ($lat ?? '–ù–ï–¢') . PHP_EOL;
        echo "   lng: " . ($lng ?? '–ù–ï–¢') . PHP_EOL;
        
        if ($lat && $lng) {
            echo "‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã! lat=$lat, lng=$lng" . PHP_EOL;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –ü–µ—Ä–º–∏
            if ($lat >= 57.5 && $lat <= 58.5 && $lng >= 55.5 && $lng <= 56.5) {
                echo "‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –¥–ª—è –ü–µ—Ä–º–∏!" . PHP_EOL;
            } else {
                echo "‚ùå –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ü–µ—Ä–º–∏!" . PHP_EOL;
                echo "   –ü–µ—Ä–º—å: lat ~58.0, lng ~56.2" . PHP_EOL;
            }
        } else {
            echo "‚ùå –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ù–ï –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–æ–ª–µ geo!" . PHP_EOL;
        }
        
        echo PHP_EOL . "üîç –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ geo:" . PHP_EOL;
        print_r($geo);
        
    } else {
        echo "‚ùå geo –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º!" . PHP_EOL;
        echo "–¢–∏–ø: " . gettype($geo) . PHP_EOL;
        echo "–ó–Ω–∞—á–µ–Ω–∏–µ: " . var_export($geo, true) . PHP_EOL;
    }
} else {
    echo "‚ùå –û–±—ä—è–≤–ª–µ–Ω–∏–µ ID 128 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!" . PHP_EOL;
}

echo PHP_EOL . "=== –ü–†–û–í–ï–†–ö–ê –í–´–ë–û–†–ö–ò HOMECONTROLLER ===" . PHP_EOL . PHP_EOL;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±–æ—Ä–∫—É –∫–∞–∫ –≤ HomeController
$ads = Ad::where('status', 'active')
    ->whereNotNull('address')
    ->take(12)
    ->get();

echo "–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å –∞–¥—Ä–µ—Å–æ–º: " . $ads->count() . PHP_EOL;

foreach ($ads as $ad) {
    $geo = is_string($ad->geo) ? json_decode($ad->geo, true) : $ad->geo;
    $lat = null;
    $lng = null;
    
    if (is_array($geo)) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (–∫–∞–∫ –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º HomeController)
        if (isset($geo['lat']) && isset($geo['lng'])) {
            // –§–æ—Ä–º–∞—Ç: {"lat": 58.0, "lng": 56.0}
            $lat = (float)$geo['lat'];
            $lng = (float)$geo['lng'];
        } elseif (isset($geo['coordinates']['lat']) && isset($geo['coordinates']['lng'])) {
            // –§–æ—Ä–º–∞—Ç: {"coordinates": {"lat": 58.0, "lng": 56.0}}
            $lat = (float)$geo['coordinates']['lat'];
            $lng = (float)$geo['coordinates']['lng'];
        }
    }
    
    echo "ID {$ad->id}: {$ad->title}" . PHP_EOL;
    echo "  –ê–¥—Ä–µ—Å: {$ad->address}" . PHP_EOL;
    echo "  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: lat=" . ($lat ?? '–ù–ï–¢') . ", lng=" . ($lng ?? '–ù–ï–¢') . PHP_EOL . PHP_EOL;
}