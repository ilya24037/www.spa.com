<?php
require_once 'vendor/autoload.php';
$app = require_once 'bootstrap/app.php';
$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();

echo "=== –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –ú–ê–°–¢–ï–†–ê –ù–ê KRAKOZYABRY ===\n";

try {
    // –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Ç–µ—Ä–∞ —Å ID 3 (–∏–∑ URL –æ—à–∏–±–∫–∏)
    $master = \App\Domain\Master\Models\MasterProfile::find(3);
    
    if (!$master) {
        echo "‚ùå –ú–∞—Å—Ç–µ—Ä —Å ID 3 –Ω–µ –Ω–∞–π–¥–µ–Ω!\n";
        exit;
    }
    
    echo "‚úÖ –ú–∞—Å—Ç–µ—Ä –Ω–∞–π–¥–µ–Ω: {$master->display_name}\n";
    echo "---\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è –Ω–∞ krakozyabry
    $fields = [
        'display_name' => $master->display_name,
        'specialty' => $master->specialty,
        'description' => $master->description,
        'bio' => $master->bio,
        'education' => $master->education,
        'certificates' => $master->certificates,
        'features' => $master->features,
        'meta_title' => $master->meta_title,
        'meta_description' => $master->meta_description,
        'district' => $master->district,
        'metro_station' => $master->metro_station,
        'city' => $master->city,
        'salon_address' => $master->salon_address
    ];
    
    $hasKrakozyabry = false;
    
    foreach ($fields as $fieldName => $value) {
        if ($value === null) continue;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ krakozyabry (—Ç–∏–ø–∏—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã)
        $patterns = [
            '/–†—ü/', '/–†—ü–†—ï/', '/–†—ü–†—ï–†—î–†¬∞/', '/–†—ï–°‚Äö–†¬∑–°‚Äπ–†–Ü–†—ï–†–Ü/', '/–†—ö–†¬∞–°–É–°‚Äö–†¬µ–°–Ç/',
            '/–†–Ö–†¬∞ –†—ï–°–É–†–Ö–†—ï–†–Ü–†¬µ/', '/–†–Ö–†¬µ–°‚Äö –†—ï–°‚Äö–†¬∑–°‚Äπ–†–Ü–†—ï–†–Ü/', '/–†–é–°‚Äö–†¬∞–†–Ö–°–ä–°‚Äö–†¬µ/',
            '/–†—ó–†¬µ–°–Ç–†–Ü–°‚Äπ–†—ò/', '/–†—ï–°–É–°‚Äö–†¬∞–†–Ü–†—ë–°‚Äö/', '/–†—ï –°–Ç–†¬∞–†¬±–†—ï–°‚Äö–†¬µ/', '/–†—ò–†¬∞–°–É–°‚Äö–†¬µ–°–Ç–†¬∞/'
        ];
        
        $isKrakozyabry = false;
        foreach ($patterns as $pattern) {
            if (preg_match($pattern, $value)) {
                $isKrakozyabry = true;
                break;
            }
        }
        
        if ($isKrakozyabry) {
            echo "‚ùå KRAKOZYABRY –≤ –ø–æ–ª–µ {$fieldName}: {$value}\n";
            $hasKrakozyabry = true;
        } else {
            echo "‚úÖ –ü–æ–ª–µ {$fieldName}: {$value}\n";
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    echo "---\n";
    echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...\n";
    
    // –£—Å–ª—É–≥–∏
    if ($master->services) {
        foreach ($master->services as $service) {
            echo "–£—Å–ª—É–≥–∞: {$service->name}\n";
            if ($service->description) {
                echo "  –û–ø–∏—Å–∞–Ω–∏–µ: {$service->description}\n";
            }
        }
    }
    
    // –û—Ç–∑—ã–≤—ã
    if ($master->reviews) {
        foreach ($master->reviews as $review) {
            echo "–û—Ç–∑—ã–≤: {$review->comment}\n";
        }
    }
    
    if ($hasKrakozyabry) {
        echo "\nüö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ KRAKOZYABRY –í –î–ê–ù–ù–´–• –ú–ê–°–¢–ï–†–ê!\n";
        echo "–≠—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É JSON encoding!\n";
    } else {
        echo "\n‚úÖ Krakozyabry –≤ –¥–∞–Ω–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–∞ –ù–ï –ù–ê–ô–î–ï–ù–´\n";
    }
    
} catch (Exception $e) {
    echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}

echo "=== –ö–û–ù–ï–¶ –ü–†–û–í–ï–†–ö–ò ===\n";
