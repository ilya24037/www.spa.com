<?php

// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ ParametersSection
// –ó–∞–ø—É—Å–∫: C:/Users/user1/.config/herd/bin/php.bat test-parameters-refactoring.php

require_once __DIR__ . '/vendor/autoload.php';
$app = require_once __DIR__ . '/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

use App\Domain\Ad\Models\Ad;
use App\Domain\User\Models\User;

echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–§–ê–ö–¢–û–†–ò–ù–ì–ê ParametersSection\n";
echo "=====================================\n\n";

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–¥–µ–ª—å Ad –≤—Å–µ –µ—â–µ –∏–º–µ–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π –≤ –º–æ–¥–µ–ª–∏ Ad:\n";
$ad = new Ad();
$fillableFields = $ad->getFillable();
$parameterFields = ['title', 'age', 'height', 'weight', 'breast_size', 'hair_color', 'eye_color', 'nationality'];

foreach ($parameterFields as $field) {
    if (in_array($field, $fillableFields)) {
        echo "   ‚úÖ –ü–æ–ª–µ '$field' –Ω–∞–π–¥–µ–Ω–æ –≤ fillable\n";
    } else {
        echo "   ‚ùå –ü–æ–ª–µ '$field' –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ fillable\n";
    }
}

// 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
echo "\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:\n";
try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–µ—Ä–≤–æ–≥–æ –∏–∑ –ë–î
    $user = User::where('email', 'anna@spa.test')->first();
    if (!$user) {
        $user = User::first();
    }
    
    if (!$user) {
        echo "   ‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n";
        exit(1);
    }
    
    echo "   üìß –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {$user->email}\n";
    
    // –°–æ–∑–¥–∞–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    $testAd = Ad::create([
        'user_id' => $user->id,
        'title' => '–¢–µ—Å—Ç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã',
        'age' => 25,
        'height' => '170',
        'weight' => '60',
        'breast_size' => '3',
        'hair_color' => 'blonde',
        'eye_color' => 'blue',
        'nationality' => 'russian',
        'status' => 'draft',
        'specialty' => 'massage',
        'price' => 5000,
        'address' => '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å'
    ]);
    
    echo "   ‚úÖ –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: ID = {$testAd->id}\n";
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
    echo "\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:\n";
    $savedAd = Ad::find($testAd->id);
    
    foreach ($parameterFields as $field) {
        $value = $savedAd->$field;
        if ($value) {
            echo "   ‚úÖ $field: '$value'\n";
        } else {
            echo "   ‚ö†Ô∏è $field: –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\n";
        }
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º JSON —Ñ–æ—Ä–º–∞—Ç –¥–ª—è frontend
    echo "\n4Ô∏è‚É£ –§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è frontend:\n";
    $frontendData = [
        'parameters' => [
            'title' => $savedAd->title,
            'age' => $savedAd->age,
            'height' => $savedAd->height,
            'weight' => $savedAd->weight,
            'breast_size' => $savedAd->breast_size,
            'hair_color' => $savedAd->hair_color,
            'eye_color' => $savedAd->eye_color,
            'nationality' => $savedAd->nationality
        ]
    ];
    
    echo "   " . json_encode($frontendData, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "\n";
    
    // 5. –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
    echo "\n5Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:\n";
    $savedAd->update([
        'title' => '–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∏–º—è',
        'age' => 28,
        'hair_color' => 'brunette'
    ]);
    
    $updatedAd = Ad::find($testAd->id);
    echo "   ‚úÖ title: '{$updatedAd->title}'\n";
    echo "   ‚úÖ age: {$updatedAd->age}\n";
    echo "   ‚úÖ hair_color: '{$updatedAd->hair_color}'\n";
    
    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
    $testAd->forceDelete();
    echo "\n   üóëÔ∏è –¢–µ—Å—Ç–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ\n";
    
} catch (Exception $e) {
    echo "   ‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
    echo "   –§–∞–π–ª: " . $e->getFile() . "\n";
    echo "   –°—Ç—Ä–æ–∫–∞: " . $e->getLine() . "\n";
}

echo "\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢: –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n";
echo "   - Backend —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ–ª—è—Ö\n";
echo "   - Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –æ–±—ä–µ–∫—Ç–æ–º parameters\n";
echo "   - –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞\n";