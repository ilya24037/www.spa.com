# Send test task to TeamLead agent
Write-Host "Sending test task to TeamLead agent..." -ForegroundColor Cyan

$task = @{
    from = "ceo"
    to = "teamlead"
    title = "–ü–ª–∞–Ω —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ MasterCard"
    message = "–ù—É–∂–Ω–æ —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ MasterCard —Å —É—á–µ—Ç–æ–º FSD –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–Ω–∞–Ω–∏—è –∏–∑ docs/LESSONS –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø KISS."
    priority = "high"
    timestamp = (Get-Date).ToString("yyyy-MM-dd HH:mm:ss")
} | ConvertTo-Json

# Save task to TeamLead inbox
$taskFile = "virtual-office\inbox\teamlead\refactoring_task_$(Get-Date -Format 'yyyyMMdd_HHmmss').json"
$task | Out-File -FilePath $taskFile -Encoding UTF8

Write-Host "‚úÖ Task sent successfully!" -ForegroundColor Green
Write-Host "üìÅ Task file: $taskFile" -ForegroundColor Yellow
Write-Host ""
Write-Host "TeamLead should process this task within 10 seconds..." -ForegroundColor Gray
Write-Host "Check response in: virtual-office\outbox\" -ForegroundColor Cyan

# Wait and check for response
Write-Host ""
Write-Host "Waiting for response..." -ForegroundColor Gray
Start-Sleep -Seconds 15

# Check if response exists
$responses = Get-ChildItem "virtual-office\outbox" -Filter "*response*.txt" -ErrorAction SilentlyContinue |
    Sort-Object LastWriteTime -Descending |
    Select-Object -First 1

if ($responses) {
    Write-Host ""
    Write-Host "‚úÖ Response found: $($responses.Name)" -ForegroundColor Green
    Write-Host "Content preview:" -ForegroundColor Yellow
    Get-Content $responses.FullName -First 10 | ForEach-Object { Write-Host $_ }
} else {
    Write-Host "‚ö†Ô∏è No response yet. Check virtual-office\outbox\ manually" -ForegroundColor Yellow
}