# TeamLead Agent V2 - Enhanced with proper Claude integration
$ErrorActionPreference = 'SilentlyContinue'

Write-Host "Starting TeamLead Agent V2 with enhanced knowledge..." -ForegroundColor Cyan
Write-Host "Using knowledge from 107+ project documents" -ForegroundColor Yellow
Write-Host ""

while ($true) {
    # Check inbox
    $inbox = Get-ChildItem "virtual-office\inbox\teamlead" -Filter "*.json" 2>$null

    if ($inbox) {
        foreach ($msg in $inbox) {
            try {
                $content = Get-Content $msg.FullName -Raw | ConvertFrom-Json
                Write-Host "Processing task: $($content.message)" -ForegroundColor Yellow

                # Create detailed prompt
                $prompt = @"
You are TeamLead for SPA Platform project. Use knowledge from docs/LESSONS.

Task from $($content.from): $($content.message)

Apply these principles:
1. KISS - simplest solution first
2. Business-logic-first approach
3. Use existing patterns from project
4. Check docs/LESSONS for similar problems

Provide specific actionable plan.
"@

                # Call Claude with explicit instruction
                $response = $prompt | claude chat "Analyze this task and provide a detailed plan. Be specific and use project knowledge."

                # Save response
                $outputFile = "virtual-office\outbox\teamlead_response_$(Get-Date -Format 'yyyyMMdd_HHmmss').txt"

                # Add task info to response
                $fullResponse = @"
TASK ANALYSIS BY TEAMLEAD
=========================
From: $($content.from)
Task: $($content.message)
Timestamp: $(Get-Date)
=========================

$response

=========================
Generated by TeamLead Agent V2
Using knowledge from docs/LESSONS/
"@

                $fullResponse | Out-File $outputFile -Encoding UTF8

                # Move processed message
                Move-Item $msg.FullName "virtual-office\outbox\" -Force
                Write-Host "Task completed. Response: $outputFile" -ForegroundColor Green
            }
            catch {
                Write-Host "Error: $_" -ForegroundColor Red
            }
        }
    }

    Start-Sleep -Seconds 10
}