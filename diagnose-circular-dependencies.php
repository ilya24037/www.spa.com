<?php

echo "=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¶–ò–ö–õ–ò–ß–ù–´–• –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô –í DI –ö–û–ù–¢–ï–ô–ù–ï–†–ï ===" . PHP_EOL . PHP_EOL;

// –í—Ä–µ–º–µ–Ω–Ω–æ –≤–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫
error_reporting(E_ALL);
ini_set('display_errors', 1);

try {
    // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å Laravel –±–µ–∑ –ª–∏–º–∏—Ç–æ–≤ –ø–∞–º—è—Ç–∏
    ini_set('memory_limit', '1G');
    
    require __DIR__.'/vendor/autoload.php';
    
    echo "‚úÖ Autoload –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ" . PHP_EOL;
    
    $app = require_once __DIR__.'/bootstrap/app.php';
    
    echo "‚úÖ Laravel app —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ" . PHP_EOL;
    
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã –æ–¥–∏–Ω –∑–∞ –¥—Ä—É–≥–∏–º
    $services = [
        'App\Domain\Booking\Services\BookingService',
        'App\Domain\Booking\Services\BookingValidationService',  
        'App\Domain\Booking\Services\BookingStatusManager',
        'App\Domain\Booking\Services\BookingNotificationService',
        'App\Domain\Ad\Services\AdService',
        'App\Domain\Ad\Services\AdValidationService',
        'App\Domain\Master\Services\MasterApiService',
        'App\Domain\User\Services\UserService',
        'App\Application\Services\Integration\UserReviewsIntegrationService',
        'App\Application\Services\Integration\ReviewValidator',
        'App\Application\Services\Integration\UserReviewsReader',
        'App\Application\Services\Integration\UserReviewsWriter',
    ];
    
    echo PHP_EOL . "üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–ó–†–ï–®–ï–ù–ò–Ø –°–ï–†–í–ò–°–û–í:" . PHP_EOL;
    
    foreach ($services as $service) {
        try {
            echo "  üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º: {$service}... ";
            
            // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–∏—Å —á–µ—Ä–µ–∑ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            $instance = $app->make($service);
            
            echo "‚úÖ OK" . PHP_EOL;
            
            // –û—á–∏—â–∞–µ–º –ø–∞–º—è—Ç—å
            unset($instance);
            
        } catch (\Exception $e) {
            echo "‚ùå –û–®–ò–ë–ö–ê: " . $e->getMessage() . PHP_EOL;
            echo "   –§–∞–π–ª: " . $e->getFile() . ":" . $e->getLine() . PHP_EOL;
            
            // –ï—Å–ª–∏ —ç—Ç–æ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å
            if (strpos($e->getMessage(), 'Circular dependency') !== false) {
                echo "   üîÑ –¶–ò–ö–õ–ò–ß–ï–°–ö–ê–Ø –ó–ê–í–ò–°–ò–ú–û–°–¢–¨ –ù–ê–ô–î–ï–ù–ê!" . PHP_EOL;
            }
        }
    }
    
    echo PHP_EOL . "üîç –ü–†–û–í–ï–†–ö–ê –ü–†–û–í–ê–ô–î–ï–†–û–í –°–ï–†–í–ò–°–û–í:" . PHP_EOL;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã —Å–µ—Ä–≤–∏—Å–æ–≤
    $providers = config('app.providers', []);
    foreach ($providers as $provider) {
        if (strpos($provider, 'App\\') === 0) {
            echo "  üìã –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {$provider}" . PHP_EOL;
        }
    }
    
} catch (\Exception $e) {
    echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï LARAVEL:" . PHP_EOL;
    echo "   –°–æ–æ–±—â–µ–Ω–∏–µ: " . $e->getMessage() . PHP_EOL;
    echo "   –§–∞–π–ª: " . $e->getFile() . ":" . $e->getLine() . PHP_EOL;
    echo "   Trace:" . PHP_EOL;
    echo $e->getTraceAsString() . PHP_EOL;
}

echo PHP_EOL . "=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===" . PHP_EOL;