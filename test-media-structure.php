<?php

require_once __DIR__ . '/vendor/autoload.php';
$app = require_once __DIR__ . '/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Http\Kernel::class);
$response = $kernel->handle(
    $request = Illuminate\Http\Request::capture()
);

use App\Domain\Ad\Models\Ad;
use App\Infrastructure\Media\PathGenerator;

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫\n";
echo "==================================\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
$adsWithPhotos = Ad::whereNotNull('photos')
    ->where('photos', '!=', '[]')
    ->count();

$adsWithVideos = Ad::whereNotNull('video')
    ->where('video', '!=', '[]')
    ->count();

echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n";
echo "- –û–±—ä—è–≤–ª–µ–Ω–∏–π —Å —Ñ–æ—Ç–æ: {$adsWithPhotos}\n";
echo "- –û–±—ä—è–≤–ª–µ–Ω–∏–π —Å –≤–∏–¥–µ–æ: {$adsWithVideos}\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º PathGenerator
echo "üß™ –¢–µ—Å—Ç PathGenerator:\n";
echo "----------------------\n";

$userId = 1;
$adId = 178;

$photoPath = PathGenerator::adPhotoPath($userId, $adId, 'jpg', 'original');
echo "–ü—É—Ç—å –¥–ª—è —Ñ–æ—Ç–æ: {$photoPath}\n";

$thumbPath = PathGenerator::generateVariantPath($photoPath, 'thumb');
echo "–ü—É—Ç—å –¥–ª—è thumb: {$thumbPath}\n";

$videoPath = PathGenerator::adVideoPath($userId, $adId, 'mp4');
echo "–ü—É—Ç—å –¥–ª—è –≤–∏–¥–µ–æ: {$videoPath}\n";

$userBasePath = PathGenerator::getUserBasePath($userId);
echo "–ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {$userBasePath}\n";

$adBasePath = PathGenerator::getAdBasePath($userId, $adId);
echo "–ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {$adBasePath}\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –∏–∑ –ø—É—Ç–∏
$testPath = '/storage/users/1/ads/178/photos/original/test.jpg';
$ids = PathGenerator::extractIdsFromPath($testPath);
if ($ids) {
    echo "‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –∏–∑ –ø—É—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n";
    echo "   User ID: {$ids['user_id']}, Ad ID: {$ids['ad_id']}\n\n";
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø—É—Ç–∏
if (PathGenerator::isAdMediaPath($testPath)) {
    echo "‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø—É—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç\n\n";
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
$firstAd = Ad::whereNotNull('photos')
    ->where('photos', '!=', '[]')
    ->first();

if ($firstAd) {
    echo "üì∑ –ü—Ä–∏–º–µ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏:\n";
    echo "   ID: {$firstAd->id}\n";
    echo "   User ID: {$firstAd->user_id}\n";
    $photos = json_decode($firstAd->photos, true);
    if (is_array($photos) && count($photos) > 0) {
        echo "   –ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ: {$photos[0]}\n";
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ —É–∂–µ
        $isNewStructure = str_contains($photos[0], '/users/') && PathGenerator::isAdMediaPath($photos[0]);
        if ($isNewStructure) {
            echo "   ‚úÖ –£–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É\n";
        } else {
            echo "   ‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É (ads/photos/)\n";
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏
            $extension = pathinfo($photos[0], PATHINFO_EXTENSION);
            $newPath = PathGenerator::adPhotoPath($firstAd->user_id, $firstAd->id, $extension, 'original');
            echo "   –ù–æ–≤—ã–π –ø—É—Ç—å –±—É–¥–µ—Ç: /storage/{$newPath}\n";
        }
    }
}

echo "\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n";