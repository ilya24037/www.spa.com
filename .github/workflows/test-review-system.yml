name: Review System Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'app/Domain/Review/**'
      - 'app/Application/Http/Controllers/Api/ReviewController.php'
      - 'resources/js/src/entities/review/**'
      - 'resources/js/src/features/review-management/**'
      - 'resources/js/src/widgets/profile-dashboard/tabs/ReviewsTab.vue'
      - 'tests/**'
      - '.github/workflows/test-review-system.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'app/Domain/Review/**'
      - 'app/Application/Http/Controllers/Api/ReviewController.php'
      - 'resources/js/src/entities/review/**'
      - 'resources/js/src/features/review-management/**'
      - 'resources/js/src/widgets/profile-dashboard/tabs/ReviewsTab.vue'
      - 'tests/**'

jobs:
  backend-tests:
    name: Backend Tests (PHPUnit)
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: spa_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql, redis
          coverage: xdebug
      
      - name: Copy .env
        run: |
          cp .env.example .env.testing
          sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env.testing
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env.testing
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=spa_test/' .env.testing
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env.testing
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=password/' .env.testing
      
      - name: Install composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      
      - name: Generate application key
        run: php artisan key:generate --env=testing
      
      - name: Run migrations
        run: php artisan migrate --env=testing
      
      - name: Run PHPUnit tests
        run: |
          php artisan test --env=testing --coverage-text --coverage-html=coverage \
            --filter "ReviewTest|ReviewServiceTest|ReviewControllerTest"
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend-coverage
          path: coverage/

  frontend-tests:
    name: Frontend Tests (Jest + Vue Test Utils)
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run Jest unit tests
        run: npm run test:unit -- --coverage
      
      - name: Run component tests
        run: npm run test:components
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: frontend-coverage
          path: coverage/

  e2e-tests:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: spa_e2e
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install PHP dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      
      - name: Install Node dependencies
        run: npm ci
      
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
      
      - name: Setup test environment
        run: |
          cp .env.example .env.e2e
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=spa_e2e/' .env.e2e
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env.e2e
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env.e2e
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=password/' .env.e2e
          php artisan key:generate --env=e2e
          php artisan migrate --env=e2e
          php artisan db:seed --env=e2e --class=TestDataSeeder
      
      - name: Build frontend
        run: npm run build
      
      - name: Start application server
        run: |
          php artisan serve --env=e2e --port=8000 &
          npx wait-on http://localhost:8000
      
      - name: Run Playwright E2E tests
        run: npx playwright test tests/e2e/review-system.spec.ts
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: phpstan, phpcs
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          composer install --no-progress --prefer-dist
          npm ci
      
      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyse app/Domain/Review app/Application/Http/Controllers/Api/ReviewController.php --level=5
      
      - name: Run PHP Code Sniffer
        run: ./vendor/bin/phpcs app/Domain/Review --standard=PSR12
      
      - name: Run ESLint
        run: npm run lint -- resources/js/src/entities/review resources/js/src/features/review-management
      
      - name: Run TypeScript type checking
        run: npm run type-check