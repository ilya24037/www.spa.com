<?php

namespace App\Console\Commands;

use App\Models\MasterProfile;
use Illuminate\Console\Command;

class GenerateMasterMetaTags extends Command
{
    /**
     * –ò–º—è –∏ —Å–∏–≥–Ω–∞—Ç—É—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
     */
    protected $signature = 'masters:generate-meta 
                            {--force : –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ meta-—Ç–µ–≥–∏}
                            {--dry-run : –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è}';

    /**
     * –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
     */
    protected $description = '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SEO meta-—Ç–µ–≥–∏ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π –º–∞—Å—Ç–µ—Ä–æ–≤';

    /**
     * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
     */
    public function handle()
    {
        $this->info('üîç –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SEO meta-—Ç–µ–≥–æ–≤ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π –º–∞—Å—Ç–µ—Ä–æ–≤...');
        
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
        $query = MasterProfile::query();
        
        // –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω --force, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª–∏ –±–µ–∑ meta-—Ç–µ–≥–æ–≤
        if (!$this->option('force')) {
            $query->where(function ($q) {
                $q->whereNull('meta_title')
                  ->orWhereNull('meta_description')
                  ->orWhere('meta_title', '')
                  ->orWhere('meta_description', '');
            });
        }
        
        $profiles = $query->with(['services'])->get();
        
        if ($profiles->isEmpty()) {
            $this->info('‚úÖ –í—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ —É–∂–µ –∏–º–µ—é—Ç meta-—Ç–µ–≥–∏!');
            return Command::SUCCESS;
        }
        
        $this->info("üìä –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {$profiles->count()}");
        $this->newLine();
        
        // –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
        $bar = $this->output->createProgressBar($profiles->count());
        $bar->start();
        
        $updated = 0;
        $examples = []; // –î–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–∏–º–µ—Ä–æ–≤
        
        foreach ($profiles as $profile) {
            $oldTitle = $profile->meta_title;
            $oldDescription = $profile->meta_description;
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º meta-—Ç–µ–≥–∏
            $profile->generateMetaTags();
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–≤—ã–µ 3 –ø—Ä–∏–º–µ—Ä–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞
            if (count($examples) < 3) {
                $examples[] = [
                    'name' => $profile->display_name,
                    'title' => $profile->meta_title,
                    'description' => mb_substr($profile->meta_description, 0, 80) . '...',
                ];
            }
            
            // –ï—Å–ª–∏ –Ω–µ dry-run - —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            if (!$this->option('dry-run')) {
                $profile->save();
                $updated++;
            }
            
            $bar->advance();
        }
        
        $bar->finish();
        $this->newLine(2);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–µ–≥–æ–≤
        if (!empty($examples)) {
            $this->info('üìù –ü—Ä–∏–º–µ—Ä—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö meta-—Ç–µ–≥–æ–≤:');
            $this->newLine();
            
            foreach ($examples as $i => $example) {
                $this->line("  <fg=cyan>–ü—Ä–æ—Ñ–∏–ª—å:</> {$example['name']}");
                $this->line("  <fg=yellow>Title:</> {$example['title']}");
                $this->line("  <fg=yellow>Description:</> {$example['description']}");
                if ($i < count($examples) - 1) {
                    $this->line("  " . str_repeat('-', 70));
                }
            }
        }
        
        $this->newLine();
        
        if ($this->option('dry-run')) {
            $this->warn('‚ö†Ô∏è  –≠—Ç–æ –±—ã–ª —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–≥–æ–Ω (--dry-run)');
            $this->warn('   Meta-—Ç–µ–≥–∏ –ù–ï –±—ã–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
            $this->info('   –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–µ–∑ --dry-run –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
        } else {
            $this->info("‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {$updated}");
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å
            $filled = MasterProfile::whereNotNull('meta_title')
                ->whereNotNull('meta_description')
                ->where('meta_title', '!=', '')
                ->where('meta_description', '!=', '')
                ->count();
                
            $total = MasterProfile::count();
            $percent = $total > 0 ? round(($filled / $total) * 100) : 0;
            
            $this->info("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {$filled} –∏–∑ {$total} –ø—Ä–æ—Ñ–∏–ª–µ–π –∏–º–µ—é—Ç meta-—Ç–µ–≥–∏ ({$percent}%)");
        }
        
        return Command::SUCCESS;
    }
}