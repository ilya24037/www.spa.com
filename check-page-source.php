<?php

echo "üîç –ü–†–û–í–ï–†–ö–ê –°–û–î–ï–†–ñ–ò–ú–û–ì–û –°–¢–†–ê–ù–ò–¶–´\n\n";

// –î–µ–ª–∞–µ–º –æ–±—ã—á–Ω—ã–π HTTP –∑–∞–ø—Ä–æ—Å
$url = 'http://spa.test/masters/klassiceskii-massaz-ot-anny-1';

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
curl_setopt($ch, CURLOPT_TIMEOUT, 30);
curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36');

$response = curl_exec($ch);
$httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

if ($httpCode === 200) {
    echo "‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞\n\n";
    
    // –ò—â–µ–º Inertia page data
    if (preg_match('/<div id="app" data-page="([^"]*)"/', $response, $matches)) {
        echo "‚úÖ –ù–∞–π–¥–µ–Ω Inertia data-page\n";
        
        // –î–µ–∫–æ–¥–∏—Ä—É–µ–º JSON
        $pageData = html_entity_decode($matches[1]);
        $data = json_decode($pageData, true);
        
        if ($data) {
            echo "‚úÖ JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω\n";
            echo "Component: " . ($data['component'] ?? 'undefined') . "\n";
            
            if (isset($data['props']['master'])) {
                $master = $data['props']['master'];
                echo "\nüìã MASTER DATA:\n";
                echo "   ID: " . ($master['id'] ?? 'undefined') . "\n";
                echo "   Display Name: " . ($master['display_name'] ?? 'undefined') . "\n";
                
                // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê
                if (isset($master['photos'])) {
                    echo "   ‚úÖ photos –Ω–∞–π–¥–µ–Ω—ã: " . count($master['photos']) . " —à—Ç\n";
                    
                    foreach ($master['photos'] as $i => $photo) {
                        echo "     " . ($i + 1) . ". " . ($photo['url'] ?? 'no url') . "\n";
                    }
                } else {
                    echo "   ‚ùå photos –ù–ï –Ω–∞–π–¥–µ–Ω—ã –≤ master!\n";
                    echo "   –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏ master: " . implode(', ', array_keys($master)) . "\n";
                }
            } else {
                echo "\n‚ùå master –ù–ï –Ω–∞–π–¥–µ–Ω –≤ props\n";
                echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ props: " . implode(', ', array_keys($data['props'] ?? [])) . "\n";
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º gallery –æ—Ç–¥–µ–ª—å–Ω–æ
            if (isset($data['props']['gallery'])) {
                echo "\n‚úÖ gallery –Ω–∞–π–¥–µ–Ω: " . count($data['props']['gallery']) . " —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n";
                
                foreach ($data['props']['gallery'] as $i => $item) {
                    if (is_array($item)) {
                        echo "     " . ($i + 1) . ". " . ($item['url'] ?? 'no url') . "\n";
                    } else {
                        echo "     " . ($i + 1) . ". $item\n";
                    }
                }
            }
            
        } else {
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON\n";
            echo "Raw page data (first 200 chars): " . substr($pageData, 0, 200) . "\n";
        }
        
    } else {
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω data-page –≤ HTML\n";
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ #app
        if (strpos($response, 'id="app"') !== false) {
            echo "‚úÖ #app –Ω–∞–π–¥–µ–Ω, –Ω–æ –±–µ–∑ data-page\n";
        } else {
            echo "‚ùå #app –ù–ï –Ω–∞–π–¥–µ–Ω –≤ HTML\n";
        }
        
        // –ò—â–µ–º –ª—é–±—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        if (strpos($response, 'photos') !== false) {
            echo "‚úÖ –°–ª–æ–≤–æ 'photos' –Ω–∞–π–¥–µ–Ω–æ –≤ HTML\n";
        } else {
            echo "‚ùå –°–ª–æ–≤–æ 'photos' –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ HTML\n";
        }
    }
    
} else {
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: HTTP $httpCode\n";
}

echo "\nüéØ –ò–¢–û–ì:\n";
echo "–ï—Å–ª–∏ photos –ù–ï –Ω–∞–π–¥–µ–Ω—ã –≤ master –æ–±—ä–µ–∫—Ç–µ,\n";
echo "–∑–Ω–∞—á–∏—Ç –ø—Ä–æ–±–ª–µ–º–∞ –≤ MasterController - –¥–∞–Ω–Ω—ã–µ –Ω–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ \$masterArray\n";