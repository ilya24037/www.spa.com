<?php

require_once __DIR__ . '/vendor/autoload.php';
$app = require_once __DIR__ . '/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Http\Kernel::class);
$response = $kernel->handle(
    $request = Illuminate\Http\Request::capture()
);

use App\Domain\Ad\Models\Ad;

echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏\n";
echo "=================================\n\n";

$ad = Ad::find(178);

if ($ad) {
    echo "‚úÖ –û–±—ä—è–≤–ª–µ–Ω–∏–µ ID: {$ad->id}\n";
    echo "   User ID: {$ad->user_id}\n";
    echo "   User folder: {$ad->user_folder}\n\n";
    
    $photos = json_decode($ad->photos, true);
    echo "üì∑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ ({–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: " . count($photos) . "}):\n";
    if (is_array($photos) && count($photos) > 0) {
        echo "   –ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ: {$photos[0]}\n";
        if (str_contains($photos[0], '/users/')) {
            echo "   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ù–û–í–£–Æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É!\n";
        }
    }
    
    $videos = json_decode($ad->video, true);
    echo "\nüìπ –í–∏–¥–µ–æ:\n";
    if (is_array($videos) && count($videos) > 0) {
        echo "   –ü–µ—Ä–≤–æ–µ –≤–∏–¥–µ–æ: {$videos[0]}\n";
        if (str_contains($videos[0], '/users/')) {
            echo "   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ù–û–í–£–Æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É!\n";
        }
    }
    
    $mediaPaths = json_decode($ad->media_paths, true);
    if ($mediaPaths) {
        echo "\nüìÅ Media paths metadata:\n";
        echo "   Migrated at: {$mediaPaths['migrated_at']}\n";
        echo "   Photos count: " . count($mediaPaths['photos']) . "\n";
        echo "   Videos count: " . count($mediaPaths['videos']) . "\n";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    echo "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤:\n";
    $firstPhoto = str_replace('/storage/', '', $photos[0]);
    $fullPath = storage_path('app/public/' . $firstPhoto);
    if (file_exists($fullPath)) {
        $size = round(filesize($fullPath) / 1024, 2);
        echo "   ‚úÖ –ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ({$size} KB)\n";
    } else {
        echo "   ‚ùå –ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –ù–ï –Ω–∞–π–¥–µ–Ω–æ!\n";
    }
}

echo "\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n";
echo "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫: users/{userId}/ads/{adId}/photos/original/\n";