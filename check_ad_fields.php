<?php

require_once 'vendor/autoload.php';

use App\Domain\Ad\Models\Ad;
use Illuminate\Support\Facades\DB;

// –ó–∞–≥—Ä—É–∂–∞–µ–º Laravel
$app = require_once 'bootstrap/app.php';
$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();

echo "üîç –ü–†–û–í–ï–†–ö–ê –ü–û–õ–ï–ô –û–ë–™–Ø–í–õ–ï–ù–ò–Ø\n";
echo "============================\n\n";

// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
$latestAd = Ad::latest()->first();

if (!$latestAd) {
    echo "‚ùå –û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n";
    exit;
}

echo "üìã ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {$latestAd->id}\n";
echo "üìã –°—Ç–∞—Ç—É—Å: " . $latestAd->status->value . "\n";
echo "üìã –°–æ–∑–¥–∞–Ω–æ: {$latestAd->created_at}\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
$fieldsToCheck = [
    'title' => '–ò–º—è',
    'work_format' => '–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã',
    'service_provider' => '–ö—Ç–æ –æ–∫–∞–∑—ã–≤–∞–µ—Ç —É—Å–ª—É–≥–∏',
    'clients' => '–ö–ª–∏–µ–Ω—Ç—ã',
    'age' => '–í–æ–∑—Ä–∞—Å—Ç',
    'height' => '–†–æ—Å—Ç',
    'weight' => '–í–µ—Å',
    'breast_size' => '–†–∞–∑–º–µ—Ä –≥—Ä—É–¥–∏',
    'hair_color' => '–¶–≤–µ—Ç –≤–æ–ª–æ—Å',
    'phone' => '–¢–µ–ª–µ—Ñ–æ–Ω',
    'whatsapp' => 'WhatsApp',
    'telegram' => 'Telegram',
    'description' => '–û–ø–∏—Å–∞–Ω–∏–µ',
    'prices' => '–¶–µ–Ω—ã',
    'services' => '–£—Å–ª—É–≥–∏',
    'photos' => '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏',
    'geo' => '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è',
    'schedule' => '–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã',
    'online_booking' => '–û–Ω–ª–∞–π–Ω –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'
];

echo "üîç –ü–†–û–í–ï–†–ö–ê –ü–û–õ–ï–ô:\n";
echo "==================\n";

foreach ($fieldsToCheck as $field => $label) {
    $value = $latestAd->getAttribute($field);
    $status = $value !== null && $value !== '' ? '‚úÖ' : '‚ùå';
    $displayValue = '';
    
    if ($value !== null) {
        if (is_array($value)) {
            $displayValue = '[' . count($value) . ' —ç–ª–µ–º–µ–Ω—Ç–æ–≤]';
        } elseif (is_string($value) && strlen($value) > 50) {
            $displayValue = substr($value, 0, 50) . '...';
        } else {
            $displayValue = (string)$value;
        }
    } else {
        $displayValue = '–ù–ï –ó–ê–ü–û–õ–ù–ï–ù–û';
    }
    
    echo "{$status} {$label}: {$displayValue}\n";
}

echo "\nüîç –°–¢–†–£–ö–¢–£–†–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:\n";
echo "========================\n";

// –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã ads
$columns = DB::select("DESCRIBE ads");
foreach ($columns as $column) {
    $isNull = $column->Null === 'YES' ? 'NULL' : 'NOT NULL';
    $default = $column->Default ? "DEFAULT '{$column->Default}'" : '';
    echo "{$column->Field} ({$column->Type}) {$isNull} {$default}\n";
}

echo "\nüîç RAW –î–ê–ù–ù–´–ï –ò–ó –ë–î:\n";
echo "====================\n";

$rawData = DB::table('ads')->where('id', $latestAd->id)->first();
foreach ($rawData as $field => $value) {
    if (in_array($field, ['service_provider', 'clients', 'prices', 'services', 'photos', 'geo', 'schedule'])) {
        $decoded = json_decode($value, true);
        $displayValue = $decoded ? '[' . count($decoded) . ' —ç–ª–µ–º–µ–Ω—Ç–æ–≤]' : 'NULL';
        echo "{$field}: {$displayValue}\n";
    } else {
        $displayValue = $value ?: 'NULL';
        echo "{$field}: {$displayValue}\n";
    }
}
