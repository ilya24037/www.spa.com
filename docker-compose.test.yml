version: '3.8'

services:
  # Test Database
  mysql-test:
    image: mysql:8.0
    container_name: spa_mysql_test
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: spa_test
      MYSQL_USER: spa_user
      MYSQL_PASSWORD: spa_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_test_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spa_test_network

  # Redis for testing
  redis-test:
    image: redis:7-alpine
    container_name: spa_redis_test
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spa_test_network

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: spa_mailhog
    ports:
      - "1026:1025"  # SMTP
      - "8026:8025"  # Web UI
    networks:
      - spa_test_network

  # Selenium Grid for browser testing
  selenium-hub:
    image: selenium/hub:4.15.0
    container_name: spa_selenium_hub
    ports:
      - "4444:4444"
      - "4443:4443"
      - "4442:4442"
    environment:
      - SE_SESSION_REQUEST_TIMEOUT=300
      - SE_SESSION_RETRY_INTERVAL=5
    networks:
      - spa_test_network

  selenium-chrome:
    image: selenium/node-chrome:4.15.0
    container_name: spa_selenium_chrome
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=4
    shm_size: '2gb'
    networks:
      - spa_test_network

  selenium-firefox:
    image: selenium/node-firefox:4.15.0
    container_name: spa_selenium_firefox
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=2
    shm_size: '2gb'
    networks:
      - spa_test_network

  # Playwright for E2E testing
  playwright:
    image: mcr.microsoft.com/playwright:v1.40.0-focal
    container_name: spa_playwright
    working_dir: /app
    volumes:
      - .:/app
      - playwright_cache:/ms-playwright
    environment:
      BASE_URL: http://host.docker.internal:8000
      PLAYWRIGHT_BROWSERS_PATH: /ms-playwright
      CI: "true"
    networks:
      - spa_test_network
    command: >
      sh -c "
        npm ci &&
        npx playwright install &&
        npx playwright test --reporter=html
      "

volumes:
  mysql_test_data:
    driver: local
  playwright_cache:
    driver: local

networks:
  spa_test_network:
    driver: bridge