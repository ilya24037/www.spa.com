<?php

namespace App\Infrastructure\Notification\Channels;

use App\Domain\Notification\Models\NotificationDelivery;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Log;

/**
 * Email –∫–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
class EmailChannel implements ChannelInterface
{
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    public function send(NotificationDelivery $delivery): array
    {
        try {
            $content = $delivery->content;
            $recipient = $delivery->recipient;

            if (!$recipient) {
                return [
                    'success' => false,
                    'error' => 'No email address provided',
                ];
            }

            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ email
            // –ü–æ–∫–∞ –ª–æ–≥–∏—Ä—É–µ–º –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            Log::info('Email notification sent', [
                'to' => $recipient,
                'subject' => $content['title'] ?? '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
                'delivery_id' => $delivery->id,
            ]);

            if (config('app.debug')) {
                Log::channel('single')->info("üìß EMAIL TO: {$recipient}\nSUBJECT: {$content['title']}\nCONTENT:\n{$content['message']}");
            }

            return [
                'success' => true,
                'message' => 'Email sent successfully',
                'external_id' => 'email_' . time(),
                'delivery_time' => rand(1, 5), // –°–∏–º—É–ª—è—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
            ];

        } catch (\Exception $e) {
            Log::error('Failed to send email notification', [
                'delivery_id' => $delivery->id,
                'error' => $e->getMessage(),
            ]);

            return [
                'success' => false,
                'error' => $e->getMessage(),
            ];
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–∞–Ω–∞–ª–∞
     */
    public function isAvailable(): bool
    {
        return config('mail.enabled', true);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
     */
    public function getName(): string
    {
        return 'Email';
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
     */
    public function getMaxDeliveryTime(): int
    {
        return 600; // 10 –º–∏–Ω—É—Ç
    }

    /**
     * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –∫–∞–Ω–∞–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏
     */
    public function supportsDeliveryConfirmation(): bool
    {
        return true;
    }
}