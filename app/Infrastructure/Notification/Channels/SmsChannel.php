<?php

namespace App\Services\Notification\Channels;

use App\Models\NotificationDelivery;
use Illuminate\Support\Facades\Log;

/**
 * SMS –∫–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
class SmsChannel implements ChannelInterface
{
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    public function send(NotificationDelivery $delivery): array
    {
        try {
            $content = $delivery->content;
            $phone = $delivery->recipient;

            if (!$phone) {
                return [
                    'success' => false,
                    'error' => 'No phone number provided',
                ];
            }

            $message = $content['message'] ?? '';
            
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å SMS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º
            Log::info('SMS notification sent', [
                'phone' => $phone,
                'message' => $message,
                'delivery_id' => $delivery->id,
            ]);

            if (config('app.debug')) {
                Log::channel('single')->info("üì± SMS TO: {$phone}\nMESSAGE: {$message}");
            }

            return [
                'success' => true,
                'message' => 'SMS sent successfully',
                'external_id' => 'sms_' . time(),
                'delivery_time' => rand(1, 30), // –°–∏–º—É–ª—è—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
            ];

        } catch (\Exception $e) {
            Log::error('Failed to send SMS notification', [
                'delivery_id' => $delivery->id,
                'error' => $e->getMessage(),
            ]);

            return [
                'success' => false,
                'error' => $e->getMessage(),
            ];
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–∞–Ω–∞–ª–∞
     */
    public function isAvailable(): bool
    {
        return config('services.sms.enabled', true);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
     */
    public function getName(): string
    {
        return 'SMS';
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
     */
    public function getMaxDeliveryTime(): int
    {
        return 300; // 5 –º–∏–Ω—É—Ç
    }

    /**
     * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –∫–∞–Ω–∞–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏
     */
    public function supportsDeliveryConfirmation(): bool
    {
        return true;
    }
}