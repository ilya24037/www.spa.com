<?php

namespace App\Enums;

/**
 * –¢–∏–ø—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
 */
enum BookingType: string
{
    case OUTCALL = 'outcall';       // –í—ã–µ–∑–¥ –∫ –∫–ª–∏–µ–Ω—Ç—É
    case INCALL = 'incall';         // –ü—Ä–∏–µ–º —É –º–∞—Å—Ç–µ—Ä–∞
    case ONLINE = 'online';         // –û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
    case PACKAGE = 'package';       // –ü–∞–∫–µ—Ç —É—Å–ª—É–≥

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞
     */
    public function getLabel(): string
    {
        return match($this) {
            self::OUTCALL => '–í—ã–µ–∑–¥ –∫ –∫–ª–∏–µ–Ω—Ç—É',
            self::INCALL => '–ü—Ä–∏–µ–º —É –º–∞—Å—Ç–µ—Ä–∞',
            self::ONLINE => '–û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
            self::PACKAGE => '–ü–∞–∫–µ—Ç —É—Å–ª—É–≥',
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–∞
     */
    public function getDescription(): string
    {
        return match($this) {
            self::OUTCALL => '–ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–µ–∑–∂–∞–µ—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É',
            self::INCALL => '–ö–ª–∏–µ–Ω—Ç –ø—Ä–∏–µ–∑–∂–∞–µ—Ç –∫ –º–∞—Å—Ç–µ—Ä—É –≤ —Å–∞–ª–æ–Ω –∏–ª–∏ —Å—Ç—É–¥–∏—é',
            self::ONLINE => '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –æ–Ω–ª–∞–π–Ω (–≤–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫, —á–∞—Ç)',
            self::PACKAGE => '–ö–æ–º–ø–ª–µ–∫—Å —É—Å–ª—É–≥, –≤–∫–ª—é—á–∞—é—â–∏–π –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ü–µ–¥—É—Ä',
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É —Ç–∏–ø–∞
     */
    public function getIcon(): string
    {
        return match($this) {
            self::OUTCALL => 'üöó',
            self::INCALL => 'üè¢',
            self::ONLINE => 'üíª',
            self::PACKAGE => 'üì¶',
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç —Ç–∏–ø–∞ –¥–ª—è UI
     */
    public function getColor(): string
    {
        return match($this) {
            self::OUTCALL => '#3B82F6',    // blue
            self::INCALL => '#10B981',     // green
            self::ONLINE => '#8B5CF6',     // violet
            self::PACKAGE => '#F59E0B',    // amber
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±—É–µ—Ç –ª–∏ —Ç–∏–ø –∞–¥—Ä–µ—Å
     */
    public function requiresAddress(): bool
    {
        return match($this) {
            self::OUTCALL => true,
            self::INCALL => true,
            default => false,
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±—É–µ—Ç –ª–∏ —Ç–∏–ø –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–ª–∞—Ç—É –∑–∞ –≤—ã–µ–∑–¥
     */
    public function hasDeliveryFee(): bool
    {
        return $this === self::OUTCALL;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ —Ç–∏–ø –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç—É
     */
    public function supportsOnlinePayment(): bool
    {
        return match($this) {
            self::ONLINE, self::PACKAGE => true,
            default => config('booking.online_payment_enabled', true),
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ —Ç–∏–ø –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É
     */
    public function supportsPrepayment(): bool
    {
        return match($this) {
            self::OUTCALL, self::PACKAGE => true,
            default => false,
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–∫–∞–∑–∞ –∑–∞—Ä–∞–Ω–µ–µ (–≤ —á–∞—Å–∞—Ö)
     */
    public function getMinAdvanceHours(): int
    {
        return match($this) {
            self::OUTCALL => 4,     // –í—ã–µ–∑–¥ —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É
            self::INCALL => 2,      // –ü—Ä–∏–µ–º –≤ —Å–∞–ª–æ–Ω–µ
            self::ONLINE => 1,      // –û–Ω–ª–∞–π–Ω –±—ã—Å—Ç—Ä–µ–µ –≤—Å–µ–≥–æ
            self::PACKAGE => 8,     // –ü–∞–∫–µ—Ç —É—Å–ª—É–≥ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–≤ —á–∞—Å–∞—Ö)
     */
    public function getMaxDurationHours(): int
    {
        return match($this) {
            self::OUTCALL => 8,     // –¶–µ–ª—ã–π –¥–µ–Ω—å
            self::INCALL => 6,      // –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –≤ —Å–∞–ª–æ–Ω–µ
            self::ONLINE => 2,      // –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
            self::PACKAGE => 12,    // –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–∞–∫–µ—Ç
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–≤ –º–∏–Ω—É—Ç–∞—Ö)
     */
    public function getDefaultDurationMinutes(): int
    {
        return match($this) {
            self::OUTCALL => 120,   // 2 —á–∞—Å–∞
            self::INCALL => 90,     // 1.5 —á–∞—Å–∞
            self::ONLINE => 60,     // 1 —á–∞—Å
            self::PACKAGE => 180,   // 3 —á–∞—Å–∞
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ —Ç–∏–ø –æ—Ç–º–µ–Ω—É –∑–∞ 24 —á–∞—Å–∞
     */
    public function allowsFreeCancellation(): bool
    {
        return match($this) {
            self::ONLINE => true,
            default => false,
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç —à—Ç—Ä–∞—Ñ–∞ –∑–∞ –æ—Ç–º–µ–Ω—É
     */
    public function getCancellationFeePercent(): int
    {
        return match($this) {
            self::OUTCALL => 30,    // –í—ã—Å–æ–∫–∏–π —à—Ç—Ä–∞—Ñ –∑–∞ –≤—ã–µ–∑–¥
            self::INCALL => 20,     // –°—Ä–µ–¥–Ω–∏–π —à—Ç—Ä–∞—Ñ
            self::ONLINE => 0,      // –ë–µ–∑ —à—Ç—Ä–∞—Ñ–∞
            self::PACKAGE => 50,    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —à—Ç—Ä–∞—Ñ –∑–∞ –ø–∞–∫–µ—Ç
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ —Ç–∏–ø –≥—Ä—É–ø–ø–æ–≤—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    public function supportsGroupBooking(): bool
    {
        return match($this) {
            self::INCALL, self::PACKAGE => true,
            default => false,
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
     */
    public function getMaxParticipants(): int
    {
        return match($this) {
            self::OUTCALL => 1,
            self::INCALL => 4,
            self::ONLINE => 1,
            self::PACKAGE => 6,
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±—É–µ—Ç –ª–∏ —Ç–∏–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
     */
    public function requiresEquipmentConfirmation(): bool
    {
        return match($this) {
            self::OUTCALL => true,  // –ù—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å —á—Ç–æ –≤–µ–∑—Ç–∏
            default => false,
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    public function getRequiredFields(): array
    {
        $baseFields = ['client_id', 'master_id', 'service_id', 'start_time', 'duration'];
        
        return match($this) {
            self::OUTCALL => array_merge($baseFields, [
                'client_address', 'client_phone', 'equipment_list'
            ]),
            self::INCALL => array_merge($baseFields, [
                'master_address', 'parking_info'
            ]),
            self::ONLINE => array_merge($baseFields, [
                'platform', 'meeting_link'
            ]),
            self::PACKAGE => array_merge($baseFields, [
                'services_list', 'break_times', 'total_duration'
            ]),
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (–≤ —á–∞—Å–∞—Ö –¥–æ –Ω–∞—á–∞–ª–∞)
     */
    public function getReminderHours(): array
    {
        return match($this) {
            self::OUTCALL => [24, 4, 1],    // –ó–∞ —Å—É—Ç–∫–∏, 4 —á–∞—Å–∞ –∏ —á–∞—Å
            self::INCALL => [24, 2],        // –ó–∞ —Å—É—Ç–∫–∏ –∏ 2 —á–∞—Å–∞
            self::ONLINE => [2, 0.25],      // –ó–∞ 2 —á–∞—Å–∞ –∏ 15 –º–∏–Ω—É—Ç
            self::PACKAGE => [48, 24, 4],   // –ó–∞ 2 –¥–Ω—è, —Å—É—Ç–∫–∏ –∏ 4 —á–∞—Å–∞
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ç–∏–ø–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    public function getPriority(): int
    {
        return match($this) {
            self::PACKAGE => 1,     // –°–∞–º—ã–π –≤–∞–∂–Ω—ã–π
            self::OUTCALL => 2,     // –í—ã–µ–∑–¥
            self::INCALL => 3,      // –ü—Ä–∏–µ–º
            self::ONLINE => 4,      // –û–Ω–ª–∞–π–Ω
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–∏–ø—ã –¥–ª—è –≤—ã–±–æ—Ä–∫–∏
     */
    public static function options(): array
    {
        $types = [];
        foreach (self::cases() as $type) {
            $types[$type->value] = $type->getLabel();
        }
        return $types;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–∏–ø –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    public static function default(): self
    {
        return self::INCALL;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–∏–ø—ã
     */
    public static function getPopularTypes(): array
    {
        return [self::INCALL, self::OUTCALL];
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–∏–ø—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
     */
    public static function getMobileTypes(): array
    {
        return [self::OUTCALL, self::ONLINE];
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–∏–ø—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è —Å–∞–ª–æ–Ω–æ–≤
     */
    public static function getSalonTypes(): array
    {
        return [self::INCALL, self::PACKAGE];
    }
}