<?php

namespace App\Enums;

/**
 * –°—Ç–∞—Ç—É—Å—ã –º–∞—Å—Ç–µ—Ä–æ–≤
 */
enum MasterStatus: string
{
    case DRAFT = 'draft';                   // –ß–µ—Ä–Ω–æ–≤–∏–∫ –ø—Ä–æ—Ñ–∏–ª—è
    case PENDING = 'pending';               // –û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
    case ACTIVE = 'active';                 // –ê–∫—Ç–∏–≤–Ω—ã–π, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–∫–∞–∑—ã
    case INACTIVE = 'inactive';             // –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π, –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    case BLOCKED = 'blocked';               // –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
    case SUSPENDED = 'suspended';           // –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è
    case VACATION = 'vacation';             // –í –æ—Ç–ø—É—Å–∫–µ
    case ARCHIVED = 'archived';             // –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
     */
    public function getLabel(): string
    {
        return match($this) {
            self::DRAFT => '–ß–µ—Ä–Ω–æ–≤–∏–∫',
            self::PENDING => '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ',
            self::ACTIVE => '–ê–∫—Ç–∏–≤–µ–Ω',
            self::INACTIVE => '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω',
            self::BLOCKED => '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
            self::SUSPENDED => '–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
            self::VACATION => '–í –æ—Ç–ø—É—Å–∫–µ',
            self::ARCHIVED => '–í –∞—Ä—Ö–∏–≤–µ',
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
     */
    public function getDescription(): string
    {
        return match($this) {
            self::DRAFT => '–ü—Ä–æ—Ñ–∏–ª—å –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω –∏ –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω',
            self::PENDING => '–ü—Ä–æ—Ñ–∏–ª—å –æ–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º',
            self::ACTIVE => '–ú–∞—Å—Ç–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω –∏ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã',
            self::INACTIVE => '–ú–∞—Å—Ç–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–∫–∞–∑—ã',
            self::BLOCKED => '–ü—Ä–æ—Ñ–∏–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π',
            self::SUSPENDED => '–ü—Ä–æ—Ñ–∏–ª—å –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª',
            self::VACATION => '–ú–∞—Å—Ç–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ—Ç–ø—É—Å–∫–µ',
            self::ARCHIVED => '–ü—Ä–æ—Ñ–∏–ª—å –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –∞—Ä—Ö–∏–≤',
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞
     */
    public function getColor(): string
    {
        return match($this) {
            self::DRAFT => '#6B7280',       // gray
            self::PENDING => '#F59E0B',     // amber
            self::ACTIVE => '#10B981',      // green
            self::INACTIVE => '#9CA3AF',    // gray-400
            self::BLOCKED => '#EF4444',     // red
            self::SUSPENDED => '#DC2626',   // red-600
            self::VACATION => '#3B82F6',    // blue
            self::ARCHIVED => '#4B5563',    // gray-600
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É —Å—Ç–∞—Ç—É—Å–∞
     */
    public function getIcon(): string
    {
        return match($this) {
            self::DRAFT => 'üìù',
            self::PENDING => '‚è≥',
            self::ACTIVE => '‚úÖ',
            self::INACTIVE => '‚è∏Ô∏è',
            self::BLOCKED => 'üö´',
            self::SUSPENDED => '‚ö†Ô∏è',
            self::VACATION => 'üèñÔ∏è',
            self::ARCHIVED => 'üì¶',
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Å—Ç–∞—Ç—É—Å
     */
    public function isActive(): bool
    {
        return $this === self::ACTIVE;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ –º–∞—Å—Ç–µ—Ä –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã
     */
    public function canAcceptBookings(): bool
    {
        return $this === self::ACTIVE;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤–∏–¥–∏–º –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø—É–±–ª–∏—á–Ω–æ
     */
    public function isPubliclyVisible(): bool
    {
        return match($this) {
            self::ACTIVE, self::VACATION => true,
            default => false,
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ –º–∞—Å—Ç–µ—Ä —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
     */
    public function canEditProfile(): bool
    {
        return match($this) {
            self::BLOCKED, self::ARCHIVED => false,
            default => true,
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ç—Ä–µ–±—É–µ—Ç –ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º
     */
    public function requiresModeration(): bool
    {
        return $this === self::PENDING;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã —Å—Ç–∞—Ç—É—Å–æ–≤
     */
    public function getNextPossibleStatuses(): array
    {
        return match($this) {
            self::DRAFT => [self::PENDING],
            self::PENDING => [self::ACTIVE, self::BLOCKED],
            self::ACTIVE => [self::INACTIVE, self::VACATION, self::BLOCKED, self::SUSPENDED],
            self::INACTIVE => [self::ACTIVE, self::ARCHIVED],
            self::BLOCKED => [self::ACTIVE, self::ARCHIVED],
            self::SUSPENDED => [self::ACTIVE, self::BLOCKED],
            self::VACATION => [self::ACTIVE],
            self::ARCHIVED => [self::DRAFT],
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å—Ç–∞—Ç—É—Å—É
     */
    public function canTransitionTo(self $status): bool
    {
        return in_array($status, $this->getNextPossibleStatuses());
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
     */
    public static function getFilterStatuses(): array
    {
        return [
            'active' => [self::ACTIVE],
            'inactive' => [self::INACTIVE, self::VACATION],
            'blocked' => [self::BLOCKED, self::SUSPENDED],
            'pending' => [self::DRAFT, self::PENDING],
        ];
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    public static function default(): self
    {
        return self::DRAFT;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
     */
    public static function getPublicStatuses(): array
    {
        return [self::ACTIVE, self::VACATION];
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
     */
    public static function getActiveStatuses(): array
    {
        return [self::ACTIVE];
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
     */
    public static function getBlockedStatuses(): array
    {
        return [self::BLOCKED, self::SUSPENDED];
    }
}