<?php

use App\Domain\Ad\Models\Ad;
use Illuminate\Support\Facades\DB;

require_once __DIR__ . '/vendor/autoload.php';
$app = require_once __DIR__ . '/bootstrap/app.php';
$app->make(\Illuminate\Contracts\Console\Kernel::class)->bootstrap();

echo "üîç –ü–†–û–í–ï–†–ö–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä–∞—Ñ–∏–∫–µ —Ä–∞–±–æ—Ç—ã'\n";
echo str_repeat("=", 60) . "\n\n";

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
echo "üìä –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶–´ ads:\n";
$columns = DB::select('DESCRIBE ads');
$hasScheduleNotes = false;

foreach ($columns as $column) {
    if ($column->Field === 'schedule_notes') {
        $hasScheduleNotes = true;
        echo "  ‚úÖ –ü–æ–ª–µ schedule_notes –Ω–∞–π–¥–µ–Ω–æ:\n";
        echo "     –¢–∏–ø: " . $column->Type . "\n";
        echo "     Nullable: " . ($column->Null === 'YES' ? '–î–∞' : '–ù–µ—Ç') . "\n";
        echo "     Default: " . ($column->Default ?? 'NULL') . "\n";
        break;
    }
}

if (!$hasScheduleNotes) {
    echo "  ‚ùå –ü–æ–ª–µ schedule_notes –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü–µ ads!\n";
}

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å Ad
echo "\nüìã –ü–†–û–í–ï–†–ö–ê –ú–û–î–ï–õ–ò Ad:\n";
$ad = new Ad();
$fillable = $ad->getFillable();

if (in_array('schedule_notes', $fillable)) {
    echo "  ‚úÖ schedule_notes –≤ –º–∞—Å—Å–∏–≤–µ fillable\n";
} else {
    echo "  ‚ùå schedule_notes –ù–ï –≤ –º–∞—Å—Å–∏–≤–µ fillable!\n";
}

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
echo "\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–•–†–ê–ù–ï–ù–ò–Ø:\n";
$testAd = Ad::find(97) ?: Ad::first();

if ($testAd) {
    echo "  –û–±—ä—è–≤–ª–µ–Ω–∏–µ ID: " . $testAd->id . "\n";
    echo "  –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ schedule_notes: ";
    
    if ($testAd->schedule_notes === null) {
        echo "NULL (–ø—É—Å—Ç–æ)\n";
    } else {
        echo "'" . $testAd->schedule_notes . "'\n";
    }
    
    // –ü—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    $testText = "–¢–µ—Å—Ç–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä–∞—Ñ–∏–∫–µ —Ä–∞–±–æ—Ç—ã - " . date('Y-m-d H:i:s');
    $testAd->schedule_notes = $testText;
    
    try {
        $testAd->save();
        echo "\n  ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!\n";
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
        $testAd->refresh();
        if ($testAd->schedule_notes === $testText) {
            echo "  ‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î\n";
        } else {
            echo "  ‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n";
        }
    } catch (\Exception $e) {
        echo "\n  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: " . $e->getMessage() . "\n";
    }
} else {
    echo "  ‚ùå –ù–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n";
}

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend -> backend flow
echo "\nüîÑ –ü–†–û–í–ï–†–ö–ê –ü–û–¢–û–ö–ê –î–ê–ù–ù–´–•:\n";
echo "  Frontend (ScheduleSection.vue):\n";
echo "    ‚Ä¢ v-model=\"localNotes\" - –ø—Ä–∏–≤—è–∑–∫–∞ –∫ textarea ‚úÖ\n";
echo "    ‚Ä¢ @update:modelValue=\"emitNotes\" - –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π ‚úÖ\n";
echo "    ‚Ä¢ emit('update:scheduleNotes', value) - —ç–º–∏—Ç —Å–æ–±—ã—Ç–∏—è ‚úÖ\n";
echo "\n  Frontend (AdForm.vue):\n";
echo "    ‚Ä¢ v-model:schedule-notes=\"form.schedule_notes\" - –ø—Ä–∏–µ–º –¥–∞–Ω–Ω—ã—Ö ‚úÖ\n";
echo "    ‚Ä¢ form.schedule_notes –≤ —Å–µ–∫—Ü–∏–∏ schedule ‚úÖ\n";
echo "\n  Backend (formDataBuilder.ts):\n";
echo "    ‚Ä¢ schedule_notes –¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ FormData\n";

echo "\n" . str_repeat("=", 60) . "\n";
if ($hasScheduleNotes && in_array('schedule_notes', $fillable)) {
    echo "‚úÖ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ì–û–¢–û–í–ê –ö –°–û–•–†–ê–ù–ï–ù–ò–Æ schedule_notes\n";
    echo "‚ùì –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å frontend\n";
} else {
    echo "‚ùå –ü–†–û–ë–õ–ï–ú–ê –í –ë–ê–ó–ï –î–ê–ù–ù–´–• –ò–õ–ò –ú–û–î–ï–õ–ò\n";
}