var t={d:(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{U:()=>W});function r(t,e,r={}){const n={type:"Feature"};return(0===r.id||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=e||{},n.geometry=t,n}function n(t,e,n={}){return o(t.map((t=>function(t,e,n={}){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!i(t[0])||!i(t[1]))throw new Error("coordinates must contain numbers");return r({type:"Point",coordinates:t},e,n)}(t,e))),n)}function o(t,e={}){const r={type:"FeatureCollection"};return e.id&&(r.id=e.id),e.bbox&&(r.bbox=e.bbox),r.features=t,r}function i(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}Math.PI;const s=11102230246251565e-32,a=134217729,u=(3+8*s)*s;function l(t,e,r,n,o){let i,s,a,u,l=e[0],c=n[0],h=0,f=0;c>l==c>-l?(i=l,l=e[++h]):(i=c,c=n[++f]);let p=0;if(h<t&&f<r)for(c>l==c>-l?(s=l+i,a=i-(s-l),l=e[++h]):(s=c+i,a=i-(s-c),c=n[++f]),i=s,0!==a&&(o[p++]=a);h<t&&f<r;)c>l==c>-l?(s=i+l,u=s-i,a=i-(s-u)+(l-u),l=e[++h]):(s=i+c,u=s-i,a=i-(s-u)+(c-u),c=n[++f]),i=s,0!==a&&(o[p++]=a);for(;h<t;)s=i+l,u=s-i,a=i-(s-u)+(l-u),l=e[++h],i=s,0!==a&&(o[p++]=a);for(;f<r;)s=i+c,u=s-i,a=i-(s-u)+(c-u),c=n[++f],i=s,0!==a&&(o[p++]=a);return 0===i&&0!==p||(o[p++]=i),p}function c(t){return new Float64Array(t)}const h=c(4),f=c(8),p=c(12),d=c(16),y=c(4);function g(t,e,r,n,o,i){const s=(e-i)*(r-o),c=(t-o)*(n-i),g=s-c,m=Math.abs(s+c);return Math.abs(g)>=33306690738754716e-32*m?g:-function(t,e,r,n,o,i,s){let c,g,m,E,_,b,w,P,v,C,S,M,x,A,L,N,F,W;const k=t-o,U=r-o,G=e-i,q=n-i;A=k*q,b=a*k,w=b-(b-k),P=k-w,b=a*q,v=b-(b-q),C=q-v,L=P*C-(A-w*v-P*v-w*C),N=G*U,b=a*G,w=b-(b-G),P=G-w,b=a*U,v=b-(b-U),C=U-v,F=P*C-(N-w*v-P*v-w*C),S=L-F,_=L-S,h[0]=L-(S+_)+(_-F),M=A+S,_=M-A,x=A-(M-_)+(S-_),S=x-N,_=x-S,h[1]=x-(S+_)+(_-N),W=M+S,_=W-M,h[2]=M-(W-_)+(S-_),h[3]=W;let O=function(t,e){let r=e[0];for(let t=1;t<4;t++)r+=e[t];return r}(0,h),j=22204460492503146e-32*s;if(O>=j||-O>=j)return O;if(_=t-k,c=t-(k+_)+(_-o),_=r-U,m=r-(U+_)+(_-o),_=e-G,g=e-(G+_)+(_-i),_=n-q,E=n-(q+_)+(_-i),0===c&&0===g&&0===m&&0===E)return O;if(j=11093356479670487e-47*s+u*Math.abs(O),O+=k*E+q*c-(G*m+U*g),O>=j||-O>=j)return O;A=c*q,b=a*c,w=b-(b-c),P=c-w,b=a*q,v=b-(b-q),C=q-v,L=P*C-(A-w*v-P*v-w*C),N=g*U,b=a*g,w=b-(b-g),P=g-w,b=a*U,v=b-(b-U),C=U-v,F=P*C-(N-w*v-P*v-w*C),S=L-F,_=L-S,y[0]=L-(S+_)+(_-F),M=A+S,_=M-A,x=A-(M-_)+(S-_),S=x-N,_=x-S,y[1]=x-(S+_)+(_-N),W=M+S,_=W-M,y[2]=M-(W-_)+(S-_),y[3]=W;const Y=l(4,h,4,y,f);A=k*E,b=a*k,w=b-(b-k),P=k-w,b=a*E,v=b-(b-E),C=E-v,L=P*C-(A-w*v-P*v-w*C),N=G*m,b=a*G,w=b-(b-G),P=G-w,b=a*m,v=b-(b-m),C=m-v,F=P*C-(N-w*v-P*v-w*C),S=L-F,_=L-S,y[0]=L-(S+_)+(_-F),M=A+S,_=M-A,x=A-(M-_)+(S-_),S=x-N,_=x-S,y[1]=x-(S+_)+(_-N),W=M+S,_=W-M,y[2]=M-(W-_)+(S-_),y[3]=W;const D=l(Y,f,4,y,p);A=c*E,b=a*c,w=b-(b-c),P=c-w,b=a*E,v=b-(b-E),C=E-v,L=P*C-(A-w*v-P*v-w*C),N=g*m,b=a*g,w=b-(b-g),P=g-w,b=a*m,v=b-(b-m),C=m-v,F=P*C-(N-w*v-P*v-w*C),S=L-F,_=L-S,y[0]=L-(S+_)+(_-F),M=A+S,_=M-A,x=A-(M-_)+(S-_),S=x-N,_=x-S,y[1]=x-(S+_)+(_-N),W=M+S,_=W-M,y[2]=M-(W-_)+(S-_),y[3]=W;const I=l(D,p,4,y,d);return d[I-1]}(t,e,r,n,o,i,m)}function m(t,e){var r,n,o,i,s,a,u,l,c,h=0,f=t[0],p=t[1],d=e.length;for(r=0;r<d;r++){n=0;var y=e[r],m=y.length-1;if((l=y[0])[0]!==y[m][0]&&l[1]!==y[m][1])throw new Error("First and last coordinates in a ring must be the same");for(i=l[0]-f,s=l[1]-p;n<m;n++){if(a=(c=y[n+1])[0]-f,u=c[1]-p,0===s&&0===u){if(a<=0&&i>=0||i<=0&&a>=0)return 0}else if(u>=0&&s<=0||u<=0&&s>=0){if(0===(o=g(i,a,s,u,0,0)))return 0;(o>0&&u>0&&s<=0||o<0&&u<=0&&s>0)&&h++}l=c,s=u,i=a}}return h%2!=0}function E(t,e,r={}){if(!t)throw new Error("point is required");if(!e)throw new Error("polygon is required");const n=function(t){if(!t)throw new Error("coord is required");if(!Array.isArray(t)){if("Feature"===t.type&&null!==t.geometry&&"Point"===t.geometry.type)return[...t.geometry.coordinates];if("Point"===t.type)return[...t.coordinates]}if(Array.isArray(t)&&t.length>=2&&!Array.isArray(t[0])&&!Array.isArray(t[1]))return[...t];throw new Error("coord must be GeoJSON Point or an Array of numbers")}(t),o="Feature"===(i=e).type?i.geometry:i;var i;const s=o.type,a=e.bbox;let u=o.coordinates;if(a&&!1===function(t,e){return e[0]<=t[0]&&e[1]<=t[1]&&e[2]>=t[0]&&e[3]>=t[1]}(n,a))return!1;"Polygon"===s&&(u=[u]);let l=!1;for(var c=0;c<u.length;++c){const t=m(n,u[c]);if(0===t)return!r.ignoreBoundary;t&&(l=!0)}return l}function _(t,e,r){if(null!==t)for(var n,o,i,s,a,u,l,c,h=0,f=0,p=t.type,d="FeatureCollection"===p,y="Feature"===p,g=d?t.features.length:1,m=0;m<g;m++){a=(c=!!(l=d?t.features[m].geometry:y?t.geometry:t)&&"GeometryCollection"===l.type)?l.geometries.length:1;for(var E=0;E<a;E++){var b=0,w=0;if(null!==(s=c?l.geometries[E]:l)){u=s.coordinates;var P=s.type;switch(h=!r||"Polygon"!==P&&"MultiPolygon"!==P?0:1,P){case null:break;case"Point":if(!1===e(u,f,m,b,w))return!1;f++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<u.length;n++){if(!1===e(u[n],f,m,b,w))return!1;f++,"MultiPoint"===P&&b++}"LineString"===P&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<u.length;n++){for(o=0;o<u[n].length-h;o++){if(!1===e(u[n][o],f,m,b,w))return!1;f++}"MultiLineString"===P&&b++,"Polygon"===P&&w++}"Polygon"===P&&b++;break;case"MultiPolygon":for(n=0;n<u.length;n++){for(w=0,o=0;o<u[n].length;o++){for(i=0;i<u[n][o].length-h;i++){if(!1===e(u[n][o][i],f,m,b,w))return!1;f++}w++}b++}break;case"GeometryCollection":for(n=0;n<s.geometries.length;n++)if(!1===_(s.geometries[n],e,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function b(t,e){var r,n,o,i,s,a,u,l,c,h,f=0,p="FeatureCollection"===t.type,d="Feature"===t.type,y=p?t.features.length:1;for(r=0;r<y;r++){for(a=p?t.features[r].geometry:d?t.geometry:t,l=p?t.features[r].properties:d?t.properties:{},c=p?t.features[r].bbox:d?t.bbox:void 0,h=p?t.features[r].id:d?t.id:void 0,s=(u=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,o=0;o<s;o++)if(null!==(i=u?a.geometries[o]:a))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===e(i,f,l,c,h))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===e(i.geometries[n],f,l,c,h))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===e(null,f,l,c,h))return!1;f++}}function w(t,e){const n=[];return function(t,e){if("Feature"===t.type)e(t,0);else if("FeatureCollection"===t.type)for(var r=0;r<t.features.length&&!1!==e(t.features[r],r);r++);}(t,(function(t){let o=!1;if("Point"===t.geometry.type)b(e,(function(e){E(t,e)&&(o=!0)})),o&&n.push(t);else{if("MultiPoint"!==t.geometry.type)throw new Error("Input geometry must be a Point or MultiPoint");var i=[];b(e,(function(e){_(t,(function(t){E(t,e)&&(o=!0,i.push(t))}))})),o&&n.push(function(t,e,n={}){return r({type:"MultiPoint",coordinates:t},e,n)}(i,t.properties))}})),o(n)}function P(t,e={}){if(null!=t.bbox&&!0!==e.recompute)return t.bbox;const r=[1/0,1/0,-1/0,-1/0];return _(t,(t=>{r[0]>t[0]&&(r[0]=t[0]),r[1]>t[1]&&(r[1]=t[1]),r[2]<t[0]&&(r[2]=t[0]),r[3]<t[1]&&(r[3]=t[1])})),r}c(4),c(4),c(4),c(4),c(4),c(4),c(4),c(4),c(4),c(8),c(8),c(8),c(4),c(8),c(8),c(8),c(12),c(192),c(192),c(4),c(4),c(4),c(4),c(4),c(4),c(4),c(4),c(8),c(8),c(8),c(8),c(8),c(8),c(8),c(8),c(8),c(4),c(4),c(4),c(8),c(16),c(16),c(16),c(32),c(32),c(48),c(64),c(1152),c(1152),c(4),c(4),c(4),c(4),c(4),c(4),c(4),c(4),c(4),c(4),c(24),c(24),c(24),c(24),c(24),c(24),c(24),c(24),c(24),c(24),c(1152),c(1152),c(1152),c(1152),c(1152),c(2304),c(2304),c(3456),c(5760),c(8),c(8),c(8),c(16),c(24),c(48),c(48),c(96),c(192),c(384),c(384),c(384),c(768),c(96),c(96),c(96),c(1152);const v=t=>t[3],C=t=>t[1],S=t=>t[2],M=t=>t[0];function x(t,e){const o=P(n(t)),i=P(function(t,e,n={}){if(t.length<2)throw new Error("coordinates must be an array of two or more positions");return r({type:"LineString",coordinates:t},e,n)}(e)),s=v(o)+1,a=S(o)+1,u=C(o)-1,l=M(o)-1,c=v(i),h=S(i),f=C(i),p=M(i),d=(t=>(S(t)+M(t))/2)(i),y=(t=>(v(t)+C(t))/2)(i),g={NNE:[[d,s],[a,s],[h,c],[d,c],[d,s]],ENE:[[h,c],[a,s],[a,y],[h,y],[h,c]],ESE:[[h,y],[a,y],[a,u],[h,f],[h,y]],SSE:[[d,f],[h,f],[a,u],[d,u],[d,f]],SSW:[[p,f],[d,f],[d,u],[l,u],[p,f]],WSW:[[l,y],[p,y],[p,f],[l,u],[l,y]],WNW:[[l,s],[p,c],[p,y],[l,y],[l,s]],NNW:[[l,s],[d,s],[d,c],[p,c],[l,s]]};return Object.keys(g).reduce(((t,e)=>(t[e]=function(t,e,n={}){for(const e of t){if(e.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(e[e.length-1].length!==e[0].length)throw new Error("First and last Position are not equivalent.");for(let t=0;t<e[e.length-1].length;t++)if(e[e.length-1][t]!==e[0][t])throw new Error("First and last Position are not equivalent.")}return r({type:"Polygon",coordinates:t},e,n)}([g[e]]),t)),{})}const A={props:{points:Array}};class L extends ymaps3.YMapComplexEntity{_onAttach(){this._containerElement=document.createElement("div"),this._containerElement.classList.add("ymaps3-signpost-control",this._props.direction),this._countElement=document.createElement("div"),this._countElement.classList.add("ymaps3-signpost-control__count"),this._countElement.textContent=this._props.count.toString(),this._containerElement.classList.toggle("ymaps3-signpost-control_hidden",0===this._props.count),this._containerElement.appendChild(this._countElement),this._arrowElement=document.createElement("div"),this._arrowElement.classList.add("ymaps3-signpost-control__arrow"),this._containerElement.appendChild(this._arrowElement),this.root.container.appendChild(this._containerElement)}_onUpdate(t){void 0!==t.count&&(this._countElement.textContent=this._props.count.toString(),this._containerElement.classList.toggle("ymaps3-signpost-control_hidden",0===this._props.count))}_onDetach(){this.root.container.removeChild(this._containerElement)}}var N;const F=["NNE","ENE","ESE","SSE","SSW","WSW","WNW","NNW"];class W extends ymaps3.YMapComplexEntity{constructor(){super(...arguments),this._onMapUpdate=()=>{this._updateControls()}}_onAttach(){this._mapListener=new ymaps3.YMapListener({onUpdate:this._onMapUpdate}),this.addChild(this._mapListener);const t=this._getCounts();this._controls=F.reduce(((e,r)=>{const n=new L({direction:r,count:t[r]});return this.addChild(n),e[r]=n,e}),{})}_onUpdate(t){void 0!==t.points&&this._updateControls()}_onDetach(){this.removeChild(this._mapListener),Object.values(this._controls).forEach((t=>{this.removeChild(t)}))}_updateControls(){const t=this._getCounts();F.forEach((e=>{this._controls[e].update({count:t[e]})}))}_getCounts(){const t=x(this._props.points,this.root.bounds),e=n(this._props.points);return F.reduce(((r,n)=>(r[n]=w(e,t[n]).features.length,r)),{})}}N=ymaps3.optionsKeyVuefy,W[N]=A;var k=e.U;export{k as YMapSignpost};