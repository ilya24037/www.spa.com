#!/usr/bin/env node

/**
 * üóëÔ∏è –ê–ù–ê–õ–ò–ó–ê–¢–û–† LEGACY –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –î–õ–Ø –ë–ï–ó–û–ü–ê–°–ù–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø
 * 
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ–µ–∫—Ç –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–µ—Ç
 * –ø–ª–∞–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è legacy —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ FSD + TypeScript
 */

import fs from 'fs'
import path from 'path'
import { execSync } from 'child_process'
import { fileURLToPath } from 'url'

const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)

// üîß –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
const CONFIG = {
  projectRoot: process.cwd(),
  
  // –ü—É—Ç–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
  paths: {
    legacy: 'resources/js/Components',
    fsd: 'resources/js/src',
    pages: 'resources/js/Pages'
  },
  
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏
  ignore: [
    'node_modules',
    '.git', 
    'dist',
    'vendor',
    '.nuxt',
    '.output'
  ],
  
  // –†–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
  extensions: ['.vue', '.js', '.ts', '.jsx', '.tsx'],
  
  // –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (—É–∂–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã)
  migratedComponents: [
    'MediaUploader',
    'BookingForm', 
    'MasterCard',
    'AdCard',
    'ItemCard',
    'PhoneModal',
    'BookingModal',
    'BookingWidget',
    'AdCardListItem',
    'BookingSuccessModal'
  ]
}

// üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê
const analysisResults = {
  legacyComponents: [],
  fsdComponents: [],
  duplicates: [],
  safeToDelete: [],
  requiresManualReview: [],
  usageMap: new Map(),
  importMap: new Map(),
  statistics: {
    totalLegacyFiles: 0,
    totalFsdFiles: 0,
    duplicatesFound: 0,
    safeDeletes: 0,
    manualReviews: 0
  }
}

// üîç –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
 */
function getAllFiles(dir, files = []) {
  if (!fs.existsSync(dir)) return files
  
  const items = fs.readdirSync(dir)
  
  for (const item of items) {
    if (CONFIG.ignore.includes(item)) continue
    
    const fullPath = path.join(dir, item)
    const stat = fs.statSync(fullPath)
    
    if (stat.isDirectory()) {
      getAllFiles(fullPath, files)
    } else if (CONFIG.extensions.includes(path.extname(item))) {
      files.push(fullPath)
    }
  }
  
  return files
}

/**
 * –ò–∑–≤–ª–µ—á—å –∏–º—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏–∑ –ø—É—Ç–∏ —Ñ–∞–π–ª–∞
 */
function extractComponentName(filePath) {
  const basename = path.basename(filePath, path.extname(filePath))
  
  // –£–±–∏—Ä–∞–µ–º —Å—É—Ñ—Ñ–∏–∫—Å—ã —Ç–∏–ø–æ–≤
  return basename
    .replace(/\.(vue|js|ts|jsx|tsx)$/, '')
    .replace(/\.(types|test|spec|stories)$/, '')
}

/**
 * –ù–∞–π—Ç–∏ –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø—Ä–æ–µ–∫—Ç–µ
 */
function findComponentUsages(componentName) {
  const usages = []
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º ripgrep –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
    const grepCommand = `rg --type vue --type js --type ts -l "${componentName}" .`
    const result = execSync(grepCommand, { 
      cwd: CONFIG.projectRoot,
      encoding: 'utf8',
      stdio: 'pipe'
    })
    
    const files = result.trim().split('\n').filter(Boolean)
    
    for (const file of files) {
      if (fs.existsSync(file)) {
        const content = fs.readFileSync(file, 'utf8')
        
        // –ò—â–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–º–ø–æ—Ä—Ç–æ–≤
        const importPatterns = [
          new RegExp(`import.*${componentName}.*from`, 'gm'),
          new RegExp(`import.*\\{.*${componentName}.*\\}`, 'gm'),
          new RegExp(`<${componentName}[\\s>]`, 'gm'),
          new RegExp(`components:\\s*\\{[^}]*${componentName}`, 'gm')
        ]
        
        for (const pattern of importPatterns) {
          const matches = content.match(pattern)
          if (matches) {
            usages.push({
              file,
              matches: matches.length,
              patterns: matches
            })
            break
          }
        }
      }
    }
  } catch (error) {
    // Fallback: –ø—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º
    console.warn(`‚ö†Ô∏è  Ripgrep –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –ø–æ–∏—Å–∫ –¥–ª—è ${componentName}`)
  }
  
  return usages
}

/**
 * –ê–Ω–∞–ª–∏–∑ legacy –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 */
function analyzeLegacyComponents() {
  console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º legacy –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã...')
  
  const legacyPath = path.join(CONFIG.projectRoot, CONFIG.paths.legacy)
  const legacyFiles = getAllFiles(legacyPath)
  
  analysisResults.statistics.totalLegacyFiles = legacyFiles.length
  
  for (const file of legacyFiles) {
    const componentName = extractComponentName(file)
    const relativePath = path.relative(CONFIG.projectRoot, file)
    
    const component = {
      name: componentName,
      path: relativePath,
      fullPath: file,
      size: fs.statSync(file).size,
      lastModified: fs.statSync(file).mtime,
      isTypeScript: file.endsWith('.ts') || file.endsWith('.tsx'),
      usages: findComponentUsages(componentName)
    }
    
    analysisResults.legacyComponents.push(component)
    analysisResults.usageMap.set(componentName, component.usages)
  }
  
  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${legacyFiles.length} legacy –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤`)
}

/**
 * –ê–Ω–∞–ª–∏–∑ FSD –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 */
function analyzeFsdComponents() {
  console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º FSD –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã...')
  
  const fsdPath = path.join(CONFIG.projectRoot, CONFIG.paths.fsd)
  const fsdFiles = getAllFiles(fsdPath)
  
  analysisResults.statistics.totalFsdFiles = fsdFiles.length
  
  for (const file of fsdFiles) {
    const componentName = extractComponentName(file)
    const relativePath = path.relative(CONFIG.projectRoot, file)
    
    const component = {
      name: componentName,
      path: relativePath,
      fullPath: file,
      size: fs.statSync(file).size,
      lastModified: fs.statSync(file).mtime,
      isTypeScript: file.endsWith('.ts') || file.endsWith('.tsx'),
      layer: getFsdLayer(relativePath),
      slice: getFsdSlice(relativePath)
    }
    
    analysisResults.fsdComponents.push(component)
  }
  
  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${fsdFiles.length} FSD –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤`)
}

/**
 * –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å FSD —Å–ª–æ–π –∏–∑ –ø—É—Ç–∏
 */
function getFsdLayer(filePath) {
  const layers = ['shared', 'entities', 'features', 'widgets', 'pages']
  for (const layer of layers) {
    if (filePath.includes(`/${layer}/`)) return layer
  }
  return 'unknown'
}

/**
 * –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å FSD —Å—Ä–µ–∑ –∏–∑ –ø—É—Ç–∏
 */
function getFsdSlice(filePath) {
  const match = filePath.match(/\/(?:entities|features|widgets)\/([^\/]+)\//)
  return match ? match[1] : null
}

/**
 * –ü–æ–∏—Å–∫ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –º–µ–∂–¥—É legacy –∏ FSD
 */
function findDuplicates() {
  console.log('üîç –ò—â–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...')
  
  const legacyNames = new Set(analysisResults.legacyComponents.map(c => c.name))
  const fsdNames = new Set(analysisResults.fsdComponents.map(c => c.name))
  
  for (const legacyName of legacyNames) {
    if (fsdNames.has(legacyName) || CONFIG.migratedComponents.includes(legacyName)) {
      const legacyComponent = analysisResults.legacyComponents.find(c => c.name === legacyName)
      const fsdComponent = analysisResults.fsdComponents.find(c => c.name === legacyName)
      
      const duplicate = {
        name: legacyName,
        legacy: legacyComponent,
        fsd: fsdComponent,
        isMigrated: CONFIG.migratedComponents.includes(legacyName),
        hasUsages: legacyComponent.usages.length > 0,
        riskLevel: calculateRiskLevel(legacyComponent)
      }
      
      analysisResults.duplicates.push(duplicate)
    }
  }
  
  analysisResults.statistics.duplicatesFound = analysisResults.duplicates.length
  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${analysisResults.duplicates.length} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤`)
}

/**
 * –†–∞—Å—á–µ—Ç —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
 */
function calculateRiskLevel(component) {
  let risk = 'low'
  
  if (component.usages.length > 10) risk = 'high'
  else if (component.usages.length > 3) risk = 'medium'
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞
  if (component.name.toLowerCase().includes('modal')) risk = 'medium'
  if (component.name.toLowerCase().includes('form')) risk = 'high'
  if (component.size > 10000) risk = 'medium' // –ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã
  
  return risk
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
 */
function createDeletionPlan() {
  console.log('üìã –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω —É–¥–∞–ª–µ–Ω–∏—è...')
  
  for (const duplicate of analysisResults.duplicates) {
    if (duplicate.riskLevel === 'low' && duplicate.isMigrated) {
      analysisResults.safeToDelete.push({
        ...duplicate,
        reason: '–ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ FSD, –Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫'
      })
    } else {
      analysisResults.requiresManualReview.push({
        ...duplicate,
        reason: `–¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: ${duplicate.riskLevel} —Ä–∏—Å–∫, ${duplicate.legacy.usages.length} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π`
      })
    }
  }
  
  analysisResults.statistics.safeDeletes = analysisResults.safeToDelete.length
  analysisResults.statistics.manualReviews = analysisResults.requiresManualReview.length
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
 */
function generateReport() {
  const report = {
    timestamp: new Date().toISOString(),
    summary: {
      totalLegacyComponents: analysisResults.statistics.totalLegacyFiles,
      totalFsdComponents: analysisResults.statistics.totalFsdFiles,
      duplicatesFound: analysisResults.statistics.duplicatesFound,
      safeToDelete: analysisResults.statistics.safeDeletes,
      requiresManualReview: analysisResults.statistics.manualReviews
    },
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    safeToDelete: analysisResults.safeToDelete.map(item => ({
      name: item.name,
      legacyPath: item.legacy.path,
      fsdPath: item.fsd?.path,
      reason: item.reason,
      usages: item.legacy.usages.length,
      size: `${(item.legacy.size / 1024).toFixed(1)}KB`
    })),
    
    // –¢—Ä–µ–±—É—é—Ç —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    manualReview: analysisResults.requiresManualReview.map(item => ({
      name: item.name,
      legacyPath: item.legacy.path,
      fsdPath: item.fsd?.path,
      reason: item.reason,
      riskLevel: item.riskLevel,
      usages: item.legacy.usages.length,
      usageFiles: item.legacy.usages.map(u => u.file),
      size: `${(item.legacy.size / 1024).toFixed(1)}KB`,
      lastModified: item.legacy.lastModified
    })),
    
    // –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    detailedStats: {
      legacyBySize: analysisResults.legacyComponents
        .sort((a, b) => b.size - a.size)
        .slice(0, 10)
        .map(c => ({
          name: c.name,
          path: c.path,
          size: `${(c.size / 1024).toFixed(1)}KB`
        })),
      
      mostUsedComponents: analysisResults.legacyComponents
        .sort((a, b) => b.usages.length - a.usages.length)
        .slice(0, 10)
        .map(c => ({
          name: c.name,
          path: c.path,
          usages: c.usages.length
        }))
    }
  }
  
  return report
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ bash —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
 */
function createDeletionScript(report) {
  const scriptLines = [
    '#!/bin/bash',
    '# üóëÔ∏è –°–ö–†–ò–ü–¢ –ë–ï–ó–û–ü–ê–°–ù–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø LEGACY –ö–û–ú–ü–û–ù–ï–ù–¢–û–í',
    '# –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–º –¥—É–±–ª–∏–∫–∞—Ç–æ–≤',
    '',
    `# –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date().toLocaleString('ru-RU')}`,
    `# –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ${report.summary.duplicatesFound}`,
    `# –ë–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª–∏—Ç—å: ${report.summary.safeToDelete}`,
    `# –¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: ${report.summary.requiresManualReview}`,
    '',
    'echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ legacy –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."',
    'echo ""',
    '',
    '# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é',
    'echo "üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é..."',
    `BACKUP_DIR="backup-legacy-$(date +%Y%m%d-%H%M%S)"`,
    'mkdir -p "$BACKUP_DIR"',
    '',
    '# –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è',
    'safe_delete() {',
    '  local file="$1"',
    '  local reason="$2"',
    '  ',
    '  if [ -f "$file" ]; then',
    '    echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º: $file ($reason)"',
    '    cp "$file" "$BACKUP_DIR/"',
    '    rm "$file"',
    '  else',
    '    echo "‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"',
    '  fi',
    '}',
    '',
    '# –ë–ï–ó–û–ü–ê–°–ù–´–ï –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø –§–ê–ô–õ–´',
    'echo "üü¢ –£–¥–∞–ª—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ–∞–π–ª—ã..."',
    ''
  ]
  
  // –î–æ–±–∞–≤–ª—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ–∞–π–ª—ã
  for (const item of report.safeToDelete) {
    scriptLines.push(`safe_delete "${item.legacyPath}" "${item.reason}"`)
  }
  
  scriptLines.push(
    '',
    '# –§–ê–ô–õ–´ –¢–†–ï–ë–£–Æ–©–ò–ï –†–£–ß–ù–û–ô –ü–†–û–í–ï–†–ö–ò (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã)',
    'echo ""',
    'echo "‚ö†Ô∏è  –°–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã —Ç—Ä–µ–±—É—é—Ç —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏:"',
    ''
  )
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏)
  for (const item of report.manualReview) {
    scriptLines.push(`echo "‚ùå –ü–†–û–í–ï–†–ò–¢–¨: ${item.legacyPath} (${item.reason})"`)
    scriptLines.push(`# safe_delete "${item.legacyPath}" "${item.reason}"`)
  }
  
  scriptLines.push(
    '',
    'echo ""',
    'echo "‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"',
    'echo "üìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: $BACKUP_DIR"',
    'echo "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã, –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"',
    ''
  )
  
  return scriptLines.join('\n')
}

// üöÄ –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ legacy –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...')
  console.log(`üìÅ –ü—Ä–æ–µ–∫—Ç: ${CONFIG.projectRoot}`)
  console.log('')
  
  try {
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    analyzeLegacyComponents()
    analyzeFsdComponents()
    
    // –ò—â–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    findDuplicates()
    
    // –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω —É–¥–∞–ª–µ–Ω–∏—è
    createDeletionPlan()
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    const report = generateReport()
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    const reportPath = path.join(CONFIG.projectRoot, 'deletion-analysis-report.json')
    fs.writeFileSync(reportPath, JSON.stringify(report, null, 2))
    
    // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–µ–Ω–∏—è
    const script = createDeletionScript(report)
    const scriptPath = path.join(CONFIG.projectRoot, 'safe-delete-legacy.sh')
    fs.writeFileSync(scriptPath, script)
    fs.chmodSync(scriptPath, '755')
    
    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('')
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:')
    console.log('=====================================')
    console.log(`üìÅ Legacy –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: ${report.summary.totalLegacyComponents}`)
    console.log(`üéØ FSD –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: ${report.summary.totalFsdComponents}`)
    console.log(`üîÑ –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ${report.summary.duplicatesFound}`)
    console.log(`‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª–∏—Ç—å: ${report.summary.safeToDelete}`)
    console.log(`‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: ${report.summary.requiresManualReview}`)
    console.log('')
    console.log('üìÑ –°–û–ó–î–ê–ù–ù–´–ï –§–ê–ô–õ–´:')
    console.log(`üìã –û—Ç—á–µ—Ç: ${reportPath}`)
    console.log(`üî® –°–∫—Ä–∏–ø—Ç —É–¥–∞–ª–µ–Ω–∏—è: ${scriptPath}`)
    console.log('')
    console.log('üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:')
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—á–µ—Ç deletion-analysis-report.json')
    console.log('2. –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã, —Ç—Ä–µ–±—É—é—â–∏–µ —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏')
    console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./safe-delete-legacy.sh –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è')
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ:', error.message)
    process.exit(1)
  }
}

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ main —Ñ—É–Ω–∫—Ü–∏–∏
main().catch(console.error)

export {
  analyzeLegacyComponents,
  analyzeFsdComponents,
  findDuplicates,
  generateReport,
  CONFIG
}