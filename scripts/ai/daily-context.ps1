# Daily Context Generator - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–Ω—è
# –ü—Ä–∏–º–µ–Ω—è–µ—Ç –≤—Å–µ 5 —Ö–∞–∫–æ–≤ –∏–∑ —Å—Ç–∞—Ç—å–∏ –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏

param(
    [switch]$Silent = $false
)

$ErrorActionPreference = 'Stop'
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

$repoRoot = "C:\www.spa.com"
Set-Location $repoRoot

if (-not $Silent) {
    Write-Host "üìã –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–Ω—è..." -ForegroundColor Cyan
}

# –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
$date = Get-Date -Format "yyyy-MM-dd HH:mm"
$branch = git branch --show-current 2>$null
$uncommitted = @(git status --short 2>$null).Count
$lastCommit = git log -1 --pretty=format:"%h - %s (%cr)" 2>$null

# –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ TODO –∏–∑ —Ñ–∞–π–ª–æ–≤
$todos = @()
Get-ChildItem -Path @("app", "resources/js") -Include "*.php","*.vue","*.ts" -Recurse -ErrorAction SilentlyContinue | 
    Select-Object -First 20 |
    ForEach-Object {
        $content = Get-Content $_ -ErrorAction SilentlyContinue | Select-String "TODO:|FIXME:|HACK:" -Context 0,1
        if ($content) {
            $todos += "- $($_.Name): $($content.Line.Trim())"
        }
    }

# –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –≤—Å–µ—Ö —Ö–∞–∫–æ–≤
$context = @"
# üåÖ Daily Context - $date

## üìä Project State (Context Injection):
- **Branch**: ``$branch``
- **Uncommitted files**: $uncommitted
- **Last commit**: $lastCommit
- **Laravel**: 12.x | **Vue**: 3.x | **TypeScript**: Required

## üéØ Quick Start Commands:
``````
Ultrathink, –≤—Å–ø–æ–º–Ω–∏ CLAUDE.md –∏ AI_CONTEXT.md
``````

## üìù Active TODOs in code:
$(if ($todos) { $todos | Select-Object -First 5 | ForEach-Object { $_ } | Out-String } else { "No TODOs found" })

## ‚öì Today's Work Template (Structural Anchor):
1. Review CLAUDE.md architecture rules
2. Check current git status
3. Implement with TypeScript
4. Follow FSD/DDD structure
5. Test changes locally
6. Verify backward compatibility

## üß† Smart Reminders (Forced Injection):
- Architecture: Frontend FSD (entities/features/widgets)
- Architecture: Backend DDD (Domain/Application/Infrastructure)
- All Vue components need TypeScript interfaces
- Business logic belongs in Services, not Controllers

## üìã Summary Request Template:
When needed, ask: "–†–µ–∑—é–º–∏—Ä—É–π —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å"

## ‚ö†Ô∏è CRITICAL - LAST WORD (Most Important):
1. **MUST** use TypeScript for all new code
2. **NEVER** put logic in controllers
3. **ALWAYS** check: "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –æ—Ü–µ–Ω–∏ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É"
4. **FOLLOW** CLAUDE.md architecture strictly
5. **PRESERVE** backward compatibility always
"@

# –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
$context | Set-Clipboard

if (-not $Silent) {
    Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–Ω—è —Å–æ–∑–¥–∞–Ω –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìå –ß—Ç–æ –¥–µ–ª–∞—Ç—å:" -ForegroundColor Yellow
    Write-Host "1. –í—Å—Ç–∞–≤—å—Ç–µ –≤ Claude/Cursor (Ctrl+V)" -ForegroundColor White
    Write-Host "2. –ù–∞—á–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É!" -ForegroundColor White
}

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é
$contextFile = "storage\ai-sessions\daily\context_$(Get-Date -Format 'yyyy-MM-dd').md"
$dir = Split-Path $contextFile -Parent
if (-not (Test-Path $dir)) {
    New-Item -ItemType Directory -Path $dir -Force | Out-Null
}
$context | Out-File -FilePath $contextFile -Encoding UTF8

exit 0