# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è TypeScript –æ—à–∏–±–æ–∫
# –ê–≤—Ç–æ—Ä: AI Assistant –¥–ª—è SPA Platform

chcp 65001 > $null

Write-Host "üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï TYPESCRIPT –û–®–ò–ë–û–ö" -ForegroundColor Cyan
Write-Host "=" * 60 -ForegroundColor Gray

$ErrorActionPreference = "Stop"
$filesFixed = 0
$errorsFixed = 0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥
function Write-Log {
    param($Message, $Color = "White")
    Write-Host "$(Get-Date -Format 'HH:mm:ss') $Message" -ForegroundColor $Color
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ
function Fix-File {
    param($FilePath, $Replacements, $Description)
    
    if (Test-Path $FilePath) {
        $content = Get-Content $FilePath -Raw -Encoding UTF8
        $originalContent = $content
        $fileFixed = $false
        
        foreach ($replacement in $Replacements) {
            if ($content -match $replacement.Pattern) {
                $content = $content -replace $replacement.Pattern, $replacement.Replacement
                $fileFixed = $true
                $script:errorsFixed++
                Write-Log "  ‚úÖ $($replacement.Description)" -Color "Green"
            }
        }
        
        if ($fileFixed) {
            Set-Content $FilePath -Value $content -Encoding UTF8 -NoNewline
            $script:filesFixed++
            Write-Log "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù: $FilePath" -Color "Yellow"
        }
    }
}

Write-Log "üéØ –ù–∞—á–∏–Ω–∞–µ–º –º–∞—Å—Å–æ–≤–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫..."

# ============================================================================
# 1. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–• –ò–ú–ü–û–†–¢–û–í ref
# ============================================================================

Write-Log "üì¶ 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã ref..." -Color "Cyan"

$refFiles = @(
    "resources/js/src/entities/booking/ui/BookingModal/BookingModal.vue",
    "resources/js/src/entities/ad/ui/AdCard/AdCardListItem.vue",
    "resources/js/src/shared/ui/molecules/Breadcrumbs/useBreadcrumbs.ts",
    "resources/js/src/shared/ui/atoms/Skeleton/useSkeleton.ts",
    "resources/js/src/shared/ui/organisms/Cards/useCard.ts",
    "resources/js/src/shared/composables/useDebounce.ts",
    "resources/js/src/shared/composables/useLoadingState.ts",
    "resources/js/src/shared/composables/useLocalStorage.ts"
)

foreach ($file in $refFiles) {
    if (Test-Path $file) {
        $content = Get-Content $file -Raw -Encoding UTF8
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ ref –≤ –∏–º–ø–æ—Ä—Ç–µ
        if ($content -match "import\s*\{\s*([^}]*)\s*\}\s*from\s*[`"']vue[`"']" -and $content -notmatch "import\s*\{\s*[^}]*ref[^}]*\}\s*from\s*[`"']vue[`"']") {
            $content = $content -replace "import\s*\{\s*([^}]*)\s*\}\s*from\s*[`"']vue[`"']", "import { ref, `$1 } from 'vue'"
            Set-Content $file -Value $content -Encoding UTF8 -NoNewline
            $filesFixed++
            Write-Log "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω ref –∏–º–ø–æ—Ä—Ç: $file" -Color "Green"
        }
    }
}

# ============================================================================
# 2. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–• –ò–ú–ü–û–†–¢–û–í route
# ============================================================================

Write-Log "üì¶ 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã route..." -Color "Cyan"

$routeFiles = @(
    "resources/js/Pages/Auth/VerifyEmail.vue",
    "resources/js/src/features/auth/ui/AuthModal/AuthModal.vue", 
    "resources/js/src/features/auth/ui/RegisterModal/RegisterModal.vue"
)

foreach ($file in $routeFiles) {
    if (Test-Path $file) {
        $content = Get-Content $file -Raw -Encoding UTF8
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç route –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if ($content -match "import.*from.*@inertiajs/vue3" -and $content -notmatch "import.*route.*from.*ziggy-js") {
            $content = $content -replace "(import.*from\s*[`"']@inertiajs/vue3[`"'];?)", "`$1`nimport { route } from 'ziggy-js';"
            Set-Content $file -Value $content -Encoding UTF8 -NoNewline
            $filesFixed++
            Write-Log "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω route –∏–º–ø–æ—Ä—Ç: $file" -Color "Green"
        }
    }
}

# ============================================================================
# 3. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –¢–ò–ü–ò–ó–ê–¶–ò–ò –ü–ê–†–ê–ú–ï–¢–†–û–í –§–£–ù–ö–¶–ò–ô
# ============================================================================

Write-Log "üéØ 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø–∏–∑–∞—Ü–∏—é –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π..." -Color "Cyan"

$functionFiles = @(
    "resources/js/src/entities/master/model/masterStore.ts",
    "resources/js/src/entities/service/model/serviceStore.ts",
    "resources/js/src/entities/user/model/userStore.ts",
    "resources/js/src/features/booking/ui/BookingWidget/useBooking.ts",
    "resources/js/Pages/Bookings/Index.vue"
)

foreach ($file in $functionFiles) {
    if (Test-Path $file) {
        $content = Get-Content $file -Raw -Encoding UTF8
        $originalContent = $content
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ—É–Ω–∫—Ü–∏–π –±–µ–∑ —Ç–∏–ø–∏–∑–∞—Ü–∏–∏
        $content = $content -replace "(\w+)\s*=\s*async\s*\(\s*(\w+)\s*\)", "`$1 = async (`$2: any)"
        $content = $content -replace "(\w+)\s*=\s*async\s*\(\s*(\w+),\s*(\w+)\s*\)", "`$1 = async (`$2: any, `$3: any)"
        $content = $content -replace "(\w+)\s*=\s*\(\s*(\w+)\s*\)", "`$1 = (`$2: any)"
        $content = $content -replace "function\s+(\w+)\s*\(\s*(\w+)\s*\)", "function `$1(`$2: any)"
        
        if ($content -ne $originalContent) {
            Set-Content $file -Value $content -Encoding UTF8 -NoNewline
            $filesFixed++
            Write-Log "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ç–∏–ø–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: $file" -Color "Green"
        }
    }
}

# ============================================================================
# 4. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –í –ö–û–ù–ö–†–ï–¢–ù–´–• –§–ê–ô–õ–ê–•
# ============================================================================

Write-Log "üîß 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏..." -Color "Cyan"

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ resolve()
$bookingStoreFile = "resources/js/src/entities/booking/model/bookingStore.ts"
if (Test-Path $bookingStoreFile) {
    $content = Get-Content $bookingStoreFile -Raw -Encoding UTF8
    if ($content -match "resolve\(\)") {
        $content = $content -replace "resolve\(\)", "resolve(undefined)"
        Set-Content $bookingStoreFile -Value $content -Encoding UTF8 -NoNewline
        $filesFixed++
        Write-Log "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω resolve(): $bookingStoreFile" -Color "Green"
    }
}

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Input.vue
$inputFile = "resources/js/src/shared/ui/atoms/Input/Input.vue"
if (Test-Path $inputFile) {
    $content = Get-Content $inputFile -Raw -Encoding UTF8
    if ($content -match ":Readonly=") {
        $content = $content -replace ":Readonly=", ":readonly="
        Set-Content $inputFile -Value $content -Encoding UTF8 -NoNewline
        $filesFixed++
        Write-Log "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω Readonly: $inputFile" -Color "Green"
    }
}

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Modal –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
$modalFiles = @(
    "resources/js/src/shared/ui/molecules/Modal/AlertModal.vue",
    "resources/js/src/shared/ui/molecules/Modal/ConfirmModal.vue"
)

foreach ($file in $modalFiles) {
    if (Test-Path $file) {
        $content = Get-Content $file -Raw -Encoding UTF8
        if ($content -match 'variant="info"') {
            $content = $content -replace 'variant="info"', 'variant="primary"'
            Set-Content $file -Value $content -Encoding UTF8 -NoNewline
            $filesFixed++
            Write-Log "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω variant: $file" -Color "Green"
        }
    }
}

# ============================================================================
# 5. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –¢–ò–ü–ò–ó–ê–¶–ò–ò STORES
# ============================================================================

Write-Log "üìä 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ –≤ stores..." -Color "Cyan"

$storeFiles = Get-ChildItem -Path "resources/js/src/entities/*/model/*.ts" -Recurse
foreach ($file in $storeFiles) {
    $content = Get-Content $file.FullName -Raw -Encoding UTF8
    $originalContent = $content
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º error —Ç–∏–ø—ã
    $content = $content -replace "error:\s*Ref<Error\s*\|\s*null>", "error: Ref<string | null>"
    $content = $content -replace "catch\s*\(\s*(\w+)\s*\)\s*\{([^}]*?)error\.value\s*=\s*\1\.message", "catch (`$1) {`$2error.value = (`$1 as Error).message"
    
    if ($content -ne $originalContent) {
        Set-Content $file.FullName -Value $content -Encoding UTF8 -NoNewline
        $filesFixed++
        Write-Log "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —Ç–∏–ø—ã –≤ store: $($file.Name)" -Color "Green"
    }
}

# ============================================================================
# –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
# ============================================================================

Write-Log "`nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:" -Color "Cyan"
Write-Log "=" * 40 -Color "Gray"
Write-Log "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $filesFixed" -Color "Green"

if ($filesFixed -gt 0) {
    Write-Log "`nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É TypeScript..." -Color "Yellow"
    
    try {
        npm run build
        if ($LASTEXITCODE -eq 0) {
            Write-Log "‚úÖ –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!" -Color "Green"
        } else {
            Write-Log "‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å –æ—à–∏–±–∫–∏, –Ω–æ –∏—Ö —Å—Ç–∞–ª–æ –º–µ–Ω—å—à–µ." -Color "Yellow"
        }
    } catch {
        Write-Log "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–±–æ—Ä–∫–∏: $_" -Color "Red"
    }
} else {
    Write-Log "‚ÑπÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è." -Color "Blue"
}

Write-Log "`nüéâ –°–ö–†–ò–ü–¢ –ó–ê–í–ï–†–®–ï–ù!" -Color "Green"