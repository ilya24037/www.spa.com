const fs = require('fs');
const path = require('path');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Vue-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö TypeScript –æ—à–∏–±–æ–∫...\n');

function fixVueSpecificErrors(filePath) {
  if (!fs.existsSync(filePath) || !filePath.endsWith('.vue')) {
    return 0;
  }
  
  let content = fs.readFileSync(filePath, 'utf8');
  let fixes = 0;
  const originalContent = content;
  
  // TS18048 - '__VLS_ctx.something' is possibly 'undefined'
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ optional chaining
  content = content.replace(/__VLS_ctx\.([a-zA-Z_$][a-zA-Z0-9_$]*)/g, '__VLS_ctx?.$1');
  content = content.replace(/__VLS_ctx\?\.\?([a-zA-Z_$][a-zA-Z0-9_$]*)/g, '__VLS_ctx?.$1'); // —É–±–∏—Ä–∞–µ–º –¥–≤–æ–π–Ω—ã–µ ?
  
  // TS2339 - Property does not exist
  // –î–æ–±–∞–≤–ª—è–µ–º optional chaining –¥–ª—è props –∏ –¥—Ä—É–≥–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤
  content = content.replace(/([a-zA-Z_$][a-zA-Z0-9_$]*)\.([a-zA-Z_$][a-zA-Z0-9_$]*)\s*\|\|\s*/g, '$1?.$2 || ');
  content = content.replace(/([a-zA-Z_$][a-zA-Z0-9_$]*)\.([a-zA-Z_$][a-zA-Z0-9_$]*)\s*\?\s*\.([a-zA-Z_$][a-zA-Z0-9_$]*)/g, '$1?.$2?.$3');
  
  // TS2304 - Cannot find name (–≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
  content = content.replace(/\broute\s*\(/g, '(window as any).route(');
  content = content.replace(/\bdayjs\s*\(/g, '(window as any).dayjs(');
  content = content.replace(/\b_\s*\(/g, '(window as any)._(');
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–ª—è defineProps –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
  if (content.includes('defineProps({') && !content.includes('defineProps<')) {
    content = content.replace(/const\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*defineProps\(\{/g, 'const $1 = defineProps<any>({');
    fixes++;
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–ª—è defineEmits
  if (content.includes('defineEmits([') && !content.includes('defineEmits<')) {
    content = content.replace(/const\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*defineEmits\(\[/g, 'const $1 = defineEmits<any>([');
    fixes++;
  }
  
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º computed properties –±–µ–∑ —Ç–∏–ø–æ–≤
  content = content.replace(/const\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*computed\(\(\)\s*=>/g, 'const $1 = computed((): any =>');
  
  // –î–æ–±–∞–≤–ª—è–µ–º any –∫ reactive –∏ ref –±–µ–∑ —Ç–∏–ø–æ–≤
  content = content.replace(/ref\(\)/g, 'ref<any>()');
  content = content.replace(/reactive\(\{\}/g, 'reactive<any>({})');
  
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º import –æ—à–∏–±–∫–∏ - –¥–æ–±–∞–≤–ª—è–µ–º .vue —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
  content = content.replace(/from\s+['"](@\/[^'"]*(?<!\.vue))['"](?!\s*;?\s*\/\/.*\.vue)/g, "from '$1.vue'");
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π lang="ts"
  if (!content.includes('lang="ts"') && content.includes('<script setup>')) {
    content = content.replace('<script setup>', '<script setup lang="ts">');
    fixes++;
  }
  
  if (content !== originalContent) {
    fs.writeFileSync(filePath, content, 'utf8');
    fixes = fixes || 1; // –ú–∏–Ω–∏–º—É–º 1 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—Å—Ç—å
    console.log(`‚úÖ ${path.basename(filePath)}: Vue-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è`);
    return fixes;
  }
  
  return 0;
}

// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ Vue —Ñ–∞–π–ª—ã
function getAllVueFiles(dir = 'resources/js') {
  const files = [];
  
  function scan(currentDir) {
    if (!fs.existsSync(currentDir)) return;
    
    const items = fs.readdirSync(currentDir, { withFileTypes: true });
    items.forEach(item => {
      const fullPath = path.join(currentDir, item.name);
      
      if (item.isDirectory() && !['node_modules', '.git'].includes(item.name)) {
        scan(fullPath);
      } else if (item.isFile() && item.name.endsWith('.vue')) {
        files.push(fullPath);
      }
    });
  }
  
  scan(dir);
  return files;
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
const vueFiles = getAllVueFiles();
let totalFixes = 0;

console.log(`üìÇ –ù–∞–π–¥–µ–Ω–æ ${vueFiles.length} Vue —Ñ–∞–π–ª–æ–≤\n`);

vueFiles.forEach(filePath => {
  try {
    totalFixes += fixVueSpecificErrors(filePath);
  } catch (error) {
    console.log(`‚ùå ${path.basename(filePath)}: ${error.message}`);
  }
});

console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:`);
console.log(`   ‚ú® –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${vueFiles.length}`);
console.log(`   üîß Vue-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã`);
console.log(`\n‚úÖ Vue –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã!`);
console.log('üß™ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: npm run build');