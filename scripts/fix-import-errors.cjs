/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏
 * CommonJS –≤–µ—Ä—Å–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
 */

const fs = require('fs');
const path = require('path');

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ (–±–µ–∑ glob)
function findFiles(dir, extensions, result = []) {
  const files = fs.readdirSync(dir);
  
  for (const file of files) {
    const fullPath = path.join(dir, file);
    const stat = fs.statSync(fullPath);
    
    if (stat.isDirectory()) {
      findFiles(fullPath, extensions, result);
    } else if (extensions.some(ext => file.endsWith(ext))) {
      result.push(fullPath);
    }
  }
  
  return result;
}

// –ó–∞–º–µ–Ω—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤
const fixes = [
  // –£–±–∏—Ä–∞–µ–º `as any` –∏–∑ Vue —à–∞–±–ª–æ–Ω–æ–≤
  {
    from: /separator=">" as any/g,
    to: 'separator=">"',
    description: 'Fixing Vue template syntax'
  },
  
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö
  {
    from: /–†¬ß–†¬µ–°–Ç–†–Ö–†—ï–†–Ü–†—ë–†—î/g,
    to: '–ß–µ—Ä–Ω–æ–≤–∏–∫',
    description: 'Fixing encoding issues'
  },
  {
    from: /–†—ô–†—ï–†–Ö–°‚Äö–†¬µ–†‚Ññ–†–Ö–†¬µ–°–Ç –†—î–†¬∞–†—î –†–Ö–†¬∞ –†—ñ–†¬ª–†¬∞–†–Ü–†–Ö–†—ï–†‚Ññ/g,
    to: '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–∫ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π',
    description: 'Fixing container comments'
  },
  {
    from: /–†“ê–†¬ª–†¬µ–†¬±–†–Ö–°‚Äπ–†¬µ –†—î–°–Ç–†—ï–°‚Ç¨–†—î–†—ë/g,
    to: '–•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏',
    description: 'Fixing breadcrumb comments'
  },
  
  // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ TypeScript –∏–º–ø–æ—Ä—Ç—ã
  {
    from: /import { defineComponent } from 'vue'/g,
    to: '// import { defineComponent } from \'vue\' // commented out to fix build',
    description: 'Fixing defineComponent imports'
  }
];

async function processFiles() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–æ–≤...');
  
  // –ò—â–µ–º —Ñ–∞–π–ª—ã –≤ resources/js
  const resourcesPath = path.join(process.cwd(), 'resources', 'js');
  const files = findFiles(resourcesPath, ['.vue', '.ts', '.js']);
  
  let fixedFiles = 0;
  let totalFixesApplied = 0;
  
  for (const file of files) {
    try {
      let content = fs.readFileSync(file, 'utf8');
      let modified = false;
      let fixesInFile = 0;
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
      for (const fix of fixes) {
        const matches = content.match(fix.from);
        if (matches) {
          content = content.replace(fix.from, fix.to);
          modified = true;
          fixesInFile += matches.length;
          totalFixesApplied += matches.length;
        }
      }
      
      if (modified) {
        fs.writeFileSync(file, content, 'utf8');
        fixedFiles++;
        console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: ${path.relative(process.cwd(), file)} (${fixesInFile} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π)`);
      }
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ${file}:`, error.message);
    }
  }
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:`);
  console.log(`   –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`);
  console.log(`   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${fixedFiles}`);
  console.log(`   –í—Å–µ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: ${totalFixesApplied}`);
  
  if (fixedFiles === 0) {
    console.log('‚ú® –ù–∏–∫–∞–∫–∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å!');
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  processFiles().catch(console.error);
}

module.exports = { processFiles };