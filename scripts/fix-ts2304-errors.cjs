#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TS2304 errors (Cannot find name)...\n');

let fixedCount = 0;

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å
const globalVariableFixes = [
  // Window –æ–±—ä–µ–∫—Ç—ã
  {
    pattern: /\bwindow\./g,
    replacement: '(window as any).',
    description: '–¢–∏–ø–∏–∑–∞—Ü–∏—è window –æ–±—ä–µ–∫—Ç–∞'
  },
  
  // Console –º–µ—Ç–æ–¥—ã 
  {
    pattern: /\bconsole\.(log|error|warn|info|debug)\(/g,
    replacement: '(console as any).$1(',
    description: '–¢–∏–ø–∏–∑–∞—Ü–∏—è console –º–µ—Ç–æ–¥–æ–≤'
  },
  
  // Alert –∏ confirm
  {
    pattern: /\balert\(/g,
    replacement: '(window as any).alert(',
    description: '–¢–∏–ø–∏–∑–∞—Ü–∏—è alert —Ñ—É–Ω–∫—Ü–∏–∏'
  },
  
  {
    pattern: /\bconfirm\(/g,
    replacement: '(window as any).confirm(',
    description: '–¢–∏–ø–∏–∑–∞—Ü–∏—è confirm —Ñ—É–Ω–∫—Ü–∏–∏'
  },
  
  // Location –æ–±—ä–µ–∫—Ç
  {
    pattern: /\blocation\.(href|reload|assign)/g,
    replacement: '(window as any).location.$1',
    description: '–¢–∏–ø–∏–∑–∞—Ü–∏—è location –æ–±—ä–µ–∫—Ç–∞'
  }
];

// –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
const missingImportFixes = [
  // route —Ñ—É–Ω–∫—Ü–∏—è –∏–∑ ziggy-js
  {
    pattern: /\broute\(/g,
    checkImport: /import.*route.*from.*ziggy/,
    addImport: "import { route } from 'ziggy-js'",
    replacement: 'route(',
    description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ route –∏–∑ ziggy-js'
  },
  
  // usePage –∏–∑ Inertia
  {
    pattern: /\busePage\(/g,
    checkImport: /import.*usePage.*from.*@inertiajs\/vue3/,
    addImport: "import { usePage } from '@inertiajs/vue3'",
    replacement: 'usePage(',
    description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ usePage –∏–∑ @inertiajs/vue3'
  }
];

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
const specificVariableFixes = [
  // _props –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
  {
    pattern: /const _props = /g,
    replacement: 'const _props: any = ',
    description: '–¢–∏–ø–∏–∑–∞—Ü–∏—è _props –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π'
  },
  
  // dayjs –µ—Å–ª–∏ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
  {
    pattern: /\bdayjs\(/g,
    checkImport: /import.*dayjs/,
    addImport: "import dayjs from 'dayjs'",
    replacement: 'dayjs(',
    description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ dayjs'
  }
];

function fixTS2304InFile(filePath) {
  try {
    if (!fs.existsSync(filePath)) return false;

    let content = fs.readFileSync(filePath, 'utf8');
    const originalContent = content;
    let fixes = [];
    let needsImports = [];

    // 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º <script setup> –Ω–∞ <script setup lang="ts">
    if (content.includes('<script setup>') && !content.includes('<script setup lang="ts">')) {
      content = content.replace(/<script setup>/g, '<script setup lang="ts">');
      fixes.push('–î–æ–±–∞–≤–ª–µ–Ω lang="ts" –∫ script setup');
    }

    // 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    globalVariableFixes.forEach(fix => {
      if (fix.pattern.test(content)) {
        content = content.replace(fix.pattern, fix.replacement);
        fixes.push(fix.description);
      }
    });

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã
    missingImportFixes.forEach(fix => {
      if (fix.pattern.test(content) && !fix.checkImport.test(content)) {
        needsImports.push(fix.addImport);
        fixes.push(fix.description);
      }
    });

    // 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    specificVariableFixes.forEach(fix => {
      if (fix.pattern.test(content)) {
        if (fix.checkImport && !fix.checkImport.test(content)) {
          needsImports.push(fix.addImport);
        }
        content = content.replace(fix.pattern, fix.replacement);
        fixes.push(fix.description);
      }
    });

    // 5. –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–æ script —Å–µ–∫—Ü–∏–∏
    if (needsImports.length > 0) {
      const scriptMatch = content.match(/<script setup lang="ts">\s*\n/);
      if (scriptMatch) {
        const insertPosition = scriptMatch.index + scriptMatch[0].length;
        const importsString = needsImports.join('\n') + '\n\n';
        content = content.slice(0, insertPosition) + importsString + content.slice(insertPosition);
      }
    }

    // 6. –î–æ–±–∞–≤–ª—è–µ–º withDefaults –∏–º–ø–æ—Ä—Ç –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
    if (content.includes('withDefaults(') && !content.includes('withDefaults') && content.includes('import')) {
      content = content.replace(
        /import { ([^}]+) } from 'vue'/,
        "import { $1, withDefaults } from 'vue'"
      );
      fixes.push('–î–æ–±–∞–≤–ª–µ–Ω withDefaults –∏–º–ø–æ—Ä—Ç –∏–∑ vue');
    }

    if (content !== originalContent) {
      fs.writeFileSync(filePath, content, 'utf8');
      console.log(`   ‚úÖ ${path.basename(filePath)}: ${fixes.length} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π`);
      fixes.forEach(fix => console.log(`      ‚Ä¢ ${fix}`));
      fixedCount++;
      return true;
    }

    return false;
  } catch (error) {
    console.log(`   ‚ùå ${path.basename(filePath)}: ${error.message}`);
    return false;
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö Vue –∏ TS —Ñ–∞–π–ª–æ–≤
function getAllVueAndTSFiles() {
  const files = [];
  
  function walkDirectory(dir) {
    const items = fs.readdirSync(dir);
    
    for (const item of items) {
      const fullPath = path.join(dir, item);
      const stat = fs.statSync(fullPath);
      
      if (stat.isDirectory() && !item.startsWith('.') && item !== 'node_modules') {
        walkDirectory(fullPath);
      } else if (stat.isFile() && (item.endsWith('.vue') || item.endsWith('.ts'))) {
        files.push(fullPath);
      }
    }
  }
  
  // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ resources/js
  if (fs.existsSync('resources/js')) {
    walkDirectory('resources/js');
  }
  
  return files;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ global.d.ts —Ñ–∞–π–ª–∞
function updateGlobalTypes() {
  const typesPath = 'resources/js/types/global.d.ts';
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  const typesDir = path.dirname(typesPath);
  if (!fs.existsSync(typesDir)) {
    fs.mkdirSync(typesDir, { recursive: true });
  }
  
  const globalTypes = `// Global type declarations
declare global {
  interface Window {
    dayjs: any;
    route: any;
    [key: string]: any;
  }
  
  const route: (name?: string, params?: any, absolute?: boolean) => string;
  const dayjs: any;
}

export {};
`;
  
  fs.writeFileSync(typesPath, globalTypes, 'utf8');
  console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω ${typesPath}`);
}

// –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
const filesToFix = getAllVueAndTSFiles();

console.log(`üéØ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TS2304 errors –≤ ${filesToFix.length} —Ñ–∞–π–ª–∞—Ö...\n`);

// –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã
console.log('üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤...');
updateGlobalTypes();

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
let processedFiles = 0;
filesToFix.forEach(filePath => {
  processedFiles++;
  if (processedFiles <= 50) { // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∞
    fixTS2304InFile(filePath);
  }
});

console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:`);
console.log(`   üîß –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${processedFiles > 50 ? 50 : processedFiles} –∏–∑ ${filesToFix.length}`);
console.log(`   üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${fixedCount}`);

if (fixedCount > 0) {
  console.log(`\n‚úÖ TS2304 errors –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!`);
  console.log('üß™ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: node scripts/check-errors.cjs');
} else {
  console.log(`\n‚ûñ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–∏—Å—å`);
}