<?php

use App\Domain\Ad\Models\Ad;

require __DIR__.'/vendor/autoload.php';
$app = require_once __DIR__.'/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Http\Kernel::class);
$kernel->handle(Illuminate\Http\Request::capture());

echo "=== –¢–ï–°–¢ –ú–ï–¢–û–ö –ù–ê –ö–ê–†–¢–ï –ò–ó –û–ë–™–Ø–í–õ–ï–ù–ò–ô ===\n\n";

// –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å –∞–¥—Ä–µ—Å–∞–º–∏
$ads = Ad::where('status', 'active')
    ->whereNotNull('address')
    ->take(10)
    ->get(['id', 'title', 'address', 'geo', 'status']);

echo "–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å –∞–¥—Ä–µ—Å–∞–º–∏: " . $ads->count() . "\n\n";

foreach ($ads as $ad) {
    echo "ID: {$ad->id}\n";
    echo "–ó–∞–≥–æ–ª–æ–≤–æ–∫: {$ad->title}\n";
    echo "–ê–¥—Ä–µ—Å: {$ad->address}\n";
    
    // –ü–∞—Ä—Å–∏–º geo –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    $geo = is_string($ad->geo) ? json_decode($ad->geo, true) : $ad->geo;
    
    if (is_array($geo) && isset($geo['lat']) && isset($geo['lng'])) {
        echo "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: lat={$geo['lat']}, lng={$geo['lng']}\n";
        echo "‚úÖ –ú–µ—Ç–∫–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞ –Ω–∞ –∫–∞—Ä—Ç–µ\n";
    } else {
        echo "‚ùå –ù–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç - –º–µ—Ç–∫–∞ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞\n";
    }
    
    echo "---\n";
}

echo "\nüìç –ò–¢–û–ì:\n";
echo "–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ—Ç–æ–∫ –Ω–∞ –∫–∞—Ä—Ç–µ –Ω—É–∂–Ω—ã:\n";
echo "1. –°—Ç–∞—Ç—É—Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è = 'active'\n";
echo "2. –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –ø–æ–ª–µ address\n";
echo "3. –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –ø–æ–ª–µ geo (lat, lng)\n";
echo "\n–ï—Å–ª–∏ –º–µ—Ç–æ–∫ –º–∞–ª–æ, —Å–æ–∑–¥–∞–π—Ç–µ –±–æ–ª—å—à–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å –∞–¥—Ä–µ—Å–∞–º–∏.\n";