<?php

echo "üîÑ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ MediaRepository\n";
echo "===============================\n\n";

try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ Laravel
    require_once 'vendor/autoload.php';
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –Ω–∞–ø—Ä—è–º—É—é
    $media = new App\Domain\Media\Models\Media();
    
    $crudRepo = new App\Domain\Media\Repositories\MediaCrudRepository($media);
    $statsRepo = new App\Domain\Media\Repositories\MediaStatisticsRepository($media);
    $mgmtRepo = new App\Domain\Media\Repositories\MediaManagementRepository($media);
    
    $mediaRepository = new App\Domain\Media\Repositories\MediaRepository(
        $crudRepo,
        $statsRepo, 
        $mgmtRepo
    );
    
    echo "‚úÖ MediaRepository —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ\n";
    echo "   –¢–∏–ø: " . get_class($mediaRepository) . "\n\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:\n";
    $implements = class_implements($mediaRepository);
    foreach ($implements as $interface) {
        echo "   ‚úÖ –†–µ–∞–ª–∏–∑—É–µ—Ç: " . $interface . "\n";
    }
    
    echo "\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã:\n";
    $reflection = new ReflectionClass($mediaRepository);
    $methods = $reflection->getMethods(ReflectionMethod::IS_PUBLIC);
    
    $crudMethods = [];
    $statsMethods = [];
    $mgmtMethods = [];
    
    foreach ($methods as $method) {
        $name = $method->getName();
        
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –∏ –º–∞–≥–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã
        if (in_array($name, ['__construct', '__call', '__get', '__set'])) {
            continue;
        }
        
        if (in_array($name, ['find', 'create', 'update', 'delete', 'findByFileName', 'findByType', 'findByStatus'])) {
            $crudMethods[] = $name;
        } elseif (in_array($name, ['getStatistics', 'getTopLargestFiles', 'getUsageByCollection', 'getProcessingStatistics'])) {
            $statsMethods[] = $name;
        } elseif (in_array($name, ['search', 'batchUpdateStatus', 'batchDelete', 'cleanupExpired'])) {
            $mgmtMethods[] = $name;
        }
    }
    
    echo "   üìù CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ (" . count($crudMethods) . "): " . implode(', ', $crudMethods) . "\n";
    echo "   üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (" . count($statsMethods) . "): " . implode(', ', $statsMethods) . "\n";
    echo "   ‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (" . count($mgmtMethods) . "): " . implode(', ', $mgmtMethods) . "\n";
    
    echo "\nüéØ –ê–ù–ê–õ–ò–ó –†–ï–§–ê–ö–¢–û–†–ò–ù–ì–ê:\n";
    echo "=======================\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞
    $mainFile = file_get_contents('app/Domain/Media/Repositories/MediaRepository.php');
    $mainLines = count(explode("\n", $mainFile));
    
    $crudFile = file_get_contents('app/Domain/Media/Repositories/MediaCrudRepository.php');
    $crudLines = count(explode("\n", $crudFile));
    
    $statsFile = file_get_contents('app/Domain/Media/Repositories/MediaStatisticsRepository.php');
    $statsLines = count(explode("\n", $statsFile));
    
    $mgmtFile = file_get_contents('app/Domain/Media/Repositories/MediaManagementRepository.php');
    $mgmtLines = count(explode("\n", $mgmtFile));
    
    echo "üìä –ú–ï–¢–†–ò–ö–ò –ö–ê–ß–ï–°–¢–í–ê:\n";
    echo "‚Ä¢ MediaRepository: $mainLines —Å—Ç—Ä–æ–∫ " . ($mainLines <= 200 ? "‚úÖ" : "‚ùå") . "\n";
    echo "‚Ä¢ MediaCrudRepository: $crudLines —Å—Ç—Ä–æ–∫ " . ($crudLines <= 200 ? "‚úÖ" : "‚ùå") . "\n";
    echo "‚Ä¢ MediaStatisticsRepository: $statsLines —Å—Ç—Ä–æ–∫ " . ($statsLines <= 200 ? "‚úÖ" : "‚ùå") . "\n";
    echo "‚Ä¢ MediaManagementRepository: $mgmtLines —Å—Ç—Ä–æ–∫ " . ($mgmtLines <= 200 ? "‚úÖ" : "‚ùå") . "\n";
    
    echo "\n‚úÖ –≠–¢–ê–ü 7 - –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–°–´–õ–û–ö –ó–ê–í–ï–†–®–ï–ù!\n";
    echo "=========================================\n";
    echo "‚Ä¢ –°—Ç–∞—Ä—ã–π MediaRepository –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ —Ñ–∞—Å–∞–¥\n";
    echo "‚Ä¢ Dependency Injection –Ω–∞—Å—Ç—Ä–æ–µ–Ω\n";
    echo "‚Ä¢ –í—Å–µ –º–µ—Ç–æ–¥—ã –¥–µ–ª–µ–≥–∏—Ä—É—é—Ç—Å—è –≤ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã\n";
    echo "‚Ä¢ –°–æ–±–ª—é–¥–µ–Ω—ã –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è CLAUDE.md\n";
    echo "‚Ä¢ –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞\n";
    
} catch (Exception $e) {
    echo "‚ùå –û–®–ò–ë–ö–ê: " . $e->getMessage() . "\n";
    echo "   –§–∞–π–ª: " . $e->getFile() . "\n";
    echo "   –°—Ç—Ä–æ–∫–∞: " . $e->getLine() . "\n";
}