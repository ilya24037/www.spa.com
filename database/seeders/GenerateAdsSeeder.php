<?php

namespace Database\Seeders;

use App\Domain\Ad\Models\Ad;
use App\Domain\User\Models\User;
use Illuminate\Database\Seeder;

class GenerateAdsSeeder extends Seeder
{
    public function run(): void
    {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ –∞–¥–º–∏–Ω–æ–≤)
        $users = User::where('role', '!=', 'admin')->get();

        if ($users->isEmpty()) {
            echo "‚ö†Ô∏è –ù–µ—Ç –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –°–æ–∑–¥–∞—é –æ–±—ä—è–≤–ª–µ–Ω–∏—è –±–µ–∑ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è.\n";
            // –°–æ–∑–¥–∞–µ–º 30 –æ–±—ä—è–≤–ª–µ–Ω–∏–π
            Ad::factory(30)->create([
                'status' => 'pending_moderation'
            ]);

            echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ 30 –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏\n";
            return;
        }

        echo "üìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {$users->count()}\n";

        $totalAds = 50; // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
        $adsPerUser = intval($totalAds / $users->count());
        $remainder = $totalAds % $users->count();

        foreach ($users as $index => $user) {
            // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ
            $count = $adsPerUser + ($index < $remainder ? 1 : 0);

            // –°–æ–∑–¥–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            for ($i = 0; $i < $count; $i++) {
                // 60% –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏, 30% –∞–∫—Ç–∏–≤–Ω—ã—Ö, 10% —á–µ—Ä–Ω–æ–≤–∏–∫–∏
                $rand = rand(1, 10);
                if ($rand <= 6) {
                    $status = 'pending_moderation';
                } elseif ($rand <= 9) {
                    $status = 'active';
                } else {
                    $status = 'draft';
                }

                Ad::factory()->create([
                    'user_id' => $user->id,
                    'status' => $status,
                    'is_paid' => $status === 'active' ? true : false,
                    'paid_at' => $status === 'active' ? now() : null,
                ]);
            }

            echo "  ‚úÖ {$user->name}: —Å–æ–∑–¥–∞–Ω–æ {$count} –æ–±—ä—è–≤–ª–µ–Ω–∏–π\n";
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        $stats = Ad::selectRaw('status, COUNT(*) as count')
            ->groupBy('status')
            ->pluck('count', 'status')
            ->toArray();

        echo "\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π:\n";
        foreach ($stats as $status => $count) {
            echo "  - {$status}: {$count}\n";
        }

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        echo "\nüìä –û–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:\n";
        $pendingByUser = Ad::where('status', 'pending_moderation')
            ->selectRaw('user_id, COUNT(*) as count')
            ->groupBy('user_id')
            ->get();

        foreach ($pendingByUser as $stat) {
            $userName = User::find($stat->user_id)->name;
            echo "  - {$userName}: {$stat->count}\n";
        }
    }
}